// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "05/07/2016 10:40:44"
                                                                        
// Verilog Self-Checking Test Bench (with test vectors) for design :    TestVerilog
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module TestVerilog_vlg_sample_tst(
	first_red_pos_x,
	sec_red_pos_x,
	sampler_tx
);
input [9:0] first_red_pos_x;
input [9:0] sec_red_pos_x;
output sampler_tx;

reg sample;
time current_time;
always @(first_red_pos_x or sec_red_pos_x)
                                                                                
begin                                                 
 if ($realtime > 0)                                   
 begin                                                
	if ($realtime == 0 || $realtime != current_time)  
	begin									          
		if (sample === 1'bx)                          
			sample = 0;                               
		else                                          
			sample = ~sample;                         
	end										          
	current_time = $realtime;					      
 end                                                  
end                                                   

assign sampler_tx = sample;
endmodule

module TestVerilog_vlg_check_tst (
	top_grid_x0,
	top_grid_x1,
	top_grid_x2,
	top_grid_x3,
	top_grid_x4,
	top_grid_x5,
	top_grid_x6,
	top_grid_x7,
	top_grid_x8,
	top_grid_x9,
	top_grid_x10,
	top_grid_x11,
	top_grid_x12,
	top_grid_x13,
	top_grid_x14,
	top_grid_x15,
	top_grid_x16,
	top_grid_x17,
	top_grid_x18,
	top_grid_x19,
	top_grid_x20,
	top_grid_x21,
	top_grid_x22,
	top_grid_x23,
	top_grid_x24,
	top_grid_x25,
	top_grid_x26,
	top_grid_x27,
	top_grid_x28,
	top_grid_x29,
	top_grid_x30,
	top_grid_x31,
	sampler_rx
);
input [9:0] top_grid_x0;
input [9:0] top_grid_x1;
input [9:0] top_grid_x2;
input [9:0] top_grid_x3;
input [9:0] top_grid_x4;
input [9:0] top_grid_x5;
input [9:0] top_grid_x6;
input [9:0] top_grid_x7;
input [9:0] top_grid_x8;
input [9:0] top_grid_x9;
input [9:0] top_grid_x10;
input [9:0] top_grid_x11;
input [9:0] top_grid_x12;
input [9:0] top_grid_x13;
input [9:0] top_grid_x14;
input [9:0] top_grid_x15;
input [9:0] top_grid_x16;
input [9:0] top_grid_x17;
input [9:0] top_grid_x18;
input [9:0] top_grid_x19;
input [9:0] top_grid_x20;
input [9:0] top_grid_x21;
input [9:0] top_grid_x22;
input [9:0] top_grid_x23;
input [9:0] top_grid_x24;
input [9:0] top_grid_x25;
input [9:0] top_grid_x26;
input [9:0] top_grid_x27;
input [9:0] top_grid_x28;
input [9:0] top_grid_x29;
input [9:0] top_grid_x30;
input [9:0] top_grid_x31;
input sampler_rx;

reg [9:0] top_grid_x0_expected;
reg [9:0] top_grid_x1_expected;
reg [9:0] top_grid_x2_expected;
reg [9:0] top_grid_x3_expected;
reg [9:0] top_grid_x4_expected;
reg [9:0] top_grid_x5_expected;
reg [9:0] top_grid_x6_expected;
reg [9:0] top_grid_x7_expected;
reg [9:0] top_grid_x8_expected;
reg [9:0] top_grid_x9_expected;
reg [9:0] top_grid_x10_expected;
reg [9:0] top_grid_x11_expected;
reg [9:0] top_grid_x12_expected;
reg [9:0] top_grid_x13_expected;
reg [9:0] top_grid_x14_expected;
reg [9:0] top_grid_x15_expected;
reg [9:0] top_grid_x16_expected;
reg [9:0] top_grid_x17_expected;
reg [9:0] top_grid_x18_expected;
reg [9:0] top_grid_x19_expected;
reg [9:0] top_grid_x20_expected;
reg [9:0] top_grid_x21_expected;
reg [9:0] top_grid_x22_expected;
reg [9:0] top_grid_x23_expected;
reg [9:0] top_grid_x24_expected;
reg [9:0] top_grid_x25_expected;
reg [9:0] top_grid_x26_expected;
reg [9:0] top_grid_x27_expected;
reg [9:0] top_grid_x28_expected;
reg [9:0] top_grid_x29_expected;
reg [9:0] top_grid_x30_expected;
reg [9:0] top_grid_x31_expected;

reg [9:0] top_grid_x0_prev;
reg [9:0] top_grid_x1_prev;
reg [9:0] top_grid_x2_prev;
reg [9:0] top_grid_x3_prev;
reg [9:0] top_grid_x4_prev;
reg [9:0] top_grid_x5_prev;
reg [9:0] top_grid_x6_prev;
reg [9:0] top_grid_x7_prev;
reg [9:0] top_grid_x8_prev;
reg [9:0] top_grid_x9_prev;
reg [9:0] top_grid_x10_prev;
reg [9:0] top_grid_x11_prev;
reg [9:0] top_grid_x12_prev;
reg [9:0] top_grid_x13_prev;
reg [9:0] top_grid_x14_prev;
reg [9:0] top_grid_x15_prev;
reg [9:0] top_grid_x16_prev;
reg [9:0] top_grid_x17_prev;
reg [9:0] top_grid_x18_prev;
reg [9:0] top_grid_x19_prev;
reg [9:0] top_grid_x20_prev;
reg [9:0] top_grid_x21_prev;
reg [9:0] top_grid_x22_prev;
reg [9:0] top_grid_x23_prev;
reg [9:0] top_grid_x24_prev;
reg [9:0] top_grid_x25_prev;
reg [9:0] top_grid_x26_prev;
reg [9:0] top_grid_x27_prev;
reg [9:0] top_grid_x28_prev;
reg [9:0] top_grid_x29_prev;
reg [9:0] top_grid_x30_prev;
reg [9:0] top_grid_x31_prev;

reg [9:0] top_grid_x0_expected_prev;
reg [9:0] top_grid_x1_expected_prev;
reg [9:0] top_grid_x2_expected_prev;
reg [9:0] top_grid_x3_expected_prev;
reg [9:0] top_grid_x4_expected_prev;
reg [9:0] top_grid_x5_expected_prev;
reg [9:0] top_grid_x6_expected_prev;
reg [9:0] top_grid_x7_expected_prev;
reg [9:0] top_grid_x8_expected_prev;
reg [9:0] top_grid_x9_expected_prev;
reg [9:0] top_grid_x10_expected_prev;
reg [9:0] top_grid_x11_expected_prev;
reg [9:0] top_grid_x12_expected_prev;
reg [9:0] top_grid_x13_expected_prev;
reg [9:0] top_grid_x14_expected_prev;
reg [9:0] top_grid_x15_expected_prev;
reg [9:0] top_grid_x16_expected_prev;
reg [9:0] top_grid_x17_expected_prev;
reg [9:0] top_grid_x18_expected_prev;
reg [9:0] top_grid_x19_expected_prev;
reg [9:0] top_grid_x20_expected_prev;
reg [9:0] top_grid_x21_expected_prev;
reg [9:0] top_grid_x22_expected_prev;
reg [9:0] top_grid_x23_expected_prev;
reg [9:0] top_grid_x24_expected_prev;
reg [9:0] top_grid_x25_expected_prev;
reg [9:0] top_grid_x26_expected_prev;
reg [9:0] top_grid_x27_expected_prev;
reg [9:0] top_grid_x28_expected_prev;
reg [9:0] top_grid_x29_expected_prev;
reg [9:0] top_grid_x30_expected_prev;
reg [9:0] top_grid_x31_expected_prev;

reg [9:0] last_top_grid_x0_exp;
reg [9:0] last_top_grid_x1_exp;
reg [9:0] last_top_grid_x2_exp;
reg [9:0] last_top_grid_x3_exp;
reg [9:0] last_top_grid_x4_exp;
reg [9:0] last_top_grid_x5_exp;
reg [9:0] last_top_grid_x6_exp;
reg [9:0] last_top_grid_x7_exp;
reg [9:0] last_top_grid_x8_exp;
reg [9:0] last_top_grid_x9_exp;
reg [9:0] last_top_grid_x10_exp;
reg [9:0] last_top_grid_x11_exp;
reg [9:0] last_top_grid_x12_exp;
reg [9:0] last_top_grid_x13_exp;
reg [9:0] last_top_grid_x14_exp;
reg [9:0] last_top_grid_x15_exp;
reg [9:0] last_top_grid_x16_exp;
reg [9:0] last_top_grid_x17_exp;
reg [9:0] last_top_grid_x18_exp;
reg [9:0] last_top_grid_x19_exp;
reg [9:0] last_top_grid_x20_exp;
reg [9:0] last_top_grid_x21_exp;
reg [9:0] last_top_grid_x22_exp;
reg [9:0] last_top_grid_x23_exp;
reg [9:0] last_top_grid_x24_exp;
reg [9:0] last_top_grid_x25_exp;
reg [9:0] last_top_grid_x26_exp;
reg [9:0] last_top_grid_x27_exp;
reg [9:0] last_top_grid_x28_exp;
reg [9:0] last_top_grid_x29_exp;
reg [9:0] last_top_grid_x30_exp;
reg [9:0] last_top_grid_x31_exp;

reg trigger;

integer i;
integer nummismatches;

reg [1:32] on_first_change ;


initial
begin
trigger = 0;
i = 0;
nummismatches = 0;
on_first_change = 32'b1;
end

// update real /o prevs

always @(trigger)
begin
	top_grid_x0_prev = top_grid_x0;
	top_grid_x1_prev = top_grid_x1;
	top_grid_x2_prev = top_grid_x2;
	top_grid_x3_prev = top_grid_x3;
	top_grid_x4_prev = top_grid_x4;
	top_grid_x5_prev = top_grid_x5;
	top_grid_x6_prev = top_grid_x6;
	top_grid_x7_prev = top_grid_x7;
	top_grid_x8_prev = top_grid_x8;
	top_grid_x9_prev = top_grid_x9;
	top_grid_x10_prev = top_grid_x10;
	top_grid_x11_prev = top_grid_x11;
	top_grid_x12_prev = top_grid_x12;
	top_grid_x13_prev = top_grid_x13;
	top_grid_x14_prev = top_grid_x14;
	top_grid_x15_prev = top_grid_x15;
	top_grid_x16_prev = top_grid_x16;
	top_grid_x17_prev = top_grid_x17;
	top_grid_x18_prev = top_grid_x18;
	top_grid_x19_prev = top_grid_x19;
	top_grid_x20_prev = top_grid_x20;
	top_grid_x21_prev = top_grid_x21;
	top_grid_x22_prev = top_grid_x22;
	top_grid_x23_prev = top_grid_x23;
	top_grid_x24_prev = top_grid_x24;
	top_grid_x25_prev = top_grid_x25;
	top_grid_x26_prev = top_grid_x26;
	top_grid_x27_prev = top_grid_x27;
	top_grid_x28_prev = top_grid_x28;
	top_grid_x29_prev = top_grid_x29;
	top_grid_x30_prev = top_grid_x30;
	top_grid_x31_prev = top_grid_x31;
end

// update expected /o prevs

always @(trigger)
begin
	top_grid_x0_expected_prev = top_grid_x0_expected;
	top_grid_x1_expected_prev = top_grid_x1_expected;
	top_grid_x2_expected_prev = top_grid_x2_expected;
	top_grid_x3_expected_prev = top_grid_x3_expected;
	top_grid_x4_expected_prev = top_grid_x4_expected;
	top_grid_x5_expected_prev = top_grid_x5_expected;
	top_grid_x6_expected_prev = top_grid_x6_expected;
	top_grid_x7_expected_prev = top_grid_x7_expected;
	top_grid_x8_expected_prev = top_grid_x8_expected;
	top_grid_x9_expected_prev = top_grid_x9_expected;
	top_grid_x10_expected_prev = top_grid_x10_expected;
	top_grid_x11_expected_prev = top_grid_x11_expected;
	top_grid_x12_expected_prev = top_grid_x12_expected;
	top_grid_x13_expected_prev = top_grid_x13_expected;
	top_grid_x14_expected_prev = top_grid_x14_expected;
	top_grid_x15_expected_prev = top_grid_x15_expected;
	top_grid_x16_expected_prev = top_grid_x16_expected;
	top_grid_x17_expected_prev = top_grid_x17_expected;
	top_grid_x18_expected_prev = top_grid_x18_expected;
	top_grid_x19_expected_prev = top_grid_x19_expected;
	top_grid_x20_expected_prev = top_grid_x20_expected;
	top_grid_x21_expected_prev = top_grid_x21_expected;
	top_grid_x22_expected_prev = top_grid_x22_expected;
	top_grid_x23_expected_prev = top_grid_x23_expected;
	top_grid_x24_expected_prev = top_grid_x24_expected;
	top_grid_x25_expected_prev = top_grid_x25_expected;
	top_grid_x26_expected_prev = top_grid_x26_expected;
	top_grid_x27_expected_prev = top_grid_x27_expected;
	top_grid_x28_expected_prev = top_grid_x28_expected;
	top_grid_x29_expected_prev = top_grid_x29_expected;
	top_grid_x30_expected_prev = top_grid_x30_expected;
	top_grid_x31_expected_prev = top_grid_x31_expected;
end


// expected top_grid_x0[ 9 ]
initial
begin
	top_grid_x0_expected[9] = 1'bX;
end 
// expected top_grid_x0[ 8 ]
initial
begin
	top_grid_x0_expected[8] = 1'bX;
end 
// expected top_grid_x0[ 7 ]
initial
begin
	top_grid_x0_expected[7] = 1'bX;
end 
// expected top_grid_x0[ 6 ]
initial
begin
	top_grid_x0_expected[6] = 1'bX;
end 
// expected top_grid_x0[ 5 ]
initial
begin
	top_grid_x0_expected[5] = 1'bX;
end 
// expected top_grid_x0[ 4 ]
initial
begin
	top_grid_x0_expected[4] = 1'bX;
end 
// expected top_grid_x0[ 3 ]
initial
begin
	top_grid_x0_expected[3] = 1'bX;
end 
// expected top_grid_x0[ 2 ]
initial
begin
	top_grid_x0_expected[2] = 1'bX;
end 
// expected top_grid_x0[ 1 ]
initial
begin
	top_grid_x0_expected[1] = 1'bX;
end 
// expected top_grid_x0[ 0 ]
initial
begin
	top_grid_x0_expected[0] = 1'bX;
end 
// expected top_grid_x1[ 9 ]
initial
begin
	top_grid_x1_expected[9] = 1'bX;
end 
// expected top_grid_x1[ 8 ]
initial
begin
	top_grid_x1_expected[8] = 1'bX;
end 
// expected top_grid_x1[ 7 ]
initial
begin
	top_grid_x1_expected[7] = 1'bX;
end 
// expected top_grid_x1[ 6 ]
initial
begin
	top_grid_x1_expected[6] = 1'bX;
end 
// expected top_grid_x1[ 5 ]
initial
begin
	top_grid_x1_expected[5] = 1'bX;
end 
// expected top_grid_x1[ 4 ]
initial
begin
	top_grid_x1_expected[4] = 1'bX;
end 
// expected top_grid_x1[ 3 ]
initial
begin
	top_grid_x1_expected[3] = 1'bX;
end 
// expected top_grid_x1[ 2 ]
initial
begin
	top_grid_x1_expected[2] = 1'bX;
end 
// expected top_grid_x1[ 1 ]
initial
begin
	top_grid_x1_expected[1] = 1'bX;
end 
// expected top_grid_x1[ 0 ]
initial
begin
	top_grid_x1_expected[0] = 1'bX;
end 
// expected top_grid_x2[ 9 ]
initial
begin
	top_grid_x2_expected[9] = 1'bX;
end 
// expected top_grid_x2[ 8 ]
initial
begin
	top_grid_x2_expected[8] = 1'bX;
end 
// expected top_grid_x2[ 7 ]
initial
begin
	top_grid_x2_expected[7] = 1'bX;
end 
// expected top_grid_x2[ 6 ]
initial
begin
	top_grid_x2_expected[6] = 1'bX;
end 
// expected top_grid_x2[ 5 ]
initial
begin
	top_grid_x2_expected[5] = 1'bX;
end 
// expected top_grid_x2[ 4 ]
initial
begin
	top_grid_x2_expected[4] = 1'bX;
end 
// expected top_grid_x2[ 3 ]
initial
begin
	top_grid_x2_expected[3] = 1'bX;
end 
// expected top_grid_x2[ 2 ]
initial
begin
	top_grid_x2_expected[2] = 1'bX;
end 
// expected top_grid_x2[ 1 ]
initial
begin
	top_grid_x2_expected[1] = 1'bX;
end 
// expected top_grid_x2[ 0 ]
initial
begin
	top_grid_x2_expected[0] = 1'bX;
end 
// expected top_grid_x3[ 9 ]
initial
begin
	top_grid_x3_expected[9] = 1'bX;
end 
// expected top_grid_x3[ 8 ]
initial
begin
	top_grid_x3_expected[8] = 1'bX;
end 
// expected top_grid_x3[ 7 ]
initial
begin
	top_grid_x3_expected[7] = 1'bX;
end 
// expected top_grid_x3[ 6 ]
initial
begin
	top_grid_x3_expected[6] = 1'bX;
end 
// expected top_grid_x3[ 5 ]
initial
begin
	top_grid_x3_expected[5] = 1'bX;
end 
// expected top_grid_x3[ 4 ]
initial
begin
	top_grid_x3_expected[4] = 1'bX;
end 
// expected top_grid_x3[ 3 ]
initial
begin
	top_grid_x3_expected[3] = 1'bX;
end 
// expected top_grid_x3[ 2 ]
initial
begin
	top_grid_x3_expected[2] = 1'bX;
end 
// expected top_grid_x3[ 1 ]
initial
begin
	top_grid_x3_expected[1] = 1'bX;
end 
// expected top_grid_x3[ 0 ]
initial
begin
	top_grid_x3_expected[0] = 1'bX;
end 
// expected top_grid_x4[ 9 ]
initial
begin
	top_grid_x4_expected[9] = 1'bX;
end 
// expected top_grid_x4[ 8 ]
initial
begin
	top_grid_x4_expected[8] = 1'bX;
end 
// expected top_grid_x4[ 7 ]
initial
begin
	top_grid_x4_expected[7] = 1'bX;
end 
// expected top_grid_x4[ 6 ]
initial
begin
	top_grid_x4_expected[6] = 1'bX;
end 
// expected top_grid_x4[ 5 ]
initial
begin
	top_grid_x4_expected[5] = 1'bX;
end 
// expected top_grid_x4[ 4 ]
initial
begin
	top_grid_x4_expected[4] = 1'bX;
end 
// expected top_grid_x4[ 3 ]
initial
begin
	top_grid_x4_expected[3] = 1'bX;
end 
// expected top_grid_x4[ 2 ]
initial
begin
	top_grid_x4_expected[2] = 1'bX;
end 
// expected top_grid_x4[ 1 ]
initial
begin
	top_grid_x4_expected[1] = 1'bX;
end 
// expected top_grid_x4[ 0 ]
initial
begin
	top_grid_x4_expected[0] = 1'bX;
end 
// expected top_grid_x5[ 9 ]
initial
begin
	top_grid_x5_expected[9] = 1'bX;
end 
// expected top_grid_x5[ 8 ]
initial
begin
	top_grid_x5_expected[8] = 1'bX;
end 
// expected top_grid_x5[ 7 ]
initial
begin
	top_grid_x5_expected[7] = 1'bX;
end 
// expected top_grid_x5[ 6 ]
initial
begin
	top_grid_x5_expected[6] = 1'bX;
end 
// expected top_grid_x5[ 5 ]
initial
begin
	top_grid_x5_expected[5] = 1'bX;
end 
// expected top_grid_x5[ 4 ]
initial
begin
	top_grid_x5_expected[4] = 1'bX;
end 
// expected top_grid_x5[ 3 ]
initial
begin
	top_grid_x5_expected[3] = 1'bX;
end 
// expected top_grid_x5[ 2 ]
initial
begin
	top_grid_x5_expected[2] = 1'bX;
end 
// expected top_grid_x5[ 1 ]
initial
begin
	top_grid_x5_expected[1] = 1'bX;
end 
// expected top_grid_x5[ 0 ]
initial
begin
	top_grid_x5_expected[0] = 1'bX;
end 
// expected top_grid_x6[ 9 ]
initial
begin
	top_grid_x6_expected[9] = 1'bX;
end 
// expected top_grid_x6[ 8 ]
initial
begin
	top_grid_x6_expected[8] = 1'bX;
end 
// expected top_grid_x6[ 7 ]
initial
begin
	top_grid_x6_expected[7] = 1'bX;
end 
// expected top_grid_x6[ 6 ]
initial
begin
	top_grid_x6_expected[6] = 1'bX;
end 
// expected top_grid_x6[ 5 ]
initial
begin
	top_grid_x6_expected[5] = 1'bX;
end 
// expected top_grid_x6[ 4 ]
initial
begin
	top_grid_x6_expected[4] = 1'bX;
end 
// expected top_grid_x6[ 3 ]
initial
begin
	top_grid_x6_expected[3] = 1'bX;
end 
// expected top_grid_x6[ 2 ]
initial
begin
	top_grid_x6_expected[2] = 1'bX;
end 
// expected top_grid_x6[ 1 ]
initial
begin
	top_grid_x6_expected[1] = 1'bX;
end 
// expected top_grid_x6[ 0 ]
initial
begin
	top_grid_x6_expected[0] = 1'bX;
end 
// expected top_grid_x7[ 9 ]
initial
begin
	top_grid_x7_expected[9] = 1'bX;
end 
// expected top_grid_x7[ 8 ]
initial
begin
	top_grid_x7_expected[8] = 1'bX;
end 
// expected top_grid_x7[ 7 ]
initial
begin
	top_grid_x7_expected[7] = 1'bX;
end 
// expected top_grid_x7[ 6 ]
initial
begin
	top_grid_x7_expected[6] = 1'bX;
end 
// expected top_grid_x7[ 5 ]
initial
begin
	top_grid_x7_expected[5] = 1'bX;
end 
// expected top_grid_x7[ 4 ]
initial
begin
	top_grid_x7_expected[4] = 1'bX;
end 
// expected top_grid_x7[ 3 ]
initial
begin
	top_grid_x7_expected[3] = 1'bX;
end 
// expected top_grid_x7[ 2 ]
initial
begin
	top_grid_x7_expected[2] = 1'bX;
end 
// expected top_grid_x7[ 1 ]
initial
begin
	top_grid_x7_expected[1] = 1'bX;
end 
// expected top_grid_x7[ 0 ]
initial
begin
	top_grid_x7_expected[0] = 1'bX;
end 
// expected top_grid_x8[ 9 ]
initial
begin
	top_grid_x8_expected[9] = 1'bX;
end 
// expected top_grid_x8[ 8 ]
initial
begin
	top_grid_x8_expected[8] = 1'bX;
end 
// expected top_grid_x8[ 7 ]
initial
begin
	top_grid_x8_expected[7] = 1'bX;
end 
// expected top_grid_x8[ 6 ]
initial
begin
	top_grid_x8_expected[6] = 1'bX;
end 
// expected top_grid_x8[ 5 ]
initial
begin
	top_grid_x8_expected[5] = 1'bX;
end 
// expected top_grid_x8[ 4 ]
initial
begin
	top_grid_x8_expected[4] = 1'bX;
end 
// expected top_grid_x8[ 3 ]
initial
begin
	top_grid_x8_expected[3] = 1'bX;
end 
// expected top_grid_x8[ 2 ]
initial
begin
	top_grid_x8_expected[2] = 1'bX;
end 
// expected top_grid_x8[ 1 ]
initial
begin
	top_grid_x8_expected[1] = 1'bX;
end 
// expected top_grid_x8[ 0 ]
initial
begin
	top_grid_x8_expected[0] = 1'bX;
end 
// expected top_grid_x9[ 9 ]
initial
begin
	top_grid_x9_expected[9] = 1'bX;
end 
// expected top_grid_x9[ 8 ]
initial
begin
	top_grid_x9_expected[8] = 1'bX;
end 
// expected top_grid_x9[ 7 ]
initial
begin
	top_grid_x9_expected[7] = 1'bX;
end 
// expected top_grid_x9[ 6 ]
initial
begin
	top_grid_x9_expected[6] = 1'bX;
end 
// expected top_grid_x9[ 5 ]
initial
begin
	top_grid_x9_expected[5] = 1'bX;
end 
// expected top_grid_x9[ 4 ]
initial
begin
	top_grid_x9_expected[4] = 1'bX;
end 
// expected top_grid_x9[ 3 ]
initial
begin
	top_grid_x9_expected[3] = 1'bX;
end 
// expected top_grid_x9[ 2 ]
initial
begin
	top_grid_x9_expected[2] = 1'bX;
end 
// expected top_grid_x9[ 1 ]
initial
begin
	top_grid_x9_expected[1] = 1'bX;
end 
// expected top_grid_x9[ 0 ]
initial
begin
	top_grid_x9_expected[0] = 1'bX;
end 
// expected top_grid_x10[ 9 ]
initial
begin
	top_grid_x10_expected[9] = 1'bX;
end 
// expected top_grid_x10[ 8 ]
initial
begin
	top_grid_x10_expected[8] = 1'bX;
end 
// expected top_grid_x10[ 7 ]
initial
begin
	top_grid_x10_expected[7] = 1'bX;
end 
// expected top_grid_x10[ 6 ]
initial
begin
	top_grid_x10_expected[6] = 1'bX;
end 
// expected top_grid_x10[ 5 ]
initial
begin
	top_grid_x10_expected[5] = 1'bX;
end 
// expected top_grid_x10[ 4 ]
initial
begin
	top_grid_x10_expected[4] = 1'bX;
end 
// expected top_grid_x10[ 3 ]
initial
begin
	top_grid_x10_expected[3] = 1'bX;
end 
// expected top_grid_x10[ 2 ]
initial
begin
	top_grid_x10_expected[2] = 1'bX;
end 
// expected top_grid_x10[ 1 ]
initial
begin
	top_grid_x10_expected[1] = 1'bX;
end 
// expected top_grid_x10[ 0 ]
initial
begin
	top_grid_x10_expected[0] = 1'bX;
end 
// expected top_grid_x11[ 9 ]
initial
begin
	top_grid_x11_expected[9] = 1'bX;
end 
// expected top_grid_x11[ 8 ]
initial
begin
	top_grid_x11_expected[8] = 1'bX;
end 
// expected top_grid_x11[ 7 ]
initial
begin
	top_grid_x11_expected[7] = 1'bX;
end 
// expected top_grid_x11[ 6 ]
initial
begin
	top_grid_x11_expected[6] = 1'bX;
end 
// expected top_grid_x11[ 5 ]
initial
begin
	top_grid_x11_expected[5] = 1'bX;
end 
// expected top_grid_x11[ 4 ]
initial
begin
	top_grid_x11_expected[4] = 1'bX;
end 
// expected top_grid_x11[ 3 ]
initial
begin
	top_grid_x11_expected[3] = 1'bX;
end 
// expected top_grid_x11[ 2 ]
initial
begin
	top_grid_x11_expected[2] = 1'bX;
end 
// expected top_grid_x11[ 1 ]
initial
begin
	top_grid_x11_expected[1] = 1'bX;
end 
// expected top_grid_x11[ 0 ]
initial
begin
	top_grid_x11_expected[0] = 1'bX;
end 
// expected top_grid_x12[ 9 ]
initial
begin
	top_grid_x12_expected[9] = 1'bX;
end 
// expected top_grid_x12[ 8 ]
initial
begin
	top_grid_x12_expected[8] = 1'bX;
end 
// expected top_grid_x12[ 7 ]
initial
begin
	top_grid_x12_expected[7] = 1'bX;
end 
// expected top_grid_x12[ 6 ]
initial
begin
	top_grid_x12_expected[6] = 1'bX;
end 
// expected top_grid_x12[ 5 ]
initial
begin
	top_grid_x12_expected[5] = 1'bX;
end 
// expected top_grid_x12[ 4 ]
initial
begin
	top_grid_x12_expected[4] = 1'bX;
end 
// expected top_grid_x12[ 3 ]
initial
begin
	top_grid_x12_expected[3] = 1'bX;
end 
// expected top_grid_x12[ 2 ]
initial
begin
	top_grid_x12_expected[2] = 1'bX;
end 
// expected top_grid_x12[ 1 ]
initial
begin
	top_grid_x12_expected[1] = 1'bX;
end 
// expected top_grid_x12[ 0 ]
initial
begin
	top_grid_x12_expected[0] = 1'bX;
end 
// expected top_grid_x13[ 9 ]
initial
begin
	top_grid_x13_expected[9] = 1'bX;
end 
// expected top_grid_x13[ 8 ]
initial
begin
	top_grid_x13_expected[8] = 1'bX;
end 
// expected top_grid_x13[ 7 ]
initial
begin
	top_grid_x13_expected[7] = 1'bX;
end 
// expected top_grid_x13[ 6 ]
initial
begin
	top_grid_x13_expected[6] = 1'bX;
end 
// expected top_grid_x13[ 5 ]
initial
begin
	top_grid_x13_expected[5] = 1'bX;
end 
// expected top_grid_x13[ 4 ]
initial
begin
	top_grid_x13_expected[4] = 1'bX;
end 
// expected top_grid_x13[ 3 ]
initial
begin
	top_grid_x13_expected[3] = 1'bX;
end 
// expected top_grid_x13[ 2 ]
initial
begin
	top_grid_x13_expected[2] = 1'bX;
end 
// expected top_grid_x13[ 1 ]
initial
begin
	top_grid_x13_expected[1] = 1'bX;
end 
// expected top_grid_x13[ 0 ]
initial
begin
	top_grid_x13_expected[0] = 1'bX;
end 
// expected top_grid_x14[ 9 ]
initial
begin
	top_grid_x14_expected[9] = 1'bX;
end 
// expected top_grid_x14[ 8 ]
initial
begin
	top_grid_x14_expected[8] = 1'bX;
end 
// expected top_grid_x14[ 7 ]
initial
begin
	top_grid_x14_expected[7] = 1'bX;
end 
// expected top_grid_x14[ 6 ]
initial
begin
	top_grid_x14_expected[6] = 1'bX;
end 
// expected top_grid_x14[ 5 ]
initial
begin
	top_grid_x14_expected[5] = 1'bX;
end 
// expected top_grid_x14[ 4 ]
initial
begin
	top_grid_x14_expected[4] = 1'bX;
end 
// expected top_grid_x14[ 3 ]
initial
begin
	top_grid_x14_expected[3] = 1'bX;
end 
// expected top_grid_x14[ 2 ]
initial
begin
	top_grid_x14_expected[2] = 1'bX;
end 
// expected top_grid_x14[ 1 ]
initial
begin
	top_grid_x14_expected[1] = 1'bX;
end 
// expected top_grid_x14[ 0 ]
initial
begin
	top_grid_x14_expected[0] = 1'bX;
end 
// expected top_grid_x15[ 9 ]
initial
begin
	top_grid_x15_expected[9] = 1'bX;
end 
// expected top_grid_x15[ 8 ]
initial
begin
	top_grid_x15_expected[8] = 1'bX;
end 
// expected top_grid_x15[ 7 ]
initial
begin
	top_grid_x15_expected[7] = 1'bX;
end 
// expected top_grid_x15[ 6 ]
initial
begin
	top_grid_x15_expected[6] = 1'bX;
end 
// expected top_grid_x15[ 5 ]
initial
begin
	top_grid_x15_expected[5] = 1'bX;
end 
// expected top_grid_x15[ 4 ]
initial
begin
	top_grid_x15_expected[4] = 1'bX;
end 
// expected top_grid_x15[ 3 ]
initial
begin
	top_grid_x15_expected[3] = 1'bX;
end 
// expected top_grid_x15[ 2 ]
initial
begin
	top_grid_x15_expected[2] = 1'bX;
end 
// expected top_grid_x15[ 1 ]
initial
begin
	top_grid_x15_expected[1] = 1'bX;
end 
// expected top_grid_x15[ 0 ]
initial
begin
	top_grid_x15_expected[0] = 1'bX;
end 
// expected top_grid_x16[ 9 ]
initial
begin
	top_grid_x16_expected[9] = 1'bX;
end 
// expected top_grid_x16[ 8 ]
initial
begin
	top_grid_x16_expected[8] = 1'bX;
end 
// expected top_grid_x16[ 7 ]
initial
begin
	top_grid_x16_expected[7] = 1'bX;
end 
// expected top_grid_x16[ 6 ]
initial
begin
	top_grid_x16_expected[6] = 1'bX;
end 
// expected top_grid_x16[ 5 ]
initial
begin
	top_grid_x16_expected[5] = 1'bX;
end 
// expected top_grid_x16[ 4 ]
initial
begin
	top_grid_x16_expected[4] = 1'bX;
end 
// expected top_grid_x16[ 3 ]
initial
begin
	top_grid_x16_expected[3] = 1'bX;
end 
// expected top_grid_x16[ 2 ]
initial
begin
	top_grid_x16_expected[2] = 1'bX;
end 
// expected top_grid_x16[ 1 ]
initial
begin
	top_grid_x16_expected[1] = 1'bX;
end 
// expected top_grid_x16[ 0 ]
initial
begin
	top_grid_x16_expected[0] = 1'bX;
end 
// expected top_grid_x17[ 9 ]
initial
begin
	top_grid_x17_expected[9] = 1'bX;
end 
// expected top_grid_x17[ 8 ]
initial
begin
	top_grid_x17_expected[8] = 1'bX;
end 
// expected top_grid_x17[ 7 ]
initial
begin
	top_grid_x17_expected[7] = 1'bX;
end 
// expected top_grid_x17[ 6 ]
initial
begin
	top_grid_x17_expected[6] = 1'bX;
end 
// expected top_grid_x17[ 5 ]
initial
begin
	top_grid_x17_expected[5] = 1'bX;
end 
// expected top_grid_x17[ 4 ]
initial
begin
	top_grid_x17_expected[4] = 1'bX;
end 
// expected top_grid_x17[ 3 ]
initial
begin
	top_grid_x17_expected[3] = 1'bX;
end 
// expected top_grid_x17[ 2 ]
initial
begin
	top_grid_x17_expected[2] = 1'bX;
end 
// expected top_grid_x17[ 1 ]
initial
begin
	top_grid_x17_expected[1] = 1'bX;
end 
// expected top_grid_x17[ 0 ]
initial
begin
	top_grid_x17_expected[0] = 1'bX;
end 
// expected top_grid_x18[ 9 ]
initial
begin
	top_grid_x18_expected[9] = 1'bX;
end 
// expected top_grid_x18[ 8 ]
initial
begin
	top_grid_x18_expected[8] = 1'bX;
end 
// expected top_grid_x18[ 7 ]
initial
begin
	top_grid_x18_expected[7] = 1'bX;
end 
// expected top_grid_x18[ 6 ]
initial
begin
	top_grid_x18_expected[6] = 1'bX;
end 
// expected top_grid_x18[ 5 ]
initial
begin
	top_grid_x18_expected[5] = 1'bX;
end 
// expected top_grid_x18[ 4 ]
initial
begin
	top_grid_x18_expected[4] = 1'bX;
end 
// expected top_grid_x18[ 3 ]
initial
begin
	top_grid_x18_expected[3] = 1'bX;
end 
// expected top_grid_x18[ 2 ]
initial
begin
	top_grid_x18_expected[2] = 1'bX;
end 
// expected top_grid_x18[ 1 ]
initial
begin
	top_grid_x18_expected[1] = 1'bX;
end 
// expected top_grid_x18[ 0 ]
initial
begin
	top_grid_x18_expected[0] = 1'bX;
end 
// expected top_grid_x19[ 9 ]
initial
begin
	top_grid_x19_expected[9] = 1'bX;
end 
// expected top_grid_x19[ 8 ]
initial
begin
	top_grid_x19_expected[8] = 1'bX;
end 
// expected top_grid_x19[ 7 ]
initial
begin
	top_grid_x19_expected[7] = 1'bX;
end 
// expected top_grid_x19[ 6 ]
initial
begin
	top_grid_x19_expected[6] = 1'bX;
end 
// expected top_grid_x19[ 5 ]
initial
begin
	top_grid_x19_expected[5] = 1'bX;
end 
// expected top_grid_x19[ 4 ]
initial
begin
	top_grid_x19_expected[4] = 1'bX;
end 
// expected top_grid_x19[ 3 ]
initial
begin
	top_grid_x19_expected[3] = 1'bX;
end 
// expected top_grid_x19[ 2 ]
initial
begin
	top_grid_x19_expected[2] = 1'bX;
end 
// expected top_grid_x19[ 1 ]
initial
begin
	top_grid_x19_expected[1] = 1'bX;
end 
// expected top_grid_x19[ 0 ]
initial
begin
	top_grid_x19_expected[0] = 1'bX;
end 
// expected top_grid_x20[ 9 ]
initial
begin
	top_grid_x20_expected[9] = 1'bX;
end 
// expected top_grid_x20[ 8 ]
initial
begin
	top_grid_x20_expected[8] = 1'bX;
end 
// expected top_grid_x20[ 7 ]
initial
begin
	top_grid_x20_expected[7] = 1'bX;
end 
// expected top_grid_x20[ 6 ]
initial
begin
	top_grid_x20_expected[6] = 1'bX;
end 
// expected top_grid_x20[ 5 ]
initial
begin
	top_grid_x20_expected[5] = 1'bX;
end 
// expected top_grid_x20[ 4 ]
initial
begin
	top_grid_x20_expected[4] = 1'bX;
end 
// expected top_grid_x20[ 3 ]
initial
begin
	top_grid_x20_expected[3] = 1'bX;
end 
// expected top_grid_x20[ 2 ]
initial
begin
	top_grid_x20_expected[2] = 1'bX;
end 
// expected top_grid_x20[ 1 ]
initial
begin
	top_grid_x20_expected[1] = 1'bX;
end 
// expected top_grid_x20[ 0 ]
initial
begin
	top_grid_x20_expected[0] = 1'bX;
end 
// expected top_grid_x21[ 9 ]
initial
begin
	top_grid_x21_expected[9] = 1'bX;
end 
// expected top_grid_x21[ 8 ]
initial
begin
	top_grid_x21_expected[8] = 1'bX;
end 
// expected top_grid_x21[ 7 ]
initial
begin
	top_grid_x21_expected[7] = 1'bX;
end 
// expected top_grid_x21[ 6 ]
initial
begin
	top_grid_x21_expected[6] = 1'bX;
end 
// expected top_grid_x21[ 5 ]
initial
begin
	top_grid_x21_expected[5] = 1'bX;
end 
// expected top_grid_x21[ 4 ]
initial
begin
	top_grid_x21_expected[4] = 1'bX;
end 
// expected top_grid_x21[ 3 ]
initial
begin
	top_grid_x21_expected[3] = 1'bX;
end 
// expected top_grid_x21[ 2 ]
initial
begin
	top_grid_x21_expected[2] = 1'bX;
end 
// expected top_grid_x21[ 1 ]
initial
begin
	top_grid_x21_expected[1] = 1'bX;
end 
// expected top_grid_x21[ 0 ]
initial
begin
	top_grid_x21_expected[0] = 1'bX;
end 
// expected top_grid_x22[ 9 ]
initial
begin
	top_grid_x22_expected[9] = 1'bX;
end 
// expected top_grid_x22[ 8 ]
initial
begin
	top_grid_x22_expected[8] = 1'bX;
end 
// expected top_grid_x22[ 7 ]
initial
begin
	top_grid_x22_expected[7] = 1'bX;
end 
// expected top_grid_x22[ 6 ]
initial
begin
	top_grid_x22_expected[6] = 1'bX;
end 
// expected top_grid_x22[ 5 ]
initial
begin
	top_grid_x22_expected[5] = 1'bX;
end 
// expected top_grid_x22[ 4 ]
initial
begin
	top_grid_x22_expected[4] = 1'bX;
end 
// expected top_grid_x22[ 3 ]
initial
begin
	top_grid_x22_expected[3] = 1'bX;
end 
// expected top_grid_x22[ 2 ]
initial
begin
	top_grid_x22_expected[2] = 1'bX;
end 
// expected top_grid_x22[ 1 ]
initial
begin
	top_grid_x22_expected[1] = 1'bX;
end 
// expected top_grid_x22[ 0 ]
initial
begin
	top_grid_x22_expected[0] = 1'bX;
end 
// expected top_grid_x23[ 9 ]
initial
begin
	top_grid_x23_expected[9] = 1'bX;
end 
// expected top_grid_x23[ 8 ]
initial
begin
	top_grid_x23_expected[8] = 1'bX;
end 
// expected top_grid_x23[ 7 ]
initial
begin
	top_grid_x23_expected[7] = 1'bX;
end 
// expected top_grid_x23[ 6 ]
initial
begin
	top_grid_x23_expected[6] = 1'bX;
end 
// expected top_grid_x23[ 5 ]
initial
begin
	top_grid_x23_expected[5] = 1'bX;
end 
// expected top_grid_x23[ 4 ]
initial
begin
	top_grid_x23_expected[4] = 1'bX;
end 
// expected top_grid_x23[ 3 ]
initial
begin
	top_grid_x23_expected[3] = 1'bX;
end 
// expected top_grid_x23[ 2 ]
initial
begin
	top_grid_x23_expected[2] = 1'bX;
end 
// expected top_grid_x23[ 1 ]
initial
begin
	top_grid_x23_expected[1] = 1'bX;
end 
// expected top_grid_x23[ 0 ]
initial
begin
	top_grid_x23_expected[0] = 1'bX;
end 
// expected top_grid_x24[ 9 ]
initial
begin
	top_grid_x24_expected[9] = 1'bX;
end 
// expected top_grid_x24[ 8 ]
initial
begin
	top_grid_x24_expected[8] = 1'bX;
end 
// expected top_grid_x24[ 7 ]
initial
begin
	top_grid_x24_expected[7] = 1'bX;
end 
// expected top_grid_x24[ 6 ]
initial
begin
	top_grid_x24_expected[6] = 1'bX;
end 
// expected top_grid_x24[ 5 ]
initial
begin
	top_grid_x24_expected[5] = 1'bX;
end 
// expected top_grid_x24[ 4 ]
initial
begin
	top_grid_x24_expected[4] = 1'bX;
end 
// expected top_grid_x24[ 3 ]
initial
begin
	top_grid_x24_expected[3] = 1'bX;
end 
// expected top_grid_x24[ 2 ]
initial
begin
	top_grid_x24_expected[2] = 1'bX;
end 
// expected top_grid_x24[ 1 ]
initial
begin
	top_grid_x24_expected[1] = 1'bX;
end 
// expected top_grid_x24[ 0 ]
initial
begin
	top_grid_x24_expected[0] = 1'bX;
end 
// expected top_grid_x25[ 9 ]
initial
begin
	top_grid_x25_expected[9] = 1'bX;
end 
// expected top_grid_x25[ 8 ]
initial
begin
	top_grid_x25_expected[8] = 1'bX;
end 
// expected top_grid_x25[ 7 ]
initial
begin
	top_grid_x25_expected[7] = 1'bX;
end 
// expected top_grid_x25[ 6 ]
initial
begin
	top_grid_x25_expected[6] = 1'bX;
end 
// expected top_grid_x25[ 5 ]
initial
begin
	top_grid_x25_expected[5] = 1'bX;
end 
// expected top_grid_x25[ 4 ]
initial
begin
	top_grid_x25_expected[4] = 1'bX;
end 
// expected top_grid_x25[ 3 ]
initial
begin
	top_grid_x25_expected[3] = 1'bX;
end 
// expected top_grid_x25[ 2 ]
initial
begin
	top_grid_x25_expected[2] = 1'bX;
end 
// expected top_grid_x25[ 1 ]
initial
begin
	top_grid_x25_expected[1] = 1'bX;
end 
// expected top_grid_x25[ 0 ]
initial
begin
	top_grid_x25_expected[0] = 1'bX;
end 
// expected top_grid_x26[ 9 ]
initial
begin
	top_grid_x26_expected[9] = 1'bX;
end 
// expected top_grid_x26[ 8 ]
initial
begin
	top_grid_x26_expected[8] = 1'bX;
end 
// expected top_grid_x26[ 7 ]
initial
begin
	top_grid_x26_expected[7] = 1'bX;
end 
// expected top_grid_x26[ 6 ]
initial
begin
	top_grid_x26_expected[6] = 1'bX;
end 
// expected top_grid_x26[ 5 ]
initial
begin
	top_grid_x26_expected[5] = 1'bX;
end 
// expected top_grid_x26[ 4 ]
initial
begin
	top_grid_x26_expected[4] = 1'bX;
end 
// expected top_grid_x26[ 3 ]
initial
begin
	top_grid_x26_expected[3] = 1'bX;
end 
// expected top_grid_x26[ 2 ]
initial
begin
	top_grid_x26_expected[2] = 1'bX;
end 
// expected top_grid_x26[ 1 ]
initial
begin
	top_grid_x26_expected[1] = 1'bX;
end 
// expected top_grid_x26[ 0 ]
initial
begin
	top_grid_x26_expected[0] = 1'bX;
end 
// expected top_grid_x27[ 9 ]
initial
begin
	top_grid_x27_expected[9] = 1'bX;
end 
// expected top_grid_x27[ 8 ]
initial
begin
	top_grid_x27_expected[8] = 1'bX;
end 
// expected top_grid_x27[ 7 ]
initial
begin
	top_grid_x27_expected[7] = 1'bX;
end 
// expected top_grid_x27[ 6 ]
initial
begin
	top_grid_x27_expected[6] = 1'bX;
end 
// expected top_grid_x27[ 5 ]
initial
begin
	top_grid_x27_expected[5] = 1'bX;
end 
// expected top_grid_x27[ 4 ]
initial
begin
	top_grid_x27_expected[4] = 1'bX;
end 
// expected top_grid_x27[ 3 ]
initial
begin
	top_grid_x27_expected[3] = 1'bX;
end 
// expected top_grid_x27[ 2 ]
initial
begin
	top_grid_x27_expected[2] = 1'bX;
end 
// expected top_grid_x27[ 1 ]
initial
begin
	top_grid_x27_expected[1] = 1'bX;
end 
// expected top_grid_x27[ 0 ]
initial
begin
	top_grid_x27_expected[0] = 1'bX;
end 
// expected top_grid_x28[ 9 ]
initial
begin
	top_grid_x28_expected[9] = 1'bX;
end 
// expected top_grid_x28[ 8 ]
initial
begin
	top_grid_x28_expected[8] = 1'bX;
end 
// expected top_grid_x28[ 7 ]
initial
begin
	top_grid_x28_expected[7] = 1'bX;
end 
// expected top_grid_x28[ 6 ]
initial
begin
	top_grid_x28_expected[6] = 1'bX;
end 
// expected top_grid_x28[ 5 ]
initial
begin
	top_grid_x28_expected[5] = 1'bX;
end 
// expected top_grid_x28[ 4 ]
initial
begin
	top_grid_x28_expected[4] = 1'bX;
end 
// expected top_grid_x28[ 3 ]
initial
begin
	top_grid_x28_expected[3] = 1'bX;
end 
// expected top_grid_x28[ 2 ]
initial
begin
	top_grid_x28_expected[2] = 1'bX;
end 
// expected top_grid_x28[ 1 ]
initial
begin
	top_grid_x28_expected[1] = 1'bX;
end 
// expected top_grid_x28[ 0 ]
initial
begin
	top_grid_x28_expected[0] = 1'bX;
end 
// expected top_grid_x29[ 9 ]
initial
begin
	top_grid_x29_expected[9] = 1'bX;
end 
// expected top_grid_x29[ 8 ]
initial
begin
	top_grid_x29_expected[8] = 1'bX;
end 
// expected top_grid_x29[ 7 ]
initial
begin
	top_grid_x29_expected[7] = 1'bX;
end 
// expected top_grid_x29[ 6 ]
initial
begin
	top_grid_x29_expected[6] = 1'bX;
end 
// expected top_grid_x29[ 5 ]
initial
begin
	top_grid_x29_expected[5] = 1'bX;
end 
// expected top_grid_x29[ 4 ]
initial
begin
	top_grid_x29_expected[4] = 1'bX;
end 
// expected top_grid_x29[ 3 ]
initial
begin
	top_grid_x29_expected[3] = 1'bX;
end 
// expected top_grid_x29[ 2 ]
initial
begin
	top_grid_x29_expected[2] = 1'bX;
end 
// expected top_grid_x29[ 1 ]
initial
begin
	top_grid_x29_expected[1] = 1'bX;
end 
// expected top_grid_x29[ 0 ]
initial
begin
	top_grid_x29_expected[0] = 1'bX;
end 
// expected top_grid_x30[ 9 ]
initial
begin
	top_grid_x30_expected[9] = 1'bX;
end 
// expected top_grid_x30[ 8 ]
initial
begin
	top_grid_x30_expected[8] = 1'bX;
end 
// expected top_grid_x30[ 7 ]
initial
begin
	top_grid_x30_expected[7] = 1'bX;
end 
// expected top_grid_x30[ 6 ]
initial
begin
	top_grid_x30_expected[6] = 1'bX;
end 
// expected top_grid_x30[ 5 ]
initial
begin
	top_grid_x30_expected[5] = 1'bX;
end 
// expected top_grid_x30[ 4 ]
initial
begin
	top_grid_x30_expected[4] = 1'bX;
end 
// expected top_grid_x30[ 3 ]
initial
begin
	top_grid_x30_expected[3] = 1'bX;
end 
// expected top_grid_x30[ 2 ]
initial
begin
	top_grid_x30_expected[2] = 1'bX;
end 
// expected top_grid_x30[ 1 ]
initial
begin
	top_grid_x30_expected[1] = 1'bX;
end 
// expected top_grid_x30[ 0 ]
initial
begin
	top_grid_x30_expected[0] = 1'bX;
end 
// expected top_grid_x31[ 9 ]
initial
begin
	top_grid_x31_expected[9] = 1'bX;
end 
// expected top_grid_x31[ 8 ]
initial
begin
	top_grid_x31_expected[8] = 1'bX;
end 
// expected top_grid_x31[ 7 ]
initial
begin
	top_grid_x31_expected[7] = 1'bX;
end 
// expected top_grid_x31[ 6 ]
initial
begin
	top_grid_x31_expected[6] = 1'bX;
end 
// expected top_grid_x31[ 5 ]
initial
begin
	top_grid_x31_expected[5] = 1'bX;
end 
// expected top_grid_x31[ 4 ]
initial
begin
	top_grid_x31_expected[4] = 1'bX;
end 
// expected top_grid_x31[ 3 ]
initial
begin
	top_grid_x31_expected[3] = 1'bX;
end 
// expected top_grid_x31[ 2 ]
initial
begin
	top_grid_x31_expected[2] = 1'bX;
end 
// expected top_grid_x31[ 1 ]
initial
begin
	top_grid_x31_expected[1] = 1'bX;
end 
// expected top_grid_x31[ 0 ]
initial
begin
	top_grid_x31_expected[0] = 1'bX;
end 
// generate trigger
always @(top_grid_x0_expected or top_grid_x0 or top_grid_x1_expected or top_grid_x1 or top_grid_x2_expected or top_grid_x2 or top_grid_x3_expected or top_grid_x3 or top_grid_x4_expected or top_grid_x4 or top_grid_x5_expected or top_grid_x5 or top_grid_x6_expected or top_grid_x6 or top_grid_x7_expected or top_grid_x7 or top_grid_x8_expected or top_grid_x8 or top_grid_x9_expected or top_grid_x9 or top_grid_x10_expected or top_grid_x10 or top_grid_x11_expected or top_grid_x11 or top_grid_x12_expected or top_grid_x12 or top_grid_x13_expected or top_grid_x13 or top_grid_x14_expected or top_grid_x14 or top_grid_x15_expected or top_grid_x15 or top_grid_x16_expected or top_grid_x16 or top_grid_x17_expected or top_grid_x17 or top_grid_x18_expected or top_grid_x18 or top_grid_x19_expected or top_grid_x19 or top_grid_x20_expected or top_grid_x20 or top_grid_x21_expected or top_grid_x21 or top_grid_x22_expected or top_grid_x22 or top_grid_x23_expected or top_grid_x23 or top_grid_x24_expected or top_grid_x24 or top_grid_x25_expected or top_grid_x25 or top_grid_x26_expected or top_grid_x26 or top_grid_x27_expected or top_grid_x27 or top_grid_x28_expected or top_grid_x28 or top_grid_x29_expected or top_grid_x29 or top_grid_x30_expected or top_grid_x30 or top_grid_x31_expected or top_grid_x31)
begin
	trigger <= ~trigger;
end

always @(posedge sampler_rx or negedge sampler_rx)
begin
`ifdef debug_tbench
	$display("Scanning pattern %d @time = %t",i,$realtime );
	i = i + 1;
	$display("| expected top_grid_x0 = %b | expected top_grid_x1 = %b | expected top_grid_x2 = %b | expected top_grid_x3 = %b | expected top_grid_x4 = %b | expected top_grid_x5 = %b | expected top_grid_x6 = %b | expected top_grid_x7 = %b | expected top_grid_x8 = %b | expected top_grid_x9 = %b | expected top_grid_x10 = %b | expected top_grid_x11 = %b | expected top_grid_x12 = %b | expected top_grid_x13 = %b | expected top_grid_x14 = %b | expected top_grid_x15 = %b | expected top_grid_x16 = %b | expected top_grid_x17 = %b | expected top_grid_x18 = %b | expected top_grid_x19 = %b | expected top_grid_x20 = %b | expected top_grid_x21 = %b | expected top_grid_x22 = %b | expected top_grid_x23 = %b | expected top_grid_x24 = %b | expected top_grid_x25 = %b | expected top_grid_x26 = %b | expected top_grid_x27 = %b | expected top_grid_x28 = %b | expected top_grid_x29 = %b | expected top_grid_x30 = %b | expected top_grid_x31 = %b | ",top_grid_x0_expected_prev,top_grid_x1_expected_prev,top_grid_x2_expected_prev,top_grid_x3_expected_prev,top_grid_x4_expected_prev,top_grid_x5_expected_prev,top_grid_x6_expected_prev,top_grid_x7_expected_prev,top_grid_x8_expected_prev,top_grid_x9_expected_prev,top_grid_x10_expected_prev,top_grid_x11_expected_prev,top_grid_x12_expected_prev,top_grid_x13_expected_prev,top_grid_x14_expected_prev,top_grid_x15_expected_prev,top_grid_x16_expected_prev,top_grid_x17_expected_prev,top_grid_x18_expected_prev,top_grid_x19_expected_prev,top_grid_x20_expected_prev,top_grid_x21_expected_prev,top_grid_x22_expected_prev,top_grid_x23_expected_prev,top_grid_x24_expected_prev,top_grid_x25_expected_prev,top_grid_x26_expected_prev,top_grid_x27_expected_prev,top_grid_x28_expected_prev,top_grid_x29_expected_prev,top_grid_x30_expected_prev,top_grid_x31_expected_prev);
	$display("| real top_grid_x0 = %b | real top_grid_x1 = %b | real top_grid_x2 = %b | real top_grid_x3 = %b | real top_grid_x4 = %b | real top_grid_x5 = %b | real top_grid_x6 = %b | real top_grid_x7 = %b | real top_grid_x8 = %b | real top_grid_x9 = %b | real top_grid_x10 = %b | real top_grid_x11 = %b | real top_grid_x12 = %b | real top_grid_x13 = %b | real top_grid_x14 = %b | real top_grid_x15 = %b | real top_grid_x16 = %b | real top_grid_x17 = %b | real top_grid_x18 = %b | real top_grid_x19 = %b | real top_grid_x20 = %b | real top_grid_x21 = %b | real top_grid_x22 = %b | real top_grid_x23 = %b | real top_grid_x24 = %b | real top_grid_x25 = %b | real top_grid_x26 = %b | real top_grid_x27 = %b | real top_grid_x28 = %b | real top_grid_x29 = %b | real top_grid_x30 = %b | real top_grid_x31 = %b | ",top_grid_x0_prev,top_grid_x1_prev,top_grid_x2_prev,top_grid_x3_prev,top_grid_x4_prev,top_grid_x5_prev,top_grid_x6_prev,top_grid_x7_prev,top_grid_x8_prev,top_grid_x9_prev,top_grid_x10_prev,top_grid_x11_prev,top_grid_x12_prev,top_grid_x13_prev,top_grid_x14_prev,top_grid_x15_prev,top_grid_x16_prev,top_grid_x17_prev,top_grid_x18_prev,top_grid_x19_prev,top_grid_x20_prev,top_grid_x21_prev,top_grid_x22_prev,top_grid_x23_prev,top_grid_x24_prev,top_grid_x25_prev,top_grid_x26_prev,top_grid_x27_prev,top_grid_x28_prev,top_grid_x29_prev,top_grid_x30_prev,top_grid_x31_prev);
`endif
	if (
		( top_grid_x0_expected_prev[0] !== 1'bx ) && ( top_grid_x0_prev[0] !== top_grid_x0_expected_prev[0] )
		&& ((top_grid_x0_expected_prev[0] !== last_top_grid_x0_exp[0]) ||
			on_first_change[1])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x0[0] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x0_expected_prev);
		$display ("     Real value = %b", top_grid_x0_prev);
		nummismatches = nummismatches + 1;
		on_first_change[1] = 1'b0;
		last_top_grid_x0_exp[0] = top_grid_x0_expected_prev[0];
	end
	if (
		( top_grid_x0_expected_prev[1] !== 1'bx ) && ( top_grid_x0_prev[1] !== top_grid_x0_expected_prev[1] )
		&& ((top_grid_x0_expected_prev[1] !== last_top_grid_x0_exp[1]) ||
			on_first_change[1])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x0[1] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x0_expected_prev);
		$display ("     Real value = %b", top_grid_x0_prev);
		nummismatches = nummismatches + 1;
		on_first_change[1] = 1'b0;
		last_top_grid_x0_exp[1] = top_grid_x0_expected_prev[1];
	end
	if (
		( top_grid_x0_expected_prev[2] !== 1'bx ) && ( top_grid_x0_prev[2] !== top_grid_x0_expected_prev[2] )
		&& ((top_grid_x0_expected_prev[2] !== last_top_grid_x0_exp[2]) ||
			on_first_change[1])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x0[2] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x0_expected_prev);
		$display ("     Real value = %b", top_grid_x0_prev);
		nummismatches = nummismatches + 1;
		on_first_change[1] = 1'b0;
		last_top_grid_x0_exp[2] = top_grid_x0_expected_prev[2];
	end
	if (
		( top_grid_x0_expected_prev[3] !== 1'bx ) && ( top_grid_x0_prev[3] !== top_grid_x0_expected_prev[3] )
		&& ((top_grid_x0_expected_prev[3] !== last_top_grid_x0_exp[3]) ||
			on_first_change[1])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x0[3] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x0_expected_prev);
		$display ("     Real value = %b", top_grid_x0_prev);
		nummismatches = nummismatches + 1;
		on_first_change[1] = 1'b0;
		last_top_grid_x0_exp[3] = top_grid_x0_expected_prev[3];
	end
	if (
		( top_grid_x0_expected_prev[4] !== 1'bx ) && ( top_grid_x0_prev[4] !== top_grid_x0_expected_prev[4] )
		&& ((top_grid_x0_expected_prev[4] !== last_top_grid_x0_exp[4]) ||
			on_first_change[1])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x0[4] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x0_expected_prev);
		$display ("     Real value = %b", top_grid_x0_prev);
		nummismatches = nummismatches + 1;
		on_first_change[1] = 1'b0;
		last_top_grid_x0_exp[4] = top_grid_x0_expected_prev[4];
	end
	if (
		( top_grid_x0_expected_prev[5] !== 1'bx ) && ( top_grid_x0_prev[5] !== top_grid_x0_expected_prev[5] )
		&& ((top_grid_x0_expected_prev[5] !== last_top_grid_x0_exp[5]) ||
			on_first_change[1])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x0[5] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x0_expected_prev);
		$display ("     Real value = %b", top_grid_x0_prev);
		nummismatches = nummismatches + 1;
		on_first_change[1] = 1'b0;
		last_top_grid_x0_exp[5] = top_grid_x0_expected_prev[5];
	end
	if (
		( top_grid_x0_expected_prev[6] !== 1'bx ) && ( top_grid_x0_prev[6] !== top_grid_x0_expected_prev[6] )
		&& ((top_grid_x0_expected_prev[6] !== last_top_grid_x0_exp[6]) ||
			on_first_change[1])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x0[6] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x0_expected_prev);
		$display ("     Real value = %b", top_grid_x0_prev);
		nummismatches = nummismatches + 1;
		on_first_change[1] = 1'b0;
		last_top_grid_x0_exp[6] = top_grid_x0_expected_prev[6];
	end
	if (
		( top_grid_x0_expected_prev[7] !== 1'bx ) && ( top_grid_x0_prev[7] !== top_grid_x0_expected_prev[7] )
		&& ((top_grid_x0_expected_prev[7] !== last_top_grid_x0_exp[7]) ||
			on_first_change[1])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x0[7] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x0_expected_prev);
		$display ("     Real value = %b", top_grid_x0_prev);
		nummismatches = nummismatches + 1;
		on_first_change[1] = 1'b0;
		last_top_grid_x0_exp[7] = top_grid_x0_expected_prev[7];
	end
	if (
		( top_grid_x0_expected_prev[8] !== 1'bx ) && ( top_grid_x0_prev[8] !== top_grid_x0_expected_prev[8] )
		&& ((top_grid_x0_expected_prev[8] !== last_top_grid_x0_exp[8]) ||
			on_first_change[1])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x0[8] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x0_expected_prev);
		$display ("     Real value = %b", top_grid_x0_prev);
		nummismatches = nummismatches + 1;
		on_first_change[1] = 1'b0;
		last_top_grid_x0_exp[8] = top_grid_x0_expected_prev[8];
	end
	if (
		( top_grid_x0_expected_prev[9] !== 1'bx ) && ( top_grid_x0_prev[9] !== top_grid_x0_expected_prev[9] )
		&& ((top_grid_x0_expected_prev[9] !== last_top_grid_x0_exp[9]) ||
			on_first_change[1])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x0[9] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x0_expected_prev);
		$display ("     Real value = %b", top_grid_x0_prev);
		nummismatches = nummismatches + 1;
		on_first_change[1] = 1'b0;
		last_top_grid_x0_exp[9] = top_grid_x0_expected_prev[9];
	end
	if (
		( top_grid_x1_expected_prev[0] !== 1'bx ) && ( top_grid_x1_prev[0] !== top_grid_x1_expected_prev[0] )
		&& ((top_grid_x1_expected_prev[0] !== last_top_grid_x1_exp[0]) ||
			on_first_change[2])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x1[0] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x1_expected_prev);
		$display ("     Real value = %b", top_grid_x1_prev);
		nummismatches = nummismatches + 1;
		on_first_change[2] = 1'b0;
		last_top_grid_x1_exp[0] = top_grid_x1_expected_prev[0];
	end
	if (
		( top_grid_x1_expected_prev[1] !== 1'bx ) && ( top_grid_x1_prev[1] !== top_grid_x1_expected_prev[1] )
		&& ((top_grid_x1_expected_prev[1] !== last_top_grid_x1_exp[1]) ||
			on_first_change[2])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x1[1] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x1_expected_prev);
		$display ("     Real value = %b", top_grid_x1_prev);
		nummismatches = nummismatches + 1;
		on_first_change[2] = 1'b0;
		last_top_grid_x1_exp[1] = top_grid_x1_expected_prev[1];
	end
	if (
		( top_grid_x1_expected_prev[2] !== 1'bx ) && ( top_grid_x1_prev[2] !== top_grid_x1_expected_prev[2] )
		&& ((top_grid_x1_expected_prev[2] !== last_top_grid_x1_exp[2]) ||
			on_first_change[2])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x1[2] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x1_expected_prev);
		$display ("     Real value = %b", top_grid_x1_prev);
		nummismatches = nummismatches + 1;
		on_first_change[2] = 1'b0;
		last_top_grid_x1_exp[2] = top_grid_x1_expected_prev[2];
	end
	if (
		( top_grid_x1_expected_prev[3] !== 1'bx ) && ( top_grid_x1_prev[3] !== top_grid_x1_expected_prev[3] )
		&& ((top_grid_x1_expected_prev[3] !== last_top_grid_x1_exp[3]) ||
			on_first_change[2])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x1[3] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x1_expected_prev);
		$display ("     Real value = %b", top_grid_x1_prev);
		nummismatches = nummismatches + 1;
		on_first_change[2] = 1'b0;
		last_top_grid_x1_exp[3] = top_grid_x1_expected_prev[3];
	end
	if (
		( top_grid_x1_expected_prev[4] !== 1'bx ) && ( top_grid_x1_prev[4] !== top_grid_x1_expected_prev[4] )
		&& ((top_grid_x1_expected_prev[4] !== last_top_grid_x1_exp[4]) ||
			on_first_change[2])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x1[4] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x1_expected_prev);
		$display ("     Real value = %b", top_grid_x1_prev);
		nummismatches = nummismatches + 1;
		on_first_change[2] = 1'b0;
		last_top_grid_x1_exp[4] = top_grid_x1_expected_prev[4];
	end
	if (
		( top_grid_x1_expected_prev[5] !== 1'bx ) && ( top_grid_x1_prev[5] !== top_grid_x1_expected_prev[5] )
		&& ((top_grid_x1_expected_prev[5] !== last_top_grid_x1_exp[5]) ||
			on_first_change[2])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x1[5] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x1_expected_prev);
		$display ("     Real value = %b", top_grid_x1_prev);
		nummismatches = nummismatches + 1;
		on_first_change[2] = 1'b0;
		last_top_grid_x1_exp[5] = top_grid_x1_expected_prev[5];
	end
	if (
		( top_grid_x1_expected_prev[6] !== 1'bx ) && ( top_grid_x1_prev[6] !== top_grid_x1_expected_prev[6] )
		&& ((top_grid_x1_expected_prev[6] !== last_top_grid_x1_exp[6]) ||
			on_first_change[2])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x1[6] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x1_expected_prev);
		$display ("     Real value = %b", top_grid_x1_prev);
		nummismatches = nummismatches + 1;
		on_first_change[2] = 1'b0;
		last_top_grid_x1_exp[6] = top_grid_x1_expected_prev[6];
	end
	if (
		( top_grid_x1_expected_prev[7] !== 1'bx ) && ( top_grid_x1_prev[7] !== top_grid_x1_expected_prev[7] )
		&& ((top_grid_x1_expected_prev[7] !== last_top_grid_x1_exp[7]) ||
			on_first_change[2])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x1[7] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x1_expected_prev);
		$display ("     Real value = %b", top_grid_x1_prev);
		nummismatches = nummismatches + 1;
		on_first_change[2] = 1'b0;
		last_top_grid_x1_exp[7] = top_grid_x1_expected_prev[7];
	end
	if (
		( top_grid_x1_expected_prev[8] !== 1'bx ) && ( top_grid_x1_prev[8] !== top_grid_x1_expected_prev[8] )
		&& ((top_grid_x1_expected_prev[8] !== last_top_grid_x1_exp[8]) ||
			on_first_change[2])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x1[8] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x1_expected_prev);
		$display ("     Real value = %b", top_grid_x1_prev);
		nummismatches = nummismatches + 1;
		on_first_change[2] = 1'b0;
		last_top_grid_x1_exp[8] = top_grid_x1_expected_prev[8];
	end
	if (
		( top_grid_x1_expected_prev[9] !== 1'bx ) && ( top_grid_x1_prev[9] !== top_grid_x1_expected_prev[9] )
		&& ((top_grid_x1_expected_prev[9] !== last_top_grid_x1_exp[9]) ||
			on_first_change[2])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x1[9] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x1_expected_prev);
		$display ("     Real value = %b", top_grid_x1_prev);
		nummismatches = nummismatches + 1;
		on_first_change[2] = 1'b0;
		last_top_grid_x1_exp[9] = top_grid_x1_expected_prev[9];
	end
	if (
		( top_grid_x2_expected_prev[0] !== 1'bx ) && ( top_grid_x2_prev[0] !== top_grid_x2_expected_prev[0] )
		&& ((top_grid_x2_expected_prev[0] !== last_top_grid_x2_exp[0]) ||
			on_first_change[3])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x2[0] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x2_expected_prev);
		$display ("     Real value = %b", top_grid_x2_prev);
		nummismatches = nummismatches + 1;
		on_first_change[3] = 1'b0;
		last_top_grid_x2_exp[0] = top_grid_x2_expected_prev[0];
	end
	if (
		( top_grid_x2_expected_prev[1] !== 1'bx ) && ( top_grid_x2_prev[1] !== top_grid_x2_expected_prev[1] )
		&& ((top_grid_x2_expected_prev[1] !== last_top_grid_x2_exp[1]) ||
			on_first_change[3])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x2[1] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x2_expected_prev);
		$display ("     Real value = %b", top_grid_x2_prev);
		nummismatches = nummismatches + 1;
		on_first_change[3] = 1'b0;
		last_top_grid_x2_exp[1] = top_grid_x2_expected_prev[1];
	end
	if (
		( top_grid_x2_expected_prev[2] !== 1'bx ) && ( top_grid_x2_prev[2] !== top_grid_x2_expected_prev[2] )
		&& ((top_grid_x2_expected_prev[2] !== last_top_grid_x2_exp[2]) ||
			on_first_change[3])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x2[2] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x2_expected_prev);
		$display ("     Real value = %b", top_grid_x2_prev);
		nummismatches = nummismatches + 1;
		on_first_change[3] = 1'b0;
		last_top_grid_x2_exp[2] = top_grid_x2_expected_prev[2];
	end
	if (
		( top_grid_x2_expected_prev[3] !== 1'bx ) && ( top_grid_x2_prev[3] !== top_grid_x2_expected_prev[3] )
		&& ((top_grid_x2_expected_prev[3] !== last_top_grid_x2_exp[3]) ||
			on_first_change[3])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x2[3] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x2_expected_prev);
		$display ("     Real value = %b", top_grid_x2_prev);
		nummismatches = nummismatches + 1;
		on_first_change[3] = 1'b0;
		last_top_grid_x2_exp[3] = top_grid_x2_expected_prev[3];
	end
	if (
		( top_grid_x2_expected_prev[4] !== 1'bx ) && ( top_grid_x2_prev[4] !== top_grid_x2_expected_prev[4] )
		&& ((top_grid_x2_expected_prev[4] !== last_top_grid_x2_exp[4]) ||
			on_first_change[3])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x2[4] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x2_expected_prev);
		$display ("     Real value = %b", top_grid_x2_prev);
		nummismatches = nummismatches + 1;
		on_first_change[3] = 1'b0;
		last_top_grid_x2_exp[4] = top_grid_x2_expected_prev[4];
	end
	if (
		( top_grid_x2_expected_prev[5] !== 1'bx ) && ( top_grid_x2_prev[5] !== top_grid_x2_expected_prev[5] )
		&& ((top_grid_x2_expected_prev[5] !== last_top_grid_x2_exp[5]) ||
			on_first_change[3])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x2[5] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x2_expected_prev);
		$display ("     Real value = %b", top_grid_x2_prev);
		nummismatches = nummismatches + 1;
		on_first_change[3] = 1'b0;
		last_top_grid_x2_exp[5] = top_grid_x2_expected_prev[5];
	end
	if (
		( top_grid_x2_expected_prev[6] !== 1'bx ) && ( top_grid_x2_prev[6] !== top_grid_x2_expected_prev[6] )
		&& ((top_grid_x2_expected_prev[6] !== last_top_grid_x2_exp[6]) ||
			on_first_change[3])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x2[6] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x2_expected_prev);
		$display ("     Real value = %b", top_grid_x2_prev);
		nummismatches = nummismatches + 1;
		on_first_change[3] = 1'b0;
		last_top_grid_x2_exp[6] = top_grid_x2_expected_prev[6];
	end
	if (
		( top_grid_x2_expected_prev[7] !== 1'bx ) && ( top_grid_x2_prev[7] !== top_grid_x2_expected_prev[7] )
		&& ((top_grid_x2_expected_prev[7] !== last_top_grid_x2_exp[7]) ||
			on_first_change[3])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x2[7] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x2_expected_prev);
		$display ("     Real value = %b", top_grid_x2_prev);
		nummismatches = nummismatches + 1;
		on_first_change[3] = 1'b0;
		last_top_grid_x2_exp[7] = top_grid_x2_expected_prev[7];
	end
	if (
		( top_grid_x2_expected_prev[8] !== 1'bx ) && ( top_grid_x2_prev[8] !== top_grid_x2_expected_prev[8] )
		&& ((top_grid_x2_expected_prev[8] !== last_top_grid_x2_exp[8]) ||
			on_first_change[3])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x2[8] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x2_expected_prev);
		$display ("     Real value = %b", top_grid_x2_prev);
		nummismatches = nummismatches + 1;
		on_first_change[3] = 1'b0;
		last_top_grid_x2_exp[8] = top_grid_x2_expected_prev[8];
	end
	if (
		( top_grid_x2_expected_prev[9] !== 1'bx ) && ( top_grid_x2_prev[9] !== top_grid_x2_expected_prev[9] )
		&& ((top_grid_x2_expected_prev[9] !== last_top_grid_x2_exp[9]) ||
			on_first_change[3])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x2[9] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x2_expected_prev);
		$display ("     Real value = %b", top_grid_x2_prev);
		nummismatches = nummismatches + 1;
		on_first_change[3] = 1'b0;
		last_top_grid_x2_exp[9] = top_grid_x2_expected_prev[9];
	end
	if (
		( top_grid_x3_expected_prev[0] !== 1'bx ) && ( top_grid_x3_prev[0] !== top_grid_x3_expected_prev[0] )
		&& ((top_grid_x3_expected_prev[0] !== last_top_grid_x3_exp[0]) ||
			on_first_change[4])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x3[0] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x3_expected_prev);
		$display ("     Real value = %b", top_grid_x3_prev);
		nummismatches = nummismatches + 1;
		on_first_change[4] = 1'b0;
		last_top_grid_x3_exp[0] = top_grid_x3_expected_prev[0];
	end
	if (
		( top_grid_x3_expected_prev[1] !== 1'bx ) && ( top_grid_x3_prev[1] !== top_grid_x3_expected_prev[1] )
		&& ((top_grid_x3_expected_prev[1] !== last_top_grid_x3_exp[1]) ||
			on_first_change[4])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x3[1] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x3_expected_prev);
		$display ("     Real value = %b", top_grid_x3_prev);
		nummismatches = nummismatches + 1;
		on_first_change[4] = 1'b0;
		last_top_grid_x3_exp[1] = top_grid_x3_expected_prev[1];
	end
	if (
		( top_grid_x3_expected_prev[2] !== 1'bx ) && ( top_grid_x3_prev[2] !== top_grid_x3_expected_prev[2] )
		&& ((top_grid_x3_expected_prev[2] !== last_top_grid_x3_exp[2]) ||
			on_first_change[4])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x3[2] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x3_expected_prev);
		$display ("     Real value = %b", top_grid_x3_prev);
		nummismatches = nummismatches + 1;
		on_first_change[4] = 1'b0;
		last_top_grid_x3_exp[2] = top_grid_x3_expected_prev[2];
	end
	if (
		( top_grid_x3_expected_prev[3] !== 1'bx ) && ( top_grid_x3_prev[3] !== top_grid_x3_expected_prev[3] )
		&& ((top_grid_x3_expected_prev[3] !== last_top_grid_x3_exp[3]) ||
			on_first_change[4])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x3[3] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x3_expected_prev);
		$display ("     Real value = %b", top_grid_x3_prev);
		nummismatches = nummismatches + 1;
		on_first_change[4] = 1'b0;
		last_top_grid_x3_exp[3] = top_grid_x3_expected_prev[3];
	end
	if (
		( top_grid_x3_expected_prev[4] !== 1'bx ) && ( top_grid_x3_prev[4] !== top_grid_x3_expected_prev[4] )
		&& ((top_grid_x3_expected_prev[4] !== last_top_grid_x3_exp[4]) ||
			on_first_change[4])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x3[4] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x3_expected_prev);
		$display ("     Real value = %b", top_grid_x3_prev);
		nummismatches = nummismatches + 1;
		on_first_change[4] = 1'b0;
		last_top_grid_x3_exp[4] = top_grid_x3_expected_prev[4];
	end
	if (
		( top_grid_x3_expected_prev[5] !== 1'bx ) && ( top_grid_x3_prev[5] !== top_grid_x3_expected_prev[5] )
		&& ((top_grid_x3_expected_prev[5] !== last_top_grid_x3_exp[5]) ||
			on_first_change[4])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x3[5] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x3_expected_prev);
		$display ("     Real value = %b", top_grid_x3_prev);
		nummismatches = nummismatches + 1;
		on_first_change[4] = 1'b0;
		last_top_grid_x3_exp[5] = top_grid_x3_expected_prev[5];
	end
	if (
		( top_grid_x3_expected_prev[6] !== 1'bx ) && ( top_grid_x3_prev[6] !== top_grid_x3_expected_prev[6] )
		&& ((top_grid_x3_expected_prev[6] !== last_top_grid_x3_exp[6]) ||
			on_first_change[4])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x3[6] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x3_expected_prev);
		$display ("     Real value = %b", top_grid_x3_prev);
		nummismatches = nummismatches + 1;
		on_first_change[4] = 1'b0;
		last_top_grid_x3_exp[6] = top_grid_x3_expected_prev[6];
	end
	if (
		( top_grid_x3_expected_prev[7] !== 1'bx ) && ( top_grid_x3_prev[7] !== top_grid_x3_expected_prev[7] )
		&& ((top_grid_x3_expected_prev[7] !== last_top_grid_x3_exp[7]) ||
			on_first_change[4])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x3[7] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x3_expected_prev);
		$display ("     Real value = %b", top_grid_x3_prev);
		nummismatches = nummismatches + 1;
		on_first_change[4] = 1'b0;
		last_top_grid_x3_exp[7] = top_grid_x3_expected_prev[7];
	end
	if (
		( top_grid_x3_expected_prev[8] !== 1'bx ) && ( top_grid_x3_prev[8] !== top_grid_x3_expected_prev[8] )
		&& ((top_grid_x3_expected_prev[8] !== last_top_grid_x3_exp[8]) ||
			on_first_change[4])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x3[8] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x3_expected_prev);
		$display ("     Real value = %b", top_grid_x3_prev);
		nummismatches = nummismatches + 1;
		on_first_change[4] = 1'b0;
		last_top_grid_x3_exp[8] = top_grid_x3_expected_prev[8];
	end
	if (
		( top_grid_x3_expected_prev[9] !== 1'bx ) && ( top_grid_x3_prev[9] !== top_grid_x3_expected_prev[9] )
		&& ((top_grid_x3_expected_prev[9] !== last_top_grid_x3_exp[9]) ||
			on_first_change[4])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x3[9] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x3_expected_prev);
		$display ("     Real value = %b", top_grid_x3_prev);
		nummismatches = nummismatches + 1;
		on_first_change[4] = 1'b0;
		last_top_grid_x3_exp[9] = top_grid_x3_expected_prev[9];
	end
	if (
		( top_grid_x4_expected_prev[0] !== 1'bx ) && ( top_grid_x4_prev[0] !== top_grid_x4_expected_prev[0] )
		&& ((top_grid_x4_expected_prev[0] !== last_top_grid_x4_exp[0]) ||
			on_first_change[5])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x4[0] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x4_expected_prev);
		$display ("     Real value = %b", top_grid_x4_prev);
		nummismatches = nummismatches + 1;
		on_first_change[5] = 1'b0;
		last_top_grid_x4_exp[0] = top_grid_x4_expected_prev[0];
	end
	if (
		( top_grid_x4_expected_prev[1] !== 1'bx ) && ( top_grid_x4_prev[1] !== top_grid_x4_expected_prev[1] )
		&& ((top_grid_x4_expected_prev[1] !== last_top_grid_x4_exp[1]) ||
			on_first_change[5])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x4[1] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x4_expected_prev);
		$display ("     Real value = %b", top_grid_x4_prev);
		nummismatches = nummismatches + 1;
		on_first_change[5] = 1'b0;
		last_top_grid_x4_exp[1] = top_grid_x4_expected_prev[1];
	end
	if (
		( top_grid_x4_expected_prev[2] !== 1'bx ) && ( top_grid_x4_prev[2] !== top_grid_x4_expected_prev[2] )
		&& ((top_grid_x4_expected_prev[2] !== last_top_grid_x4_exp[2]) ||
			on_first_change[5])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x4[2] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x4_expected_prev);
		$display ("     Real value = %b", top_grid_x4_prev);
		nummismatches = nummismatches + 1;
		on_first_change[5] = 1'b0;
		last_top_grid_x4_exp[2] = top_grid_x4_expected_prev[2];
	end
	if (
		( top_grid_x4_expected_prev[3] !== 1'bx ) && ( top_grid_x4_prev[3] !== top_grid_x4_expected_prev[3] )
		&& ((top_grid_x4_expected_prev[3] !== last_top_grid_x4_exp[3]) ||
			on_first_change[5])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x4[3] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x4_expected_prev);
		$display ("     Real value = %b", top_grid_x4_prev);
		nummismatches = nummismatches + 1;
		on_first_change[5] = 1'b0;
		last_top_grid_x4_exp[3] = top_grid_x4_expected_prev[3];
	end
	if (
		( top_grid_x4_expected_prev[4] !== 1'bx ) && ( top_grid_x4_prev[4] !== top_grid_x4_expected_prev[4] )
		&& ((top_grid_x4_expected_prev[4] !== last_top_grid_x4_exp[4]) ||
			on_first_change[5])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x4[4] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x4_expected_prev);
		$display ("     Real value = %b", top_grid_x4_prev);
		nummismatches = nummismatches + 1;
		on_first_change[5] = 1'b0;
		last_top_grid_x4_exp[4] = top_grid_x4_expected_prev[4];
	end
	if (
		( top_grid_x4_expected_prev[5] !== 1'bx ) && ( top_grid_x4_prev[5] !== top_grid_x4_expected_prev[5] )
		&& ((top_grid_x4_expected_prev[5] !== last_top_grid_x4_exp[5]) ||
			on_first_change[5])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x4[5] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x4_expected_prev);
		$display ("     Real value = %b", top_grid_x4_prev);
		nummismatches = nummismatches + 1;
		on_first_change[5] = 1'b0;
		last_top_grid_x4_exp[5] = top_grid_x4_expected_prev[5];
	end
	if (
		( top_grid_x4_expected_prev[6] !== 1'bx ) && ( top_grid_x4_prev[6] !== top_grid_x4_expected_prev[6] )
		&& ((top_grid_x4_expected_prev[6] !== last_top_grid_x4_exp[6]) ||
			on_first_change[5])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x4[6] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x4_expected_prev);
		$display ("     Real value = %b", top_grid_x4_prev);
		nummismatches = nummismatches + 1;
		on_first_change[5] = 1'b0;
		last_top_grid_x4_exp[6] = top_grid_x4_expected_prev[6];
	end
	if (
		( top_grid_x4_expected_prev[7] !== 1'bx ) && ( top_grid_x4_prev[7] !== top_grid_x4_expected_prev[7] )
		&& ((top_grid_x4_expected_prev[7] !== last_top_grid_x4_exp[7]) ||
			on_first_change[5])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x4[7] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x4_expected_prev);
		$display ("     Real value = %b", top_grid_x4_prev);
		nummismatches = nummismatches + 1;
		on_first_change[5] = 1'b0;
		last_top_grid_x4_exp[7] = top_grid_x4_expected_prev[7];
	end
	if (
		( top_grid_x4_expected_prev[8] !== 1'bx ) && ( top_grid_x4_prev[8] !== top_grid_x4_expected_prev[8] )
		&& ((top_grid_x4_expected_prev[8] !== last_top_grid_x4_exp[8]) ||
			on_first_change[5])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x4[8] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x4_expected_prev);
		$display ("     Real value = %b", top_grid_x4_prev);
		nummismatches = nummismatches + 1;
		on_first_change[5] = 1'b0;
		last_top_grid_x4_exp[8] = top_grid_x4_expected_prev[8];
	end
	if (
		( top_grid_x4_expected_prev[9] !== 1'bx ) && ( top_grid_x4_prev[9] !== top_grid_x4_expected_prev[9] )
		&& ((top_grid_x4_expected_prev[9] !== last_top_grid_x4_exp[9]) ||
			on_first_change[5])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x4[9] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x4_expected_prev);
		$display ("     Real value = %b", top_grid_x4_prev);
		nummismatches = nummismatches + 1;
		on_first_change[5] = 1'b0;
		last_top_grid_x4_exp[9] = top_grid_x4_expected_prev[9];
	end
	if (
		( top_grid_x5_expected_prev[0] !== 1'bx ) && ( top_grid_x5_prev[0] !== top_grid_x5_expected_prev[0] )
		&& ((top_grid_x5_expected_prev[0] !== last_top_grid_x5_exp[0]) ||
			on_first_change[6])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x5[0] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x5_expected_prev);
		$display ("     Real value = %b", top_grid_x5_prev);
		nummismatches = nummismatches + 1;
		on_first_change[6] = 1'b0;
		last_top_grid_x5_exp[0] = top_grid_x5_expected_prev[0];
	end
	if (
		( top_grid_x5_expected_prev[1] !== 1'bx ) && ( top_grid_x5_prev[1] !== top_grid_x5_expected_prev[1] )
		&& ((top_grid_x5_expected_prev[1] !== last_top_grid_x5_exp[1]) ||
			on_first_change[6])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x5[1] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x5_expected_prev);
		$display ("     Real value = %b", top_grid_x5_prev);
		nummismatches = nummismatches + 1;
		on_first_change[6] = 1'b0;
		last_top_grid_x5_exp[1] = top_grid_x5_expected_prev[1];
	end
	if (
		( top_grid_x5_expected_prev[2] !== 1'bx ) && ( top_grid_x5_prev[2] !== top_grid_x5_expected_prev[2] )
		&& ((top_grid_x5_expected_prev[2] !== last_top_grid_x5_exp[2]) ||
			on_first_change[6])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x5[2] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x5_expected_prev);
		$display ("     Real value = %b", top_grid_x5_prev);
		nummismatches = nummismatches + 1;
		on_first_change[6] = 1'b0;
		last_top_grid_x5_exp[2] = top_grid_x5_expected_prev[2];
	end
	if (
		( top_grid_x5_expected_prev[3] !== 1'bx ) && ( top_grid_x5_prev[3] !== top_grid_x5_expected_prev[3] )
		&& ((top_grid_x5_expected_prev[3] !== last_top_grid_x5_exp[3]) ||
			on_first_change[6])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x5[3] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x5_expected_prev);
		$display ("     Real value = %b", top_grid_x5_prev);
		nummismatches = nummismatches + 1;
		on_first_change[6] = 1'b0;
		last_top_grid_x5_exp[3] = top_grid_x5_expected_prev[3];
	end
	if (
		( top_grid_x5_expected_prev[4] !== 1'bx ) && ( top_grid_x5_prev[4] !== top_grid_x5_expected_prev[4] )
		&& ((top_grid_x5_expected_prev[4] !== last_top_grid_x5_exp[4]) ||
			on_first_change[6])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x5[4] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x5_expected_prev);
		$display ("     Real value = %b", top_grid_x5_prev);
		nummismatches = nummismatches + 1;
		on_first_change[6] = 1'b0;
		last_top_grid_x5_exp[4] = top_grid_x5_expected_prev[4];
	end
	if (
		( top_grid_x5_expected_prev[5] !== 1'bx ) && ( top_grid_x5_prev[5] !== top_grid_x5_expected_prev[5] )
		&& ((top_grid_x5_expected_prev[5] !== last_top_grid_x5_exp[5]) ||
			on_first_change[6])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x5[5] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x5_expected_prev);
		$display ("     Real value = %b", top_grid_x5_prev);
		nummismatches = nummismatches + 1;
		on_first_change[6] = 1'b0;
		last_top_grid_x5_exp[5] = top_grid_x5_expected_prev[5];
	end
	if (
		( top_grid_x5_expected_prev[6] !== 1'bx ) && ( top_grid_x5_prev[6] !== top_grid_x5_expected_prev[6] )
		&& ((top_grid_x5_expected_prev[6] !== last_top_grid_x5_exp[6]) ||
			on_first_change[6])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x5[6] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x5_expected_prev);
		$display ("     Real value = %b", top_grid_x5_prev);
		nummismatches = nummismatches + 1;
		on_first_change[6] = 1'b0;
		last_top_grid_x5_exp[6] = top_grid_x5_expected_prev[6];
	end
	if (
		( top_grid_x5_expected_prev[7] !== 1'bx ) && ( top_grid_x5_prev[7] !== top_grid_x5_expected_prev[7] )
		&& ((top_grid_x5_expected_prev[7] !== last_top_grid_x5_exp[7]) ||
			on_first_change[6])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x5[7] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x5_expected_prev);
		$display ("     Real value = %b", top_grid_x5_prev);
		nummismatches = nummismatches + 1;
		on_first_change[6] = 1'b0;
		last_top_grid_x5_exp[7] = top_grid_x5_expected_prev[7];
	end
	if (
		( top_grid_x5_expected_prev[8] !== 1'bx ) && ( top_grid_x5_prev[8] !== top_grid_x5_expected_prev[8] )
		&& ((top_grid_x5_expected_prev[8] !== last_top_grid_x5_exp[8]) ||
			on_first_change[6])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x5[8] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x5_expected_prev);
		$display ("     Real value = %b", top_grid_x5_prev);
		nummismatches = nummismatches + 1;
		on_first_change[6] = 1'b0;
		last_top_grid_x5_exp[8] = top_grid_x5_expected_prev[8];
	end
	if (
		( top_grid_x5_expected_prev[9] !== 1'bx ) && ( top_grid_x5_prev[9] !== top_grid_x5_expected_prev[9] )
		&& ((top_grid_x5_expected_prev[9] !== last_top_grid_x5_exp[9]) ||
			on_first_change[6])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x5[9] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x5_expected_prev);
		$display ("     Real value = %b", top_grid_x5_prev);
		nummismatches = nummismatches + 1;
		on_first_change[6] = 1'b0;
		last_top_grid_x5_exp[9] = top_grid_x5_expected_prev[9];
	end
	if (
		( top_grid_x6_expected_prev[0] !== 1'bx ) && ( top_grid_x6_prev[0] !== top_grid_x6_expected_prev[0] )
		&& ((top_grid_x6_expected_prev[0] !== last_top_grid_x6_exp[0]) ||
			on_first_change[7])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x6[0] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x6_expected_prev);
		$display ("     Real value = %b", top_grid_x6_prev);
		nummismatches = nummismatches + 1;
		on_first_change[7] = 1'b0;
		last_top_grid_x6_exp[0] = top_grid_x6_expected_prev[0];
	end
	if (
		( top_grid_x6_expected_prev[1] !== 1'bx ) && ( top_grid_x6_prev[1] !== top_grid_x6_expected_prev[1] )
		&& ((top_grid_x6_expected_prev[1] !== last_top_grid_x6_exp[1]) ||
			on_first_change[7])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x6[1] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x6_expected_prev);
		$display ("     Real value = %b", top_grid_x6_prev);
		nummismatches = nummismatches + 1;
		on_first_change[7] = 1'b0;
		last_top_grid_x6_exp[1] = top_grid_x6_expected_prev[1];
	end
	if (
		( top_grid_x6_expected_prev[2] !== 1'bx ) && ( top_grid_x6_prev[2] !== top_grid_x6_expected_prev[2] )
		&& ((top_grid_x6_expected_prev[2] !== last_top_grid_x6_exp[2]) ||
			on_first_change[7])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x6[2] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x6_expected_prev);
		$display ("     Real value = %b", top_grid_x6_prev);
		nummismatches = nummismatches + 1;
		on_first_change[7] = 1'b0;
		last_top_grid_x6_exp[2] = top_grid_x6_expected_prev[2];
	end
	if (
		( top_grid_x6_expected_prev[3] !== 1'bx ) && ( top_grid_x6_prev[3] !== top_grid_x6_expected_prev[3] )
		&& ((top_grid_x6_expected_prev[3] !== last_top_grid_x6_exp[3]) ||
			on_first_change[7])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x6[3] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x6_expected_prev);
		$display ("     Real value = %b", top_grid_x6_prev);
		nummismatches = nummismatches + 1;
		on_first_change[7] = 1'b0;
		last_top_grid_x6_exp[3] = top_grid_x6_expected_prev[3];
	end
	if (
		( top_grid_x6_expected_prev[4] !== 1'bx ) && ( top_grid_x6_prev[4] !== top_grid_x6_expected_prev[4] )
		&& ((top_grid_x6_expected_prev[4] !== last_top_grid_x6_exp[4]) ||
			on_first_change[7])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x6[4] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x6_expected_prev);
		$display ("     Real value = %b", top_grid_x6_prev);
		nummismatches = nummismatches + 1;
		on_first_change[7] = 1'b0;
		last_top_grid_x6_exp[4] = top_grid_x6_expected_prev[4];
	end
	if (
		( top_grid_x6_expected_prev[5] !== 1'bx ) && ( top_grid_x6_prev[5] !== top_grid_x6_expected_prev[5] )
		&& ((top_grid_x6_expected_prev[5] !== last_top_grid_x6_exp[5]) ||
			on_first_change[7])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x6[5] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x6_expected_prev);
		$display ("     Real value = %b", top_grid_x6_prev);
		nummismatches = nummismatches + 1;
		on_first_change[7] = 1'b0;
		last_top_grid_x6_exp[5] = top_grid_x6_expected_prev[5];
	end
	if (
		( top_grid_x6_expected_prev[6] !== 1'bx ) && ( top_grid_x6_prev[6] !== top_grid_x6_expected_prev[6] )
		&& ((top_grid_x6_expected_prev[6] !== last_top_grid_x6_exp[6]) ||
			on_first_change[7])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x6[6] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x6_expected_prev);
		$display ("     Real value = %b", top_grid_x6_prev);
		nummismatches = nummismatches + 1;
		on_first_change[7] = 1'b0;
		last_top_grid_x6_exp[6] = top_grid_x6_expected_prev[6];
	end
	if (
		( top_grid_x6_expected_prev[7] !== 1'bx ) && ( top_grid_x6_prev[7] !== top_grid_x6_expected_prev[7] )
		&& ((top_grid_x6_expected_prev[7] !== last_top_grid_x6_exp[7]) ||
			on_first_change[7])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x6[7] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x6_expected_prev);
		$display ("     Real value = %b", top_grid_x6_prev);
		nummismatches = nummismatches + 1;
		on_first_change[7] = 1'b0;
		last_top_grid_x6_exp[7] = top_grid_x6_expected_prev[7];
	end
	if (
		( top_grid_x6_expected_prev[8] !== 1'bx ) && ( top_grid_x6_prev[8] !== top_grid_x6_expected_prev[8] )
		&& ((top_grid_x6_expected_prev[8] !== last_top_grid_x6_exp[8]) ||
			on_first_change[7])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x6[8] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x6_expected_prev);
		$display ("     Real value = %b", top_grid_x6_prev);
		nummismatches = nummismatches + 1;
		on_first_change[7] = 1'b0;
		last_top_grid_x6_exp[8] = top_grid_x6_expected_prev[8];
	end
	if (
		( top_grid_x6_expected_prev[9] !== 1'bx ) && ( top_grid_x6_prev[9] !== top_grid_x6_expected_prev[9] )
		&& ((top_grid_x6_expected_prev[9] !== last_top_grid_x6_exp[9]) ||
			on_first_change[7])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x6[9] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x6_expected_prev);
		$display ("     Real value = %b", top_grid_x6_prev);
		nummismatches = nummismatches + 1;
		on_first_change[7] = 1'b0;
		last_top_grid_x6_exp[9] = top_grid_x6_expected_prev[9];
	end
	if (
		( top_grid_x7_expected_prev[0] !== 1'bx ) && ( top_grid_x7_prev[0] !== top_grid_x7_expected_prev[0] )
		&& ((top_grid_x7_expected_prev[0] !== last_top_grid_x7_exp[0]) ||
			on_first_change[8])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x7[0] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x7_expected_prev);
		$display ("     Real value = %b", top_grid_x7_prev);
		nummismatches = nummismatches + 1;
		on_first_change[8] = 1'b0;
		last_top_grid_x7_exp[0] = top_grid_x7_expected_prev[0];
	end
	if (
		( top_grid_x7_expected_prev[1] !== 1'bx ) && ( top_grid_x7_prev[1] !== top_grid_x7_expected_prev[1] )
		&& ((top_grid_x7_expected_prev[1] !== last_top_grid_x7_exp[1]) ||
			on_first_change[8])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x7[1] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x7_expected_prev);
		$display ("     Real value = %b", top_grid_x7_prev);
		nummismatches = nummismatches + 1;
		on_first_change[8] = 1'b0;
		last_top_grid_x7_exp[1] = top_grid_x7_expected_prev[1];
	end
	if (
		( top_grid_x7_expected_prev[2] !== 1'bx ) && ( top_grid_x7_prev[2] !== top_grid_x7_expected_prev[2] )
		&& ((top_grid_x7_expected_prev[2] !== last_top_grid_x7_exp[2]) ||
			on_first_change[8])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x7[2] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x7_expected_prev);
		$display ("     Real value = %b", top_grid_x7_prev);
		nummismatches = nummismatches + 1;
		on_first_change[8] = 1'b0;
		last_top_grid_x7_exp[2] = top_grid_x7_expected_prev[2];
	end
	if (
		( top_grid_x7_expected_prev[3] !== 1'bx ) && ( top_grid_x7_prev[3] !== top_grid_x7_expected_prev[3] )
		&& ((top_grid_x7_expected_prev[3] !== last_top_grid_x7_exp[3]) ||
			on_first_change[8])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x7[3] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x7_expected_prev);
		$display ("     Real value = %b", top_grid_x7_prev);
		nummismatches = nummismatches + 1;
		on_first_change[8] = 1'b0;
		last_top_grid_x7_exp[3] = top_grid_x7_expected_prev[3];
	end
	if (
		( top_grid_x7_expected_prev[4] !== 1'bx ) && ( top_grid_x7_prev[4] !== top_grid_x7_expected_prev[4] )
		&& ((top_grid_x7_expected_prev[4] !== last_top_grid_x7_exp[4]) ||
			on_first_change[8])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x7[4] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x7_expected_prev);
		$display ("     Real value = %b", top_grid_x7_prev);
		nummismatches = nummismatches + 1;
		on_first_change[8] = 1'b0;
		last_top_grid_x7_exp[4] = top_grid_x7_expected_prev[4];
	end
	if (
		( top_grid_x7_expected_prev[5] !== 1'bx ) && ( top_grid_x7_prev[5] !== top_grid_x7_expected_prev[5] )
		&& ((top_grid_x7_expected_prev[5] !== last_top_grid_x7_exp[5]) ||
			on_first_change[8])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x7[5] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x7_expected_prev);
		$display ("     Real value = %b", top_grid_x7_prev);
		nummismatches = nummismatches + 1;
		on_first_change[8] = 1'b0;
		last_top_grid_x7_exp[5] = top_grid_x7_expected_prev[5];
	end
	if (
		( top_grid_x7_expected_prev[6] !== 1'bx ) && ( top_grid_x7_prev[6] !== top_grid_x7_expected_prev[6] )
		&& ((top_grid_x7_expected_prev[6] !== last_top_grid_x7_exp[6]) ||
			on_first_change[8])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x7[6] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x7_expected_prev);
		$display ("     Real value = %b", top_grid_x7_prev);
		nummismatches = nummismatches + 1;
		on_first_change[8] = 1'b0;
		last_top_grid_x7_exp[6] = top_grid_x7_expected_prev[6];
	end
	if (
		( top_grid_x7_expected_prev[7] !== 1'bx ) && ( top_grid_x7_prev[7] !== top_grid_x7_expected_prev[7] )
		&& ((top_grid_x7_expected_prev[7] !== last_top_grid_x7_exp[7]) ||
			on_first_change[8])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x7[7] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x7_expected_prev);
		$display ("     Real value = %b", top_grid_x7_prev);
		nummismatches = nummismatches + 1;
		on_first_change[8] = 1'b0;
		last_top_grid_x7_exp[7] = top_grid_x7_expected_prev[7];
	end
	if (
		( top_grid_x7_expected_prev[8] !== 1'bx ) && ( top_grid_x7_prev[8] !== top_grid_x7_expected_prev[8] )
		&& ((top_grid_x7_expected_prev[8] !== last_top_grid_x7_exp[8]) ||
			on_first_change[8])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x7[8] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x7_expected_prev);
		$display ("     Real value = %b", top_grid_x7_prev);
		nummismatches = nummismatches + 1;
		on_first_change[8] = 1'b0;
		last_top_grid_x7_exp[8] = top_grid_x7_expected_prev[8];
	end
	if (
		( top_grid_x7_expected_prev[9] !== 1'bx ) && ( top_grid_x7_prev[9] !== top_grid_x7_expected_prev[9] )
		&& ((top_grid_x7_expected_prev[9] !== last_top_grid_x7_exp[9]) ||
			on_first_change[8])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x7[9] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x7_expected_prev);
		$display ("     Real value = %b", top_grid_x7_prev);
		nummismatches = nummismatches + 1;
		on_first_change[8] = 1'b0;
		last_top_grid_x7_exp[9] = top_grid_x7_expected_prev[9];
	end
	if (
		( top_grid_x8_expected_prev[0] !== 1'bx ) && ( top_grid_x8_prev[0] !== top_grid_x8_expected_prev[0] )
		&& ((top_grid_x8_expected_prev[0] !== last_top_grid_x8_exp[0]) ||
			on_first_change[9])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x8[0] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x8_expected_prev);
		$display ("     Real value = %b", top_grid_x8_prev);
		nummismatches = nummismatches + 1;
		on_first_change[9] = 1'b0;
		last_top_grid_x8_exp[0] = top_grid_x8_expected_prev[0];
	end
	if (
		( top_grid_x8_expected_prev[1] !== 1'bx ) && ( top_grid_x8_prev[1] !== top_grid_x8_expected_prev[1] )
		&& ((top_grid_x8_expected_prev[1] !== last_top_grid_x8_exp[1]) ||
			on_first_change[9])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x8[1] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x8_expected_prev);
		$display ("     Real value = %b", top_grid_x8_prev);
		nummismatches = nummismatches + 1;
		on_first_change[9] = 1'b0;
		last_top_grid_x8_exp[1] = top_grid_x8_expected_prev[1];
	end
	if (
		( top_grid_x8_expected_prev[2] !== 1'bx ) && ( top_grid_x8_prev[2] !== top_grid_x8_expected_prev[2] )
		&& ((top_grid_x8_expected_prev[2] !== last_top_grid_x8_exp[2]) ||
			on_first_change[9])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x8[2] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x8_expected_prev);
		$display ("     Real value = %b", top_grid_x8_prev);
		nummismatches = nummismatches + 1;
		on_first_change[9] = 1'b0;
		last_top_grid_x8_exp[2] = top_grid_x8_expected_prev[2];
	end
	if (
		( top_grid_x8_expected_prev[3] !== 1'bx ) && ( top_grid_x8_prev[3] !== top_grid_x8_expected_prev[3] )
		&& ((top_grid_x8_expected_prev[3] !== last_top_grid_x8_exp[3]) ||
			on_first_change[9])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x8[3] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x8_expected_prev);
		$display ("     Real value = %b", top_grid_x8_prev);
		nummismatches = nummismatches + 1;
		on_first_change[9] = 1'b0;
		last_top_grid_x8_exp[3] = top_grid_x8_expected_prev[3];
	end
	if (
		( top_grid_x8_expected_prev[4] !== 1'bx ) && ( top_grid_x8_prev[4] !== top_grid_x8_expected_prev[4] )
		&& ((top_grid_x8_expected_prev[4] !== last_top_grid_x8_exp[4]) ||
			on_first_change[9])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x8[4] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x8_expected_prev);
		$display ("     Real value = %b", top_grid_x8_prev);
		nummismatches = nummismatches + 1;
		on_first_change[9] = 1'b0;
		last_top_grid_x8_exp[4] = top_grid_x8_expected_prev[4];
	end
	if (
		( top_grid_x8_expected_prev[5] !== 1'bx ) && ( top_grid_x8_prev[5] !== top_grid_x8_expected_prev[5] )
		&& ((top_grid_x8_expected_prev[5] !== last_top_grid_x8_exp[5]) ||
			on_first_change[9])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x8[5] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x8_expected_prev);
		$display ("     Real value = %b", top_grid_x8_prev);
		nummismatches = nummismatches + 1;
		on_first_change[9] = 1'b0;
		last_top_grid_x8_exp[5] = top_grid_x8_expected_prev[5];
	end
	if (
		( top_grid_x8_expected_prev[6] !== 1'bx ) && ( top_grid_x8_prev[6] !== top_grid_x8_expected_prev[6] )
		&& ((top_grid_x8_expected_prev[6] !== last_top_grid_x8_exp[6]) ||
			on_first_change[9])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x8[6] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x8_expected_prev);
		$display ("     Real value = %b", top_grid_x8_prev);
		nummismatches = nummismatches + 1;
		on_first_change[9] = 1'b0;
		last_top_grid_x8_exp[6] = top_grid_x8_expected_prev[6];
	end
	if (
		( top_grid_x8_expected_prev[7] !== 1'bx ) && ( top_grid_x8_prev[7] !== top_grid_x8_expected_prev[7] )
		&& ((top_grid_x8_expected_prev[7] !== last_top_grid_x8_exp[7]) ||
			on_first_change[9])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x8[7] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x8_expected_prev);
		$display ("     Real value = %b", top_grid_x8_prev);
		nummismatches = nummismatches + 1;
		on_first_change[9] = 1'b0;
		last_top_grid_x8_exp[7] = top_grid_x8_expected_prev[7];
	end
	if (
		( top_grid_x8_expected_prev[8] !== 1'bx ) && ( top_grid_x8_prev[8] !== top_grid_x8_expected_prev[8] )
		&& ((top_grid_x8_expected_prev[8] !== last_top_grid_x8_exp[8]) ||
			on_first_change[9])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x8[8] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x8_expected_prev);
		$display ("     Real value = %b", top_grid_x8_prev);
		nummismatches = nummismatches + 1;
		on_first_change[9] = 1'b0;
		last_top_grid_x8_exp[8] = top_grid_x8_expected_prev[8];
	end
	if (
		( top_grid_x8_expected_prev[9] !== 1'bx ) && ( top_grid_x8_prev[9] !== top_grid_x8_expected_prev[9] )
		&& ((top_grid_x8_expected_prev[9] !== last_top_grid_x8_exp[9]) ||
			on_first_change[9])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x8[9] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x8_expected_prev);
		$display ("     Real value = %b", top_grid_x8_prev);
		nummismatches = nummismatches + 1;
		on_first_change[9] = 1'b0;
		last_top_grid_x8_exp[9] = top_grid_x8_expected_prev[9];
	end
	if (
		( top_grid_x9_expected_prev[0] !== 1'bx ) && ( top_grid_x9_prev[0] !== top_grid_x9_expected_prev[0] )
		&& ((top_grid_x9_expected_prev[0] !== last_top_grid_x9_exp[0]) ||
			on_first_change[10])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x9[0] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x9_expected_prev);
		$display ("     Real value = %b", top_grid_x9_prev);
		nummismatches = nummismatches + 1;
		on_first_change[10] = 1'b0;
		last_top_grid_x9_exp[0] = top_grid_x9_expected_prev[0];
	end
	if (
		( top_grid_x9_expected_prev[1] !== 1'bx ) && ( top_grid_x9_prev[1] !== top_grid_x9_expected_prev[1] )
		&& ((top_grid_x9_expected_prev[1] !== last_top_grid_x9_exp[1]) ||
			on_first_change[10])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x9[1] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x9_expected_prev);
		$display ("     Real value = %b", top_grid_x9_prev);
		nummismatches = nummismatches + 1;
		on_first_change[10] = 1'b0;
		last_top_grid_x9_exp[1] = top_grid_x9_expected_prev[1];
	end
	if (
		( top_grid_x9_expected_prev[2] !== 1'bx ) && ( top_grid_x9_prev[2] !== top_grid_x9_expected_prev[2] )
		&& ((top_grid_x9_expected_prev[2] !== last_top_grid_x9_exp[2]) ||
			on_first_change[10])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x9[2] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x9_expected_prev);
		$display ("     Real value = %b", top_grid_x9_prev);
		nummismatches = nummismatches + 1;
		on_first_change[10] = 1'b0;
		last_top_grid_x9_exp[2] = top_grid_x9_expected_prev[2];
	end
	if (
		( top_grid_x9_expected_prev[3] !== 1'bx ) && ( top_grid_x9_prev[3] !== top_grid_x9_expected_prev[3] )
		&& ((top_grid_x9_expected_prev[3] !== last_top_grid_x9_exp[3]) ||
			on_first_change[10])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x9[3] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x9_expected_prev);
		$display ("     Real value = %b", top_grid_x9_prev);
		nummismatches = nummismatches + 1;
		on_first_change[10] = 1'b0;
		last_top_grid_x9_exp[3] = top_grid_x9_expected_prev[3];
	end
	if (
		( top_grid_x9_expected_prev[4] !== 1'bx ) && ( top_grid_x9_prev[4] !== top_grid_x9_expected_prev[4] )
		&& ((top_grid_x9_expected_prev[4] !== last_top_grid_x9_exp[4]) ||
			on_first_change[10])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x9[4] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x9_expected_prev);
		$display ("     Real value = %b", top_grid_x9_prev);
		nummismatches = nummismatches + 1;
		on_first_change[10] = 1'b0;
		last_top_grid_x9_exp[4] = top_grid_x9_expected_prev[4];
	end
	if (
		( top_grid_x9_expected_prev[5] !== 1'bx ) && ( top_grid_x9_prev[5] !== top_grid_x9_expected_prev[5] )
		&& ((top_grid_x9_expected_prev[5] !== last_top_grid_x9_exp[5]) ||
			on_first_change[10])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x9[5] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x9_expected_prev);
		$display ("     Real value = %b", top_grid_x9_prev);
		nummismatches = nummismatches + 1;
		on_first_change[10] = 1'b0;
		last_top_grid_x9_exp[5] = top_grid_x9_expected_prev[5];
	end
	if (
		( top_grid_x9_expected_prev[6] !== 1'bx ) && ( top_grid_x9_prev[6] !== top_grid_x9_expected_prev[6] )
		&& ((top_grid_x9_expected_prev[6] !== last_top_grid_x9_exp[6]) ||
			on_first_change[10])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x9[6] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x9_expected_prev);
		$display ("     Real value = %b", top_grid_x9_prev);
		nummismatches = nummismatches + 1;
		on_first_change[10] = 1'b0;
		last_top_grid_x9_exp[6] = top_grid_x9_expected_prev[6];
	end
	if (
		( top_grid_x9_expected_prev[7] !== 1'bx ) && ( top_grid_x9_prev[7] !== top_grid_x9_expected_prev[7] )
		&& ((top_grid_x9_expected_prev[7] !== last_top_grid_x9_exp[7]) ||
			on_first_change[10])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x9[7] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x9_expected_prev);
		$display ("     Real value = %b", top_grid_x9_prev);
		nummismatches = nummismatches + 1;
		on_first_change[10] = 1'b0;
		last_top_grid_x9_exp[7] = top_grid_x9_expected_prev[7];
	end
	if (
		( top_grid_x9_expected_prev[8] !== 1'bx ) && ( top_grid_x9_prev[8] !== top_grid_x9_expected_prev[8] )
		&& ((top_grid_x9_expected_prev[8] !== last_top_grid_x9_exp[8]) ||
			on_first_change[10])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x9[8] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x9_expected_prev);
		$display ("     Real value = %b", top_grid_x9_prev);
		nummismatches = nummismatches + 1;
		on_first_change[10] = 1'b0;
		last_top_grid_x9_exp[8] = top_grid_x9_expected_prev[8];
	end
	if (
		( top_grid_x9_expected_prev[9] !== 1'bx ) && ( top_grid_x9_prev[9] !== top_grid_x9_expected_prev[9] )
		&& ((top_grid_x9_expected_prev[9] !== last_top_grid_x9_exp[9]) ||
			on_first_change[10])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x9[9] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x9_expected_prev);
		$display ("     Real value = %b", top_grid_x9_prev);
		nummismatches = nummismatches + 1;
		on_first_change[10] = 1'b0;
		last_top_grid_x9_exp[9] = top_grid_x9_expected_prev[9];
	end
	if (
		( top_grid_x10_expected_prev[0] !== 1'bx ) && ( top_grid_x10_prev[0] !== top_grid_x10_expected_prev[0] )
		&& ((top_grid_x10_expected_prev[0] !== last_top_grid_x10_exp[0]) ||
			on_first_change[11])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x10[0] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x10_expected_prev);
		$display ("     Real value = %b", top_grid_x10_prev);
		nummismatches = nummismatches + 1;
		on_first_change[11] = 1'b0;
		last_top_grid_x10_exp[0] = top_grid_x10_expected_prev[0];
	end
	if (
		( top_grid_x10_expected_prev[1] !== 1'bx ) && ( top_grid_x10_prev[1] !== top_grid_x10_expected_prev[1] )
		&& ((top_grid_x10_expected_prev[1] !== last_top_grid_x10_exp[1]) ||
			on_first_change[11])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x10[1] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x10_expected_prev);
		$display ("     Real value = %b", top_grid_x10_prev);
		nummismatches = nummismatches + 1;
		on_first_change[11] = 1'b0;
		last_top_grid_x10_exp[1] = top_grid_x10_expected_prev[1];
	end
	if (
		( top_grid_x10_expected_prev[2] !== 1'bx ) && ( top_grid_x10_prev[2] !== top_grid_x10_expected_prev[2] )
		&& ((top_grid_x10_expected_prev[2] !== last_top_grid_x10_exp[2]) ||
			on_first_change[11])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x10[2] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x10_expected_prev);
		$display ("     Real value = %b", top_grid_x10_prev);
		nummismatches = nummismatches + 1;
		on_first_change[11] = 1'b0;
		last_top_grid_x10_exp[2] = top_grid_x10_expected_prev[2];
	end
	if (
		( top_grid_x10_expected_prev[3] !== 1'bx ) && ( top_grid_x10_prev[3] !== top_grid_x10_expected_prev[3] )
		&& ((top_grid_x10_expected_prev[3] !== last_top_grid_x10_exp[3]) ||
			on_first_change[11])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x10[3] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x10_expected_prev);
		$display ("     Real value = %b", top_grid_x10_prev);
		nummismatches = nummismatches + 1;
		on_first_change[11] = 1'b0;
		last_top_grid_x10_exp[3] = top_grid_x10_expected_prev[3];
	end
	if (
		( top_grid_x10_expected_prev[4] !== 1'bx ) && ( top_grid_x10_prev[4] !== top_grid_x10_expected_prev[4] )
		&& ((top_grid_x10_expected_prev[4] !== last_top_grid_x10_exp[4]) ||
			on_first_change[11])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x10[4] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x10_expected_prev);
		$display ("     Real value = %b", top_grid_x10_prev);
		nummismatches = nummismatches + 1;
		on_first_change[11] = 1'b0;
		last_top_grid_x10_exp[4] = top_grid_x10_expected_prev[4];
	end
	if (
		( top_grid_x10_expected_prev[5] !== 1'bx ) && ( top_grid_x10_prev[5] !== top_grid_x10_expected_prev[5] )
		&& ((top_grid_x10_expected_prev[5] !== last_top_grid_x10_exp[5]) ||
			on_first_change[11])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x10[5] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x10_expected_prev);
		$display ("     Real value = %b", top_grid_x10_prev);
		nummismatches = nummismatches + 1;
		on_first_change[11] = 1'b0;
		last_top_grid_x10_exp[5] = top_grid_x10_expected_prev[5];
	end
	if (
		( top_grid_x10_expected_prev[6] !== 1'bx ) && ( top_grid_x10_prev[6] !== top_grid_x10_expected_prev[6] )
		&& ((top_grid_x10_expected_prev[6] !== last_top_grid_x10_exp[6]) ||
			on_first_change[11])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x10[6] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x10_expected_prev);
		$display ("     Real value = %b", top_grid_x10_prev);
		nummismatches = nummismatches + 1;
		on_first_change[11] = 1'b0;
		last_top_grid_x10_exp[6] = top_grid_x10_expected_prev[6];
	end
	if (
		( top_grid_x10_expected_prev[7] !== 1'bx ) && ( top_grid_x10_prev[7] !== top_grid_x10_expected_prev[7] )
		&& ((top_grid_x10_expected_prev[7] !== last_top_grid_x10_exp[7]) ||
			on_first_change[11])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x10[7] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x10_expected_prev);
		$display ("     Real value = %b", top_grid_x10_prev);
		nummismatches = nummismatches + 1;
		on_first_change[11] = 1'b0;
		last_top_grid_x10_exp[7] = top_grid_x10_expected_prev[7];
	end
	if (
		( top_grid_x10_expected_prev[8] !== 1'bx ) && ( top_grid_x10_prev[8] !== top_grid_x10_expected_prev[8] )
		&& ((top_grid_x10_expected_prev[8] !== last_top_grid_x10_exp[8]) ||
			on_first_change[11])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x10[8] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x10_expected_prev);
		$display ("     Real value = %b", top_grid_x10_prev);
		nummismatches = nummismatches + 1;
		on_first_change[11] = 1'b0;
		last_top_grid_x10_exp[8] = top_grid_x10_expected_prev[8];
	end
	if (
		( top_grid_x10_expected_prev[9] !== 1'bx ) && ( top_grid_x10_prev[9] !== top_grid_x10_expected_prev[9] )
		&& ((top_grid_x10_expected_prev[9] !== last_top_grid_x10_exp[9]) ||
			on_first_change[11])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x10[9] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x10_expected_prev);
		$display ("     Real value = %b", top_grid_x10_prev);
		nummismatches = nummismatches + 1;
		on_first_change[11] = 1'b0;
		last_top_grid_x10_exp[9] = top_grid_x10_expected_prev[9];
	end
	if (
		( top_grid_x11_expected_prev[0] !== 1'bx ) && ( top_grid_x11_prev[0] !== top_grid_x11_expected_prev[0] )
		&& ((top_grid_x11_expected_prev[0] !== last_top_grid_x11_exp[0]) ||
			on_first_change[12])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x11[0] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x11_expected_prev);
		$display ("     Real value = %b", top_grid_x11_prev);
		nummismatches = nummismatches + 1;
		on_first_change[12] = 1'b0;
		last_top_grid_x11_exp[0] = top_grid_x11_expected_prev[0];
	end
	if (
		( top_grid_x11_expected_prev[1] !== 1'bx ) && ( top_grid_x11_prev[1] !== top_grid_x11_expected_prev[1] )
		&& ((top_grid_x11_expected_prev[1] !== last_top_grid_x11_exp[1]) ||
			on_first_change[12])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x11[1] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x11_expected_prev);
		$display ("     Real value = %b", top_grid_x11_prev);
		nummismatches = nummismatches + 1;
		on_first_change[12] = 1'b0;
		last_top_grid_x11_exp[1] = top_grid_x11_expected_prev[1];
	end
	if (
		( top_grid_x11_expected_prev[2] !== 1'bx ) && ( top_grid_x11_prev[2] !== top_grid_x11_expected_prev[2] )
		&& ((top_grid_x11_expected_prev[2] !== last_top_grid_x11_exp[2]) ||
			on_first_change[12])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x11[2] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x11_expected_prev);
		$display ("     Real value = %b", top_grid_x11_prev);
		nummismatches = nummismatches + 1;
		on_first_change[12] = 1'b0;
		last_top_grid_x11_exp[2] = top_grid_x11_expected_prev[2];
	end
	if (
		( top_grid_x11_expected_prev[3] !== 1'bx ) && ( top_grid_x11_prev[3] !== top_grid_x11_expected_prev[3] )
		&& ((top_grid_x11_expected_prev[3] !== last_top_grid_x11_exp[3]) ||
			on_first_change[12])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x11[3] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x11_expected_prev);
		$display ("     Real value = %b", top_grid_x11_prev);
		nummismatches = nummismatches + 1;
		on_first_change[12] = 1'b0;
		last_top_grid_x11_exp[3] = top_grid_x11_expected_prev[3];
	end
	if (
		( top_grid_x11_expected_prev[4] !== 1'bx ) && ( top_grid_x11_prev[4] !== top_grid_x11_expected_prev[4] )
		&& ((top_grid_x11_expected_prev[4] !== last_top_grid_x11_exp[4]) ||
			on_first_change[12])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x11[4] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x11_expected_prev);
		$display ("     Real value = %b", top_grid_x11_prev);
		nummismatches = nummismatches + 1;
		on_first_change[12] = 1'b0;
		last_top_grid_x11_exp[4] = top_grid_x11_expected_prev[4];
	end
	if (
		( top_grid_x11_expected_prev[5] !== 1'bx ) && ( top_grid_x11_prev[5] !== top_grid_x11_expected_prev[5] )
		&& ((top_grid_x11_expected_prev[5] !== last_top_grid_x11_exp[5]) ||
			on_first_change[12])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x11[5] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x11_expected_prev);
		$display ("     Real value = %b", top_grid_x11_prev);
		nummismatches = nummismatches + 1;
		on_first_change[12] = 1'b0;
		last_top_grid_x11_exp[5] = top_grid_x11_expected_prev[5];
	end
	if (
		( top_grid_x11_expected_prev[6] !== 1'bx ) && ( top_grid_x11_prev[6] !== top_grid_x11_expected_prev[6] )
		&& ((top_grid_x11_expected_prev[6] !== last_top_grid_x11_exp[6]) ||
			on_first_change[12])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x11[6] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x11_expected_prev);
		$display ("     Real value = %b", top_grid_x11_prev);
		nummismatches = nummismatches + 1;
		on_first_change[12] = 1'b0;
		last_top_grid_x11_exp[6] = top_grid_x11_expected_prev[6];
	end
	if (
		( top_grid_x11_expected_prev[7] !== 1'bx ) && ( top_grid_x11_prev[7] !== top_grid_x11_expected_prev[7] )
		&& ((top_grid_x11_expected_prev[7] !== last_top_grid_x11_exp[7]) ||
			on_first_change[12])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x11[7] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x11_expected_prev);
		$display ("     Real value = %b", top_grid_x11_prev);
		nummismatches = nummismatches + 1;
		on_first_change[12] = 1'b0;
		last_top_grid_x11_exp[7] = top_grid_x11_expected_prev[7];
	end
	if (
		( top_grid_x11_expected_prev[8] !== 1'bx ) && ( top_grid_x11_prev[8] !== top_grid_x11_expected_prev[8] )
		&& ((top_grid_x11_expected_prev[8] !== last_top_grid_x11_exp[8]) ||
			on_first_change[12])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x11[8] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x11_expected_prev);
		$display ("     Real value = %b", top_grid_x11_prev);
		nummismatches = nummismatches + 1;
		on_first_change[12] = 1'b0;
		last_top_grid_x11_exp[8] = top_grid_x11_expected_prev[8];
	end
	if (
		( top_grid_x11_expected_prev[9] !== 1'bx ) && ( top_grid_x11_prev[9] !== top_grid_x11_expected_prev[9] )
		&& ((top_grid_x11_expected_prev[9] !== last_top_grid_x11_exp[9]) ||
			on_first_change[12])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x11[9] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x11_expected_prev);
		$display ("     Real value = %b", top_grid_x11_prev);
		nummismatches = nummismatches + 1;
		on_first_change[12] = 1'b0;
		last_top_grid_x11_exp[9] = top_grid_x11_expected_prev[9];
	end
	if (
		( top_grid_x12_expected_prev[0] !== 1'bx ) && ( top_grid_x12_prev[0] !== top_grid_x12_expected_prev[0] )
		&& ((top_grid_x12_expected_prev[0] !== last_top_grid_x12_exp[0]) ||
			on_first_change[13])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x12[0] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x12_expected_prev);
		$display ("     Real value = %b", top_grid_x12_prev);
		nummismatches = nummismatches + 1;
		on_first_change[13] = 1'b0;
		last_top_grid_x12_exp[0] = top_grid_x12_expected_prev[0];
	end
	if (
		( top_grid_x12_expected_prev[1] !== 1'bx ) && ( top_grid_x12_prev[1] !== top_grid_x12_expected_prev[1] )
		&& ((top_grid_x12_expected_prev[1] !== last_top_grid_x12_exp[1]) ||
			on_first_change[13])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x12[1] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x12_expected_prev);
		$display ("     Real value = %b", top_grid_x12_prev);
		nummismatches = nummismatches + 1;
		on_first_change[13] = 1'b0;
		last_top_grid_x12_exp[1] = top_grid_x12_expected_prev[1];
	end
	if (
		( top_grid_x12_expected_prev[2] !== 1'bx ) && ( top_grid_x12_prev[2] !== top_grid_x12_expected_prev[2] )
		&& ((top_grid_x12_expected_prev[2] !== last_top_grid_x12_exp[2]) ||
			on_first_change[13])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x12[2] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x12_expected_prev);
		$display ("     Real value = %b", top_grid_x12_prev);
		nummismatches = nummismatches + 1;
		on_first_change[13] = 1'b0;
		last_top_grid_x12_exp[2] = top_grid_x12_expected_prev[2];
	end
	if (
		( top_grid_x12_expected_prev[3] !== 1'bx ) && ( top_grid_x12_prev[3] !== top_grid_x12_expected_prev[3] )
		&& ((top_grid_x12_expected_prev[3] !== last_top_grid_x12_exp[3]) ||
			on_first_change[13])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x12[3] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x12_expected_prev);
		$display ("     Real value = %b", top_grid_x12_prev);
		nummismatches = nummismatches + 1;
		on_first_change[13] = 1'b0;
		last_top_grid_x12_exp[3] = top_grid_x12_expected_prev[3];
	end
	if (
		( top_grid_x12_expected_prev[4] !== 1'bx ) && ( top_grid_x12_prev[4] !== top_grid_x12_expected_prev[4] )
		&& ((top_grid_x12_expected_prev[4] !== last_top_grid_x12_exp[4]) ||
			on_first_change[13])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x12[4] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x12_expected_prev);
		$display ("     Real value = %b", top_grid_x12_prev);
		nummismatches = nummismatches + 1;
		on_first_change[13] = 1'b0;
		last_top_grid_x12_exp[4] = top_grid_x12_expected_prev[4];
	end
	if (
		( top_grid_x12_expected_prev[5] !== 1'bx ) && ( top_grid_x12_prev[5] !== top_grid_x12_expected_prev[5] )
		&& ((top_grid_x12_expected_prev[5] !== last_top_grid_x12_exp[5]) ||
			on_first_change[13])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x12[5] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x12_expected_prev);
		$display ("     Real value = %b", top_grid_x12_prev);
		nummismatches = nummismatches + 1;
		on_first_change[13] = 1'b0;
		last_top_grid_x12_exp[5] = top_grid_x12_expected_prev[5];
	end
	if (
		( top_grid_x12_expected_prev[6] !== 1'bx ) && ( top_grid_x12_prev[6] !== top_grid_x12_expected_prev[6] )
		&& ((top_grid_x12_expected_prev[6] !== last_top_grid_x12_exp[6]) ||
			on_first_change[13])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x12[6] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x12_expected_prev);
		$display ("     Real value = %b", top_grid_x12_prev);
		nummismatches = nummismatches + 1;
		on_first_change[13] = 1'b0;
		last_top_grid_x12_exp[6] = top_grid_x12_expected_prev[6];
	end
	if (
		( top_grid_x12_expected_prev[7] !== 1'bx ) && ( top_grid_x12_prev[7] !== top_grid_x12_expected_prev[7] )
		&& ((top_grid_x12_expected_prev[7] !== last_top_grid_x12_exp[7]) ||
			on_first_change[13])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x12[7] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x12_expected_prev);
		$display ("     Real value = %b", top_grid_x12_prev);
		nummismatches = nummismatches + 1;
		on_first_change[13] = 1'b0;
		last_top_grid_x12_exp[7] = top_grid_x12_expected_prev[7];
	end
	if (
		( top_grid_x12_expected_prev[8] !== 1'bx ) && ( top_grid_x12_prev[8] !== top_grid_x12_expected_prev[8] )
		&& ((top_grid_x12_expected_prev[8] !== last_top_grid_x12_exp[8]) ||
			on_first_change[13])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x12[8] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x12_expected_prev);
		$display ("     Real value = %b", top_grid_x12_prev);
		nummismatches = nummismatches + 1;
		on_first_change[13] = 1'b0;
		last_top_grid_x12_exp[8] = top_grid_x12_expected_prev[8];
	end
	if (
		( top_grid_x12_expected_prev[9] !== 1'bx ) && ( top_grid_x12_prev[9] !== top_grid_x12_expected_prev[9] )
		&& ((top_grid_x12_expected_prev[9] !== last_top_grid_x12_exp[9]) ||
			on_first_change[13])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x12[9] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x12_expected_prev);
		$display ("     Real value = %b", top_grid_x12_prev);
		nummismatches = nummismatches + 1;
		on_first_change[13] = 1'b0;
		last_top_grid_x12_exp[9] = top_grid_x12_expected_prev[9];
	end
	if (
		( top_grid_x13_expected_prev[0] !== 1'bx ) && ( top_grid_x13_prev[0] !== top_grid_x13_expected_prev[0] )
		&& ((top_grid_x13_expected_prev[0] !== last_top_grid_x13_exp[0]) ||
			on_first_change[14])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x13[0] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x13_expected_prev);
		$display ("     Real value = %b", top_grid_x13_prev);
		nummismatches = nummismatches + 1;
		on_first_change[14] = 1'b0;
		last_top_grid_x13_exp[0] = top_grid_x13_expected_prev[0];
	end
	if (
		( top_grid_x13_expected_prev[1] !== 1'bx ) && ( top_grid_x13_prev[1] !== top_grid_x13_expected_prev[1] )
		&& ((top_grid_x13_expected_prev[1] !== last_top_grid_x13_exp[1]) ||
			on_first_change[14])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x13[1] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x13_expected_prev);
		$display ("     Real value = %b", top_grid_x13_prev);
		nummismatches = nummismatches + 1;
		on_first_change[14] = 1'b0;
		last_top_grid_x13_exp[1] = top_grid_x13_expected_prev[1];
	end
	if (
		( top_grid_x13_expected_prev[2] !== 1'bx ) && ( top_grid_x13_prev[2] !== top_grid_x13_expected_prev[2] )
		&& ((top_grid_x13_expected_prev[2] !== last_top_grid_x13_exp[2]) ||
			on_first_change[14])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x13[2] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x13_expected_prev);
		$display ("     Real value = %b", top_grid_x13_prev);
		nummismatches = nummismatches + 1;
		on_first_change[14] = 1'b0;
		last_top_grid_x13_exp[2] = top_grid_x13_expected_prev[2];
	end
	if (
		( top_grid_x13_expected_prev[3] !== 1'bx ) && ( top_grid_x13_prev[3] !== top_grid_x13_expected_prev[3] )
		&& ((top_grid_x13_expected_prev[3] !== last_top_grid_x13_exp[3]) ||
			on_first_change[14])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x13[3] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x13_expected_prev);
		$display ("     Real value = %b", top_grid_x13_prev);
		nummismatches = nummismatches + 1;
		on_first_change[14] = 1'b0;
		last_top_grid_x13_exp[3] = top_grid_x13_expected_prev[3];
	end
	if (
		( top_grid_x13_expected_prev[4] !== 1'bx ) && ( top_grid_x13_prev[4] !== top_grid_x13_expected_prev[4] )
		&& ((top_grid_x13_expected_prev[4] !== last_top_grid_x13_exp[4]) ||
			on_first_change[14])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x13[4] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x13_expected_prev);
		$display ("     Real value = %b", top_grid_x13_prev);
		nummismatches = nummismatches + 1;
		on_first_change[14] = 1'b0;
		last_top_grid_x13_exp[4] = top_grid_x13_expected_prev[4];
	end
	if (
		( top_grid_x13_expected_prev[5] !== 1'bx ) && ( top_grid_x13_prev[5] !== top_grid_x13_expected_prev[5] )
		&& ((top_grid_x13_expected_prev[5] !== last_top_grid_x13_exp[5]) ||
			on_first_change[14])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x13[5] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x13_expected_prev);
		$display ("     Real value = %b", top_grid_x13_prev);
		nummismatches = nummismatches + 1;
		on_first_change[14] = 1'b0;
		last_top_grid_x13_exp[5] = top_grid_x13_expected_prev[5];
	end
	if (
		( top_grid_x13_expected_prev[6] !== 1'bx ) && ( top_grid_x13_prev[6] !== top_grid_x13_expected_prev[6] )
		&& ((top_grid_x13_expected_prev[6] !== last_top_grid_x13_exp[6]) ||
			on_first_change[14])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x13[6] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x13_expected_prev);
		$display ("     Real value = %b", top_grid_x13_prev);
		nummismatches = nummismatches + 1;
		on_first_change[14] = 1'b0;
		last_top_grid_x13_exp[6] = top_grid_x13_expected_prev[6];
	end
	if (
		( top_grid_x13_expected_prev[7] !== 1'bx ) && ( top_grid_x13_prev[7] !== top_grid_x13_expected_prev[7] )
		&& ((top_grid_x13_expected_prev[7] !== last_top_grid_x13_exp[7]) ||
			on_first_change[14])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x13[7] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x13_expected_prev);
		$display ("     Real value = %b", top_grid_x13_prev);
		nummismatches = nummismatches + 1;
		on_first_change[14] = 1'b0;
		last_top_grid_x13_exp[7] = top_grid_x13_expected_prev[7];
	end
	if (
		( top_grid_x13_expected_prev[8] !== 1'bx ) && ( top_grid_x13_prev[8] !== top_grid_x13_expected_prev[8] )
		&& ((top_grid_x13_expected_prev[8] !== last_top_grid_x13_exp[8]) ||
			on_first_change[14])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x13[8] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x13_expected_prev);
		$display ("     Real value = %b", top_grid_x13_prev);
		nummismatches = nummismatches + 1;
		on_first_change[14] = 1'b0;
		last_top_grid_x13_exp[8] = top_grid_x13_expected_prev[8];
	end
	if (
		( top_grid_x13_expected_prev[9] !== 1'bx ) && ( top_grid_x13_prev[9] !== top_grid_x13_expected_prev[9] )
		&& ((top_grid_x13_expected_prev[9] !== last_top_grid_x13_exp[9]) ||
			on_first_change[14])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x13[9] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x13_expected_prev);
		$display ("     Real value = %b", top_grid_x13_prev);
		nummismatches = nummismatches + 1;
		on_first_change[14] = 1'b0;
		last_top_grid_x13_exp[9] = top_grid_x13_expected_prev[9];
	end
	if (
		( top_grid_x14_expected_prev[0] !== 1'bx ) && ( top_grid_x14_prev[0] !== top_grid_x14_expected_prev[0] )
		&& ((top_grid_x14_expected_prev[0] !== last_top_grid_x14_exp[0]) ||
			on_first_change[15])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x14[0] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x14_expected_prev);
		$display ("     Real value = %b", top_grid_x14_prev);
		nummismatches = nummismatches + 1;
		on_first_change[15] = 1'b0;
		last_top_grid_x14_exp[0] = top_grid_x14_expected_prev[0];
	end
	if (
		( top_grid_x14_expected_prev[1] !== 1'bx ) && ( top_grid_x14_prev[1] !== top_grid_x14_expected_prev[1] )
		&& ((top_grid_x14_expected_prev[1] !== last_top_grid_x14_exp[1]) ||
			on_first_change[15])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x14[1] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x14_expected_prev);
		$display ("     Real value = %b", top_grid_x14_prev);
		nummismatches = nummismatches + 1;
		on_first_change[15] = 1'b0;
		last_top_grid_x14_exp[1] = top_grid_x14_expected_prev[1];
	end
	if (
		( top_grid_x14_expected_prev[2] !== 1'bx ) && ( top_grid_x14_prev[2] !== top_grid_x14_expected_prev[2] )
		&& ((top_grid_x14_expected_prev[2] !== last_top_grid_x14_exp[2]) ||
			on_first_change[15])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x14[2] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x14_expected_prev);
		$display ("     Real value = %b", top_grid_x14_prev);
		nummismatches = nummismatches + 1;
		on_first_change[15] = 1'b0;
		last_top_grid_x14_exp[2] = top_grid_x14_expected_prev[2];
	end
	if (
		( top_grid_x14_expected_prev[3] !== 1'bx ) && ( top_grid_x14_prev[3] !== top_grid_x14_expected_prev[3] )
		&& ((top_grid_x14_expected_prev[3] !== last_top_grid_x14_exp[3]) ||
			on_first_change[15])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x14[3] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x14_expected_prev);
		$display ("     Real value = %b", top_grid_x14_prev);
		nummismatches = nummismatches + 1;
		on_first_change[15] = 1'b0;
		last_top_grid_x14_exp[3] = top_grid_x14_expected_prev[3];
	end
	if (
		( top_grid_x14_expected_prev[4] !== 1'bx ) && ( top_grid_x14_prev[4] !== top_grid_x14_expected_prev[4] )
		&& ((top_grid_x14_expected_prev[4] !== last_top_grid_x14_exp[4]) ||
			on_first_change[15])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x14[4] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x14_expected_prev);
		$display ("     Real value = %b", top_grid_x14_prev);
		nummismatches = nummismatches + 1;
		on_first_change[15] = 1'b0;
		last_top_grid_x14_exp[4] = top_grid_x14_expected_prev[4];
	end
	if (
		( top_grid_x14_expected_prev[5] !== 1'bx ) && ( top_grid_x14_prev[5] !== top_grid_x14_expected_prev[5] )
		&& ((top_grid_x14_expected_prev[5] !== last_top_grid_x14_exp[5]) ||
			on_first_change[15])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x14[5] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x14_expected_prev);
		$display ("     Real value = %b", top_grid_x14_prev);
		nummismatches = nummismatches + 1;
		on_first_change[15] = 1'b0;
		last_top_grid_x14_exp[5] = top_grid_x14_expected_prev[5];
	end
	if (
		( top_grid_x14_expected_prev[6] !== 1'bx ) && ( top_grid_x14_prev[6] !== top_grid_x14_expected_prev[6] )
		&& ((top_grid_x14_expected_prev[6] !== last_top_grid_x14_exp[6]) ||
			on_first_change[15])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x14[6] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x14_expected_prev);
		$display ("     Real value = %b", top_grid_x14_prev);
		nummismatches = nummismatches + 1;
		on_first_change[15] = 1'b0;
		last_top_grid_x14_exp[6] = top_grid_x14_expected_prev[6];
	end
	if (
		( top_grid_x14_expected_prev[7] !== 1'bx ) && ( top_grid_x14_prev[7] !== top_grid_x14_expected_prev[7] )
		&& ((top_grid_x14_expected_prev[7] !== last_top_grid_x14_exp[7]) ||
			on_first_change[15])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x14[7] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x14_expected_prev);
		$display ("     Real value = %b", top_grid_x14_prev);
		nummismatches = nummismatches + 1;
		on_first_change[15] = 1'b0;
		last_top_grid_x14_exp[7] = top_grid_x14_expected_prev[7];
	end
	if (
		( top_grid_x14_expected_prev[8] !== 1'bx ) && ( top_grid_x14_prev[8] !== top_grid_x14_expected_prev[8] )
		&& ((top_grid_x14_expected_prev[8] !== last_top_grid_x14_exp[8]) ||
			on_first_change[15])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x14[8] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x14_expected_prev);
		$display ("     Real value = %b", top_grid_x14_prev);
		nummismatches = nummismatches + 1;
		on_first_change[15] = 1'b0;
		last_top_grid_x14_exp[8] = top_grid_x14_expected_prev[8];
	end
	if (
		( top_grid_x14_expected_prev[9] !== 1'bx ) && ( top_grid_x14_prev[9] !== top_grid_x14_expected_prev[9] )
		&& ((top_grid_x14_expected_prev[9] !== last_top_grid_x14_exp[9]) ||
			on_first_change[15])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x14[9] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x14_expected_prev);
		$display ("     Real value = %b", top_grid_x14_prev);
		nummismatches = nummismatches + 1;
		on_first_change[15] = 1'b0;
		last_top_grid_x14_exp[9] = top_grid_x14_expected_prev[9];
	end
	if (
		( top_grid_x15_expected_prev[0] !== 1'bx ) && ( top_grid_x15_prev[0] !== top_grid_x15_expected_prev[0] )
		&& ((top_grid_x15_expected_prev[0] !== last_top_grid_x15_exp[0]) ||
			on_first_change[16])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x15[0] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x15_expected_prev);
		$display ("     Real value = %b", top_grid_x15_prev);
		nummismatches = nummismatches + 1;
		on_first_change[16] = 1'b0;
		last_top_grid_x15_exp[0] = top_grid_x15_expected_prev[0];
	end
	if (
		( top_grid_x15_expected_prev[1] !== 1'bx ) && ( top_grid_x15_prev[1] !== top_grid_x15_expected_prev[1] )
		&& ((top_grid_x15_expected_prev[1] !== last_top_grid_x15_exp[1]) ||
			on_first_change[16])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x15[1] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x15_expected_prev);
		$display ("     Real value = %b", top_grid_x15_prev);
		nummismatches = nummismatches + 1;
		on_first_change[16] = 1'b0;
		last_top_grid_x15_exp[1] = top_grid_x15_expected_prev[1];
	end
	if (
		( top_grid_x15_expected_prev[2] !== 1'bx ) && ( top_grid_x15_prev[2] !== top_grid_x15_expected_prev[2] )
		&& ((top_grid_x15_expected_prev[2] !== last_top_grid_x15_exp[2]) ||
			on_first_change[16])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x15[2] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x15_expected_prev);
		$display ("     Real value = %b", top_grid_x15_prev);
		nummismatches = nummismatches + 1;
		on_first_change[16] = 1'b0;
		last_top_grid_x15_exp[2] = top_grid_x15_expected_prev[2];
	end
	if (
		( top_grid_x15_expected_prev[3] !== 1'bx ) && ( top_grid_x15_prev[3] !== top_grid_x15_expected_prev[3] )
		&& ((top_grid_x15_expected_prev[3] !== last_top_grid_x15_exp[3]) ||
			on_first_change[16])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x15[3] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x15_expected_prev);
		$display ("     Real value = %b", top_grid_x15_prev);
		nummismatches = nummismatches + 1;
		on_first_change[16] = 1'b0;
		last_top_grid_x15_exp[3] = top_grid_x15_expected_prev[3];
	end
	if (
		( top_grid_x15_expected_prev[4] !== 1'bx ) && ( top_grid_x15_prev[4] !== top_grid_x15_expected_prev[4] )
		&& ((top_grid_x15_expected_prev[4] !== last_top_grid_x15_exp[4]) ||
			on_first_change[16])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x15[4] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x15_expected_prev);
		$display ("     Real value = %b", top_grid_x15_prev);
		nummismatches = nummismatches + 1;
		on_first_change[16] = 1'b0;
		last_top_grid_x15_exp[4] = top_grid_x15_expected_prev[4];
	end
	if (
		( top_grid_x15_expected_prev[5] !== 1'bx ) && ( top_grid_x15_prev[5] !== top_grid_x15_expected_prev[5] )
		&& ((top_grid_x15_expected_prev[5] !== last_top_grid_x15_exp[5]) ||
			on_first_change[16])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x15[5] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x15_expected_prev);
		$display ("     Real value = %b", top_grid_x15_prev);
		nummismatches = nummismatches + 1;
		on_first_change[16] = 1'b0;
		last_top_grid_x15_exp[5] = top_grid_x15_expected_prev[5];
	end
	if (
		( top_grid_x15_expected_prev[6] !== 1'bx ) && ( top_grid_x15_prev[6] !== top_grid_x15_expected_prev[6] )
		&& ((top_grid_x15_expected_prev[6] !== last_top_grid_x15_exp[6]) ||
			on_first_change[16])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x15[6] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x15_expected_prev);
		$display ("     Real value = %b", top_grid_x15_prev);
		nummismatches = nummismatches + 1;
		on_first_change[16] = 1'b0;
		last_top_grid_x15_exp[6] = top_grid_x15_expected_prev[6];
	end
	if (
		( top_grid_x15_expected_prev[7] !== 1'bx ) && ( top_grid_x15_prev[7] !== top_grid_x15_expected_prev[7] )
		&& ((top_grid_x15_expected_prev[7] !== last_top_grid_x15_exp[7]) ||
			on_first_change[16])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x15[7] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x15_expected_prev);
		$display ("     Real value = %b", top_grid_x15_prev);
		nummismatches = nummismatches + 1;
		on_first_change[16] = 1'b0;
		last_top_grid_x15_exp[7] = top_grid_x15_expected_prev[7];
	end
	if (
		( top_grid_x15_expected_prev[8] !== 1'bx ) && ( top_grid_x15_prev[8] !== top_grid_x15_expected_prev[8] )
		&& ((top_grid_x15_expected_prev[8] !== last_top_grid_x15_exp[8]) ||
			on_first_change[16])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x15[8] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x15_expected_prev);
		$display ("     Real value = %b", top_grid_x15_prev);
		nummismatches = nummismatches + 1;
		on_first_change[16] = 1'b0;
		last_top_grid_x15_exp[8] = top_grid_x15_expected_prev[8];
	end
	if (
		( top_grid_x15_expected_prev[9] !== 1'bx ) && ( top_grid_x15_prev[9] !== top_grid_x15_expected_prev[9] )
		&& ((top_grid_x15_expected_prev[9] !== last_top_grid_x15_exp[9]) ||
			on_first_change[16])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x15[9] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x15_expected_prev);
		$display ("     Real value = %b", top_grid_x15_prev);
		nummismatches = nummismatches + 1;
		on_first_change[16] = 1'b0;
		last_top_grid_x15_exp[9] = top_grid_x15_expected_prev[9];
	end
	if (
		( top_grid_x16_expected_prev[0] !== 1'bx ) && ( top_grid_x16_prev[0] !== top_grid_x16_expected_prev[0] )
		&& ((top_grid_x16_expected_prev[0] !== last_top_grid_x16_exp[0]) ||
			on_first_change[17])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x16[0] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x16_expected_prev);
		$display ("     Real value = %b", top_grid_x16_prev);
		nummismatches = nummismatches + 1;
		on_first_change[17] = 1'b0;
		last_top_grid_x16_exp[0] = top_grid_x16_expected_prev[0];
	end
	if (
		( top_grid_x16_expected_prev[1] !== 1'bx ) && ( top_grid_x16_prev[1] !== top_grid_x16_expected_prev[1] )
		&& ((top_grid_x16_expected_prev[1] !== last_top_grid_x16_exp[1]) ||
			on_first_change[17])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x16[1] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x16_expected_prev);
		$display ("     Real value = %b", top_grid_x16_prev);
		nummismatches = nummismatches + 1;
		on_first_change[17] = 1'b0;
		last_top_grid_x16_exp[1] = top_grid_x16_expected_prev[1];
	end
	if (
		( top_grid_x16_expected_prev[2] !== 1'bx ) && ( top_grid_x16_prev[2] !== top_grid_x16_expected_prev[2] )
		&& ((top_grid_x16_expected_prev[2] !== last_top_grid_x16_exp[2]) ||
			on_first_change[17])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x16[2] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x16_expected_prev);
		$display ("     Real value = %b", top_grid_x16_prev);
		nummismatches = nummismatches + 1;
		on_first_change[17] = 1'b0;
		last_top_grid_x16_exp[2] = top_grid_x16_expected_prev[2];
	end
	if (
		( top_grid_x16_expected_prev[3] !== 1'bx ) && ( top_grid_x16_prev[3] !== top_grid_x16_expected_prev[3] )
		&& ((top_grid_x16_expected_prev[3] !== last_top_grid_x16_exp[3]) ||
			on_first_change[17])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x16[3] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x16_expected_prev);
		$display ("     Real value = %b", top_grid_x16_prev);
		nummismatches = nummismatches + 1;
		on_first_change[17] = 1'b0;
		last_top_grid_x16_exp[3] = top_grid_x16_expected_prev[3];
	end
	if (
		( top_grid_x16_expected_prev[4] !== 1'bx ) && ( top_grid_x16_prev[4] !== top_grid_x16_expected_prev[4] )
		&& ((top_grid_x16_expected_prev[4] !== last_top_grid_x16_exp[4]) ||
			on_first_change[17])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x16[4] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x16_expected_prev);
		$display ("     Real value = %b", top_grid_x16_prev);
		nummismatches = nummismatches + 1;
		on_first_change[17] = 1'b0;
		last_top_grid_x16_exp[4] = top_grid_x16_expected_prev[4];
	end
	if (
		( top_grid_x16_expected_prev[5] !== 1'bx ) && ( top_grid_x16_prev[5] !== top_grid_x16_expected_prev[5] )
		&& ((top_grid_x16_expected_prev[5] !== last_top_grid_x16_exp[5]) ||
			on_first_change[17])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x16[5] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x16_expected_prev);
		$display ("     Real value = %b", top_grid_x16_prev);
		nummismatches = nummismatches + 1;
		on_first_change[17] = 1'b0;
		last_top_grid_x16_exp[5] = top_grid_x16_expected_prev[5];
	end
	if (
		( top_grid_x16_expected_prev[6] !== 1'bx ) && ( top_grid_x16_prev[6] !== top_grid_x16_expected_prev[6] )
		&& ((top_grid_x16_expected_prev[6] !== last_top_grid_x16_exp[6]) ||
			on_first_change[17])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x16[6] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x16_expected_prev);
		$display ("     Real value = %b", top_grid_x16_prev);
		nummismatches = nummismatches + 1;
		on_first_change[17] = 1'b0;
		last_top_grid_x16_exp[6] = top_grid_x16_expected_prev[6];
	end
	if (
		( top_grid_x16_expected_prev[7] !== 1'bx ) && ( top_grid_x16_prev[7] !== top_grid_x16_expected_prev[7] )
		&& ((top_grid_x16_expected_prev[7] !== last_top_grid_x16_exp[7]) ||
			on_first_change[17])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x16[7] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x16_expected_prev);
		$display ("     Real value = %b", top_grid_x16_prev);
		nummismatches = nummismatches + 1;
		on_first_change[17] = 1'b0;
		last_top_grid_x16_exp[7] = top_grid_x16_expected_prev[7];
	end
	if (
		( top_grid_x16_expected_prev[8] !== 1'bx ) && ( top_grid_x16_prev[8] !== top_grid_x16_expected_prev[8] )
		&& ((top_grid_x16_expected_prev[8] !== last_top_grid_x16_exp[8]) ||
			on_first_change[17])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x16[8] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x16_expected_prev);
		$display ("     Real value = %b", top_grid_x16_prev);
		nummismatches = nummismatches + 1;
		on_first_change[17] = 1'b0;
		last_top_grid_x16_exp[8] = top_grid_x16_expected_prev[8];
	end
	if (
		( top_grid_x16_expected_prev[9] !== 1'bx ) && ( top_grid_x16_prev[9] !== top_grid_x16_expected_prev[9] )
		&& ((top_grid_x16_expected_prev[9] !== last_top_grid_x16_exp[9]) ||
			on_first_change[17])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x16[9] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x16_expected_prev);
		$display ("     Real value = %b", top_grid_x16_prev);
		nummismatches = nummismatches + 1;
		on_first_change[17] = 1'b0;
		last_top_grid_x16_exp[9] = top_grid_x16_expected_prev[9];
	end
	if (
		( top_grid_x17_expected_prev[0] !== 1'bx ) && ( top_grid_x17_prev[0] !== top_grid_x17_expected_prev[0] )
		&& ((top_grid_x17_expected_prev[0] !== last_top_grid_x17_exp[0]) ||
			on_first_change[18])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x17[0] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x17_expected_prev);
		$display ("     Real value = %b", top_grid_x17_prev);
		nummismatches = nummismatches + 1;
		on_first_change[18] = 1'b0;
		last_top_grid_x17_exp[0] = top_grid_x17_expected_prev[0];
	end
	if (
		( top_grid_x17_expected_prev[1] !== 1'bx ) && ( top_grid_x17_prev[1] !== top_grid_x17_expected_prev[1] )
		&& ((top_grid_x17_expected_prev[1] !== last_top_grid_x17_exp[1]) ||
			on_first_change[18])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x17[1] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x17_expected_prev);
		$display ("     Real value = %b", top_grid_x17_prev);
		nummismatches = nummismatches + 1;
		on_first_change[18] = 1'b0;
		last_top_grid_x17_exp[1] = top_grid_x17_expected_prev[1];
	end
	if (
		( top_grid_x17_expected_prev[2] !== 1'bx ) && ( top_grid_x17_prev[2] !== top_grid_x17_expected_prev[2] )
		&& ((top_grid_x17_expected_prev[2] !== last_top_grid_x17_exp[2]) ||
			on_first_change[18])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x17[2] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x17_expected_prev);
		$display ("     Real value = %b", top_grid_x17_prev);
		nummismatches = nummismatches + 1;
		on_first_change[18] = 1'b0;
		last_top_grid_x17_exp[2] = top_grid_x17_expected_prev[2];
	end
	if (
		( top_grid_x17_expected_prev[3] !== 1'bx ) && ( top_grid_x17_prev[3] !== top_grid_x17_expected_prev[3] )
		&& ((top_grid_x17_expected_prev[3] !== last_top_grid_x17_exp[3]) ||
			on_first_change[18])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x17[3] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x17_expected_prev);
		$display ("     Real value = %b", top_grid_x17_prev);
		nummismatches = nummismatches + 1;
		on_first_change[18] = 1'b0;
		last_top_grid_x17_exp[3] = top_grid_x17_expected_prev[3];
	end
	if (
		( top_grid_x17_expected_prev[4] !== 1'bx ) && ( top_grid_x17_prev[4] !== top_grid_x17_expected_prev[4] )
		&& ((top_grid_x17_expected_prev[4] !== last_top_grid_x17_exp[4]) ||
			on_first_change[18])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x17[4] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x17_expected_prev);
		$display ("     Real value = %b", top_grid_x17_prev);
		nummismatches = nummismatches + 1;
		on_first_change[18] = 1'b0;
		last_top_grid_x17_exp[4] = top_grid_x17_expected_prev[4];
	end
	if (
		( top_grid_x17_expected_prev[5] !== 1'bx ) && ( top_grid_x17_prev[5] !== top_grid_x17_expected_prev[5] )
		&& ((top_grid_x17_expected_prev[5] !== last_top_grid_x17_exp[5]) ||
			on_first_change[18])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x17[5] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x17_expected_prev);
		$display ("     Real value = %b", top_grid_x17_prev);
		nummismatches = nummismatches + 1;
		on_first_change[18] = 1'b0;
		last_top_grid_x17_exp[5] = top_grid_x17_expected_prev[5];
	end
	if (
		( top_grid_x17_expected_prev[6] !== 1'bx ) && ( top_grid_x17_prev[6] !== top_grid_x17_expected_prev[6] )
		&& ((top_grid_x17_expected_prev[6] !== last_top_grid_x17_exp[6]) ||
			on_first_change[18])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x17[6] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x17_expected_prev);
		$display ("     Real value = %b", top_grid_x17_prev);
		nummismatches = nummismatches + 1;
		on_first_change[18] = 1'b0;
		last_top_grid_x17_exp[6] = top_grid_x17_expected_prev[6];
	end
	if (
		( top_grid_x17_expected_prev[7] !== 1'bx ) && ( top_grid_x17_prev[7] !== top_grid_x17_expected_prev[7] )
		&& ((top_grid_x17_expected_prev[7] !== last_top_grid_x17_exp[7]) ||
			on_first_change[18])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x17[7] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x17_expected_prev);
		$display ("     Real value = %b", top_grid_x17_prev);
		nummismatches = nummismatches + 1;
		on_first_change[18] = 1'b0;
		last_top_grid_x17_exp[7] = top_grid_x17_expected_prev[7];
	end
	if (
		( top_grid_x17_expected_prev[8] !== 1'bx ) && ( top_grid_x17_prev[8] !== top_grid_x17_expected_prev[8] )
		&& ((top_grid_x17_expected_prev[8] !== last_top_grid_x17_exp[8]) ||
			on_first_change[18])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x17[8] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x17_expected_prev);
		$display ("     Real value = %b", top_grid_x17_prev);
		nummismatches = nummismatches + 1;
		on_first_change[18] = 1'b0;
		last_top_grid_x17_exp[8] = top_grid_x17_expected_prev[8];
	end
	if (
		( top_grid_x17_expected_prev[9] !== 1'bx ) && ( top_grid_x17_prev[9] !== top_grid_x17_expected_prev[9] )
		&& ((top_grid_x17_expected_prev[9] !== last_top_grid_x17_exp[9]) ||
			on_first_change[18])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x17[9] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x17_expected_prev);
		$display ("     Real value = %b", top_grid_x17_prev);
		nummismatches = nummismatches + 1;
		on_first_change[18] = 1'b0;
		last_top_grid_x17_exp[9] = top_grid_x17_expected_prev[9];
	end
	if (
		( top_grid_x18_expected_prev[0] !== 1'bx ) && ( top_grid_x18_prev[0] !== top_grid_x18_expected_prev[0] )
		&& ((top_grid_x18_expected_prev[0] !== last_top_grid_x18_exp[0]) ||
			on_first_change[19])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x18[0] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x18_expected_prev);
		$display ("     Real value = %b", top_grid_x18_prev);
		nummismatches = nummismatches + 1;
		on_first_change[19] = 1'b0;
		last_top_grid_x18_exp[0] = top_grid_x18_expected_prev[0];
	end
	if (
		( top_grid_x18_expected_prev[1] !== 1'bx ) && ( top_grid_x18_prev[1] !== top_grid_x18_expected_prev[1] )
		&& ((top_grid_x18_expected_prev[1] !== last_top_grid_x18_exp[1]) ||
			on_first_change[19])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x18[1] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x18_expected_prev);
		$display ("     Real value = %b", top_grid_x18_prev);
		nummismatches = nummismatches + 1;
		on_first_change[19] = 1'b0;
		last_top_grid_x18_exp[1] = top_grid_x18_expected_prev[1];
	end
	if (
		( top_grid_x18_expected_prev[2] !== 1'bx ) && ( top_grid_x18_prev[2] !== top_grid_x18_expected_prev[2] )
		&& ((top_grid_x18_expected_prev[2] !== last_top_grid_x18_exp[2]) ||
			on_first_change[19])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x18[2] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x18_expected_prev);
		$display ("     Real value = %b", top_grid_x18_prev);
		nummismatches = nummismatches + 1;
		on_first_change[19] = 1'b0;
		last_top_grid_x18_exp[2] = top_grid_x18_expected_prev[2];
	end
	if (
		( top_grid_x18_expected_prev[3] !== 1'bx ) && ( top_grid_x18_prev[3] !== top_grid_x18_expected_prev[3] )
		&& ((top_grid_x18_expected_prev[3] !== last_top_grid_x18_exp[3]) ||
			on_first_change[19])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x18[3] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x18_expected_prev);
		$display ("     Real value = %b", top_grid_x18_prev);
		nummismatches = nummismatches + 1;
		on_first_change[19] = 1'b0;
		last_top_grid_x18_exp[3] = top_grid_x18_expected_prev[3];
	end
	if (
		( top_grid_x18_expected_prev[4] !== 1'bx ) && ( top_grid_x18_prev[4] !== top_grid_x18_expected_prev[4] )
		&& ((top_grid_x18_expected_prev[4] !== last_top_grid_x18_exp[4]) ||
			on_first_change[19])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x18[4] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x18_expected_prev);
		$display ("     Real value = %b", top_grid_x18_prev);
		nummismatches = nummismatches + 1;
		on_first_change[19] = 1'b0;
		last_top_grid_x18_exp[4] = top_grid_x18_expected_prev[4];
	end
	if (
		( top_grid_x18_expected_prev[5] !== 1'bx ) && ( top_grid_x18_prev[5] !== top_grid_x18_expected_prev[5] )
		&& ((top_grid_x18_expected_prev[5] !== last_top_grid_x18_exp[5]) ||
			on_first_change[19])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x18[5] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x18_expected_prev);
		$display ("     Real value = %b", top_grid_x18_prev);
		nummismatches = nummismatches + 1;
		on_first_change[19] = 1'b0;
		last_top_grid_x18_exp[5] = top_grid_x18_expected_prev[5];
	end
	if (
		( top_grid_x18_expected_prev[6] !== 1'bx ) && ( top_grid_x18_prev[6] !== top_grid_x18_expected_prev[6] )
		&& ((top_grid_x18_expected_prev[6] !== last_top_grid_x18_exp[6]) ||
			on_first_change[19])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x18[6] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x18_expected_prev);
		$display ("     Real value = %b", top_grid_x18_prev);
		nummismatches = nummismatches + 1;
		on_first_change[19] = 1'b0;
		last_top_grid_x18_exp[6] = top_grid_x18_expected_prev[6];
	end
	if (
		( top_grid_x18_expected_prev[7] !== 1'bx ) && ( top_grid_x18_prev[7] !== top_grid_x18_expected_prev[7] )
		&& ((top_grid_x18_expected_prev[7] !== last_top_grid_x18_exp[7]) ||
			on_first_change[19])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x18[7] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x18_expected_prev);
		$display ("     Real value = %b", top_grid_x18_prev);
		nummismatches = nummismatches + 1;
		on_first_change[19] = 1'b0;
		last_top_grid_x18_exp[7] = top_grid_x18_expected_prev[7];
	end
	if (
		( top_grid_x18_expected_prev[8] !== 1'bx ) && ( top_grid_x18_prev[8] !== top_grid_x18_expected_prev[8] )
		&& ((top_grid_x18_expected_prev[8] !== last_top_grid_x18_exp[8]) ||
			on_first_change[19])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x18[8] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x18_expected_prev);
		$display ("     Real value = %b", top_grid_x18_prev);
		nummismatches = nummismatches + 1;
		on_first_change[19] = 1'b0;
		last_top_grid_x18_exp[8] = top_grid_x18_expected_prev[8];
	end
	if (
		( top_grid_x18_expected_prev[9] !== 1'bx ) && ( top_grid_x18_prev[9] !== top_grid_x18_expected_prev[9] )
		&& ((top_grid_x18_expected_prev[9] !== last_top_grid_x18_exp[9]) ||
			on_first_change[19])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x18[9] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x18_expected_prev);
		$display ("     Real value = %b", top_grid_x18_prev);
		nummismatches = nummismatches + 1;
		on_first_change[19] = 1'b0;
		last_top_grid_x18_exp[9] = top_grid_x18_expected_prev[9];
	end
	if (
		( top_grid_x19_expected_prev[0] !== 1'bx ) && ( top_grid_x19_prev[0] !== top_grid_x19_expected_prev[0] )
		&& ((top_grid_x19_expected_prev[0] !== last_top_grid_x19_exp[0]) ||
			on_first_change[20])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x19[0] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x19_expected_prev);
		$display ("     Real value = %b", top_grid_x19_prev);
		nummismatches = nummismatches + 1;
		on_first_change[20] = 1'b0;
		last_top_grid_x19_exp[0] = top_grid_x19_expected_prev[0];
	end
	if (
		( top_grid_x19_expected_prev[1] !== 1'bx ) && ( top_grid_x19_prev[1] !== top_grid_x19_expected_prev[1] )
		&& ((top_grid_x19_expected_prev[1] !== last_top_grid_x19_exp[1]) ||
			on_first_change[20])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x19[1] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x19_expected_prev);
		$display ("     Real value = %b", top_grid_x19_prev);
		nummismatches = nummismatches + 1;
		on_first_change[20] = 1'b0;
		last_top_grid_x19_exp[1] = top_grid_x19_expected_prev[1];
	end
	if (
		( top_grid_x19_expected_prev[2] !== 1'bx ) && ( top_grid_x19_prev[2] !== top_grid_x19_expected_prev[2] )
		&& ((top_grid_x19_expected_prev[2] !== last_top_grid_x19_exp[2]) ||
			on_first_change[20])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x19[2] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x19_expected_prev);
		$display ("     Real value = %b", top_grid_x19_prev);
		nummismatches = nummismatches + 1;
		on_first_change[20] = 1'b0;
		last_top_grid_x19_exp[2] = top_grid_x19_expected_prev[2];
	end
	if (
		( top_grid_x19_expected_prev[3] !== 1'bx ) && ( top_grid_x19_prev[3] !== top_grid_x19_expected_prev[3] )
		&& ((top_grid_x19_expected_prev[3] !== last_top_grid_x19_exp[3]) ||
			on_first_change[20])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x19[3] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x19_expected_prev);
		$display ("     Real value = %b", top_grid_x19_prev);
		nummismatches = nummismatches + 1;
		on_first_change[20] = 1'b0;
		last_top_grid_x19_exp[3] = top_grid_x19_expected_prev[3];
	end
	if (
		( top_grid_x19_expected_prev[4] !== 1'bx ) && ( top_grid_x19_prev[4] !== top_grid_x19_expected_prev[4] )
		&& ((top_grid_x19_expected_prev[4] !== last_top_grid_x19_exp[4]) ||
			on_first_change[20])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x19[4] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x19_expected_prev);
		$display ("     Real value = %b", top_grid_x19_prev);
		nummismatches = nummismatches + 1;
		on_first_change[20] = 1'b0;
		last_top_grid_x19_exp[4] = top_grid_x19_expected_prev[4];
	end
	if (
		( top_grid_x19_expected_prev[5] !== 1'bx ) && ( top_grid_x19_prev[5] !== top_grid_x19_expected_prev[5] )
		&& ((top_grid_x19_expected_prev[5] !== last_top_grid_x19_exp[5]) ||
			on_first_change[20])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x19[5] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x19_expected_prev);
		$display ("     Real value = %b", top_grid_x19_prev);
		nummismatches = nummismatches + 1;
		on_first_change[20] = 1'b0;
		last_top_grid_x19_exp[5] = top_grid_x19_expected_prev[5];
	end
	if (
		( top_grid_x19_expected_prev[6] !== 1'bx ) && ( top_grid_x19_prev[6] !== top_grid_x19_expected_prev[6] )
		&& ((top_grid_x19_expected_prev[6] !== last_top_grid_x19_exp[6]) ||
			on_first_change[20])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x19[6] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x19_expected_prev);
		$display ("     Real value = %b", top_grid_x19_prev);
		nummismatches = nummismatches + 1;
		on_first_change[20] = 1'b0;
		last_top_grid_x19_exp[6] = top_grid_x19_expected_prev[6];
	end
	if (
		( top_grid_x19_expected_prev[7] !== 1'bx ) && ( top_grid_x19_prev[7] !== top_grid_x19_expected_prev[7] )
		&& ((top_grid_x19_expected_prev[7] !== last_top_grid_x19_exp[7]) ||
			on_first_change[20])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x19[7] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x19_expected_prev);
		$display ("     Real value = %b", top_grid_x19_prev);
		nummismatches = nummismatches + 1;
		on_first_change[20] = 1'b0;
		last_top_grid_x19_exp[7] = top_grid_x19_expected_prev[7];
	end
	if (
		( top_grid_x19_expected_prev[8] !== 1'bx ) && ( top_grid_x19_prev[8] !== top_grid_x19_expected_prev[8] )
		&& ((top_grid_x19_expected_prev[8] !== last_top_grid_x19_exp[8]) ||
			on_first_change[20])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x19[8] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x19_expected_prev);
		$display ("     Real value = %b", top_grid_x19_prev);
		nummismatches = nummismatches + 1;
		on_first_change[20] = 1'b0;
		last_top_grid_x19_exp[8] = top_grid_x19_expected_prev[8];
	end
	if (
		( top_grid_x19_expected_prev[9] !== 1'bx ) && ( top_grid_x19_prev[9] !== top_grid_x19_expected_prev[9] )
		&& ((top_grid_x19_expected_prev[9] !== last_top_grid_x19_exp[9]) ||
			on_first_change[20])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x19[9] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x19_expected_prev);
		$display ("     Real value = %b", top_grid_x19_prev);
		nummismatches = nummismatches + 1;
		on_first_change[20] = 1'b0;
		last_top_grid_x19_exp[9] = top_grid_x19_expected_prev[9];
	end
	if (
		( top_grid_x20_expected_prev[0] !== 1'bx ) && ( top_grid_x20_prev[0] !== top_grid_x20_expected_prev[0] )
		&& ((top_grid_x20_expected_prev[0] !== last_top_grid_x20_exp[0]) ||
			on_first_change[21])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x20[0] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x20_expected_prev);
		$display ("     Real value = %b", top_grid_x20_prev);
		nummismatches = nummismatches + 1;
		on_first_change[21] = 1'b0;
		last_top_grid_x20_exp[0] = top_grid_x20_expected_prev[0];
	end
	if (
		( top_grid_x20_expected_prev[1] !== 1'bx ) && ( top_grid_x20_prev[1] !== top_grid_x20_expected_prev[1] )
		&& ((top_grid_x20_expected_prev[1] !== last_top_grid_x20_exp[1]) ||
			on_first_change[21])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x20[1] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x20_expected_prev);
		$display ("     Real value = %b", top_grid_x20_prev);
		nummismatches = nummismatches + 1;
		on_first_change[21] = 1'b0;
		last_top_grid_x20_exp[1] = top_grid_x20_expected_prev[1];
	end
	if (
		( top_grid_x20_expected_prev[2] !== 1'bx ) && ( top_grid_x20_prev[2] !== top_grid_x20_expected_prev[2] )
		&& ((top_grid_x20_expected_prev[2] !== last_top_grid_x20_exp[2]) ||
			on_first_change[21])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x20[2] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x20_expected_prev);
		$display ("     Real value = %b", top_grid_x20_prev);
		nummismatches = nummismatches + 1;
		on_first_change[21] = 1'b0;
		last_top_grid_x20_exp[2] = top_grid_x20_expected_prev[2];
	end
	if (
		( top_grid_x20_expected_prev[3] !== 1'bx ) && ( top_grid_x20_prev[3] !== top_grid_x20_expected_prev[3] )
		&& ((top_grid_x20_expected_prev[3] !== last_top_grid_x20_exp[3]) ||
			on_first_change[21])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x20[3] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x20_expected_prev);
		$display ("     Real value = %b", top_grid_x20_prev);
		nummismatches = nummismatches + 1;
		on_first_change[21] = 1'b0;
		last_top_grid_x20_exp[3] = top_grid_x20_expected_prev[3];
	end
	if (
		( top_grid_x20_expected_prev[4] !== 1'bx ) && ( top_grid_x20_prev[4] !== top_grid_x20_expected_prev[4] )
		&& ((top_grid_x20_expected_prev[4] !== last_top_grid_x20_exp[4]) ||
			on_first_change[21])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x20[4] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x20_expected_prev);
		$display ("     Real value = %b", top_grid_x20_prev);
		nummismatches = nummismatches + 1;
		on_first_change[21] = 1'b0;
		last_top_grid_x20_exp[4] = top_grid_x20_expected_prev[4];
	end
	if (
		( top_grid_x20_expected_prev[5] !== 1'bx ) && ( top_grid_x20_prev[5] !== top_grid_x20_expected_prev[5] )
		&& ((top_grid_x20_expected_prev[5] !== last_top_grid_x20_exp[5]) ||
			on_first_change[21])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x20[5] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x20_expected_prev);
		$display ("     Real value = %b", top_grid_x20_prev);
		nummismatches = nummismatches + 1;
		on_first_change[21] = 1'b0;
		last_top_grid_x20_exp[5] = top_grid_x20_expected_prev[5];
	end
	if (
		( top_grid_x20_expected_prev[6] !== 1'bx ) && ( top_grid_x20_prev[6] !== top_grid_x20_expected_prev[6] )
		&& ((top_grid_x20_expected_prev[6] !== last_top_grid_x20_exp[6]) ||
			on_first_change[21])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x20[6] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x20_expected_prev);
		$display ("     Real value = %b", top_grid_x20_prev);
		nummismatches = nummismatches + 1;
		on_first_change[21] = 1'b0;
		last_top_grid_x20_exp[6] = top_grid_x20_expected_prev[6];
	end
	if (
		( top_grid_x20_expected_prev[7] !== 1'bx ) && ( top_grid_x20_prev[7] !== top_grid_x20_expected_prev[7] )
		&& ((top_grid_x20_expected_prev[7] !== last_top_grid_x20_exp[7]) ||
			on_first_change[21])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x20[7] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x20_expected_prev);
		$display ("     Real value = %b", top_grid_x20_prev);
		nummismatches = nummismatches + 1;
		on_first_change[21] = 1'b0;
		last_top_grid_x20_exp[7] = top_grid_x20_expected_prev[7];
	end
	if (
		( top_grid_x20_expected_prev[8] !== 1'bx ) && ( top_grid_x20_prev[8] !== top_grid_x20_expected_prev[8] )
		&& ((top_grid_x20_expected_prev[8] !== last_top_grid_x20_exp[8]) ||
			on_first_change[21])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x20[8] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x20_expected_prev);
		$display ("     Real value = %b", top_grid_x20_prev);
		nummismatches = nummismatches + 1;
		on_first_change[21] = 1'b0;
		last_top_grid_x20_exp[8] = top_grid_x20_expected_prev[8];
	end
	if (
		( top_grid_x20_expected_prev[9] !== 1'bx ) && ( top_grid_x20_prev[9] !== top_grid_x20_expected_prev[9] )
		&& ((top_grid_x20_expected_prev[9] !== last_top_grid_x20_exp[9]) ||
			on_first_change[21])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x20[9] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x20_expected_prev);
		$display ("     Real value = %b", top_grid_x20_prev);
		nummismatches = nummismatches + 1;
		on_first_change[21] = 1'b0;
		last_top_grid_x20_exp[9] = top_grid_x20_expected_prev[9];
	end
	if (
		( top_grid_x21_expected_prev[0] !== 1'bx ) && ( top_grid_x21_prev[0] !== top_grid_x21_expected_prev[0] )
		&& ((top_grid_x21_expected_prev[0] !== last_top_grid_x21_exp[0]) ||
			on_first_change[22])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x21[0] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x21_expected_prev);
		$display ("     Real value = %b", top_grid_x21_prev);
		nummismatches = nummismatches + 1;
		on_first_change[22] = 1'b0;
		last_top_grid_x21_exp[0] = top_grid_x21_expected_prev[0];
	end
	if (
		( top_grid_x21_expected_prev[1] !== 1'bx ) && ( top_grid_x21_prev[1] !== top_grid_x21_expected_prev[1] )
		&& ((top_grid_x21_expected_prev[1] !== last_top_grid_x21_exp[1]) ||
			on_first_change[22])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x21[1] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x21_expected_prev);
		$display ("     Real value = %b", top_grid_x21_prev);
		nummismatches = nummismatches + 1;
		on_first_change[22] = 1'b0;
		last_top_grid_x21_exp[1] = top_grid_x21_expected_prev[1];
	end
	if (
		( top_grid_x21_expected_prev[2] !== 1'bx ) && ( top_grid_x21_prev[2] !== top_grid_x21_expected_prev[2] )
		&& ((top_grid_x21_expected_prev[2] !== last_top_grid_x21_exp[2]) ||
			on_first_change[22])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x21[2] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x21_expected_prev);
		$display ("     Real value = %b", top_grid_x21_prev);
		nummismatches = nummismatches + 1;
		on_first_change[22] = 1'b0;
		last_top_grid_x21_exp[2] = top_grid_x21_expected_prev[2];
	end
	if (
		( top_grid_x21_expected_prev[3] !== 1'bx ) && ( top_grid_x21_prev[3] !== top_grid_x21_expected_prev[3] )
		&& ((top_grid_x21_expected_prev[3] !== last_top_grid_x21_exp[3]) ||
			on_first_change[22])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x21[3] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x21_expected_prev);
		$display ("     Real value = %b", top_grid_x21_prev);
		nummismatches = nummismatches + 1;
		on_first_change[22] = 1'b0;
		last_top_grid_x21_exp[3] = top_grid_x21_expected_prev[3];
	end
	if (
		( top_grid_x21_expected_prev[4] !== 1'bx ) && ( top_grid_x21_prev[4] !== top_grid_x21_expected_prev[4] )
		&& ((top_grid_x21_expected_prev[4] !== last_top_grid_x21_exp[4]) ||
			on_first_change[22])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x21[4] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x21_expected_prev);
		$display ("     Real value = %b", top_grid_x21_prev);
		nummismatches = nummismatches + 1;
		on_first_change[22] = 1'b0;
		last_top_grid_x21_exp[4] = top_grid_x21_expected_prev[4];
	end
	if (
		( top_grid_x21_expected_prev[5] !== 1'bx ) && ( top_grid_x21_prev[5] !== top_grid_x21_expected_prev[5] )
		&& ((top_grid_x21_expected_prev[5] !== last_top_grid_x21_exp[5]) ||
			on_first_change[22])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x21[5] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x21_expected_prev);
		$display ("     Real value = %b", top_grid_x21_prev);
		nummismatches = nummismatches + 1;
		on_first_change[22] = 1'b0;
		last_top_grid_x21_exp[5] = top_grid_x21_expected_prev[5];
	end
	if (
		( top_grid_x21_expected_prev[6] !== 1'bx ) && ( top_grid_x21_prev[6] !== top_grid_x21_expected_prev[6] )
		&& ((top_grid_x21_expected_prev[6] !== last_top_grid_x21_exp[6]) ||
			on_first_change[22])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x21[6] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x21_expected_prev);
		$display ("     Real value = %b", top_grid_x21_prev);
		nummismatches = nummismatches + 1;
		on_first_change[22] = 1'b0;
		last_top_grid_x21_exp[6] = top_grid_x21_expected_prev[6];
	end
	if (
		( top_grid_x21_expected_prev[7] !== 1'bx ) && ( top_grid_x21_prev[7] !== top_grid_x21_expected_prev[7] )
		&& ((top_grid_x21_expected_prev[7] !== last_top_grid_x21_exp[7]) ||
			on_first_change[22])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x21[7] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x21_expected_prev);
		$display ("     Real value = %b", top_grid_x21_prev);
		nummismatches = nummismatches + 1;
		on_first_change[22] = 1'b0;
		last_top_grid_x21_exp[7] = top_grid_x21_expected_prev[7];
	end
	if (
		( top_grid_x21_expected_prev[8] !== 1'bx ) && ( top_grid_x21_prev[8] !== top_grid_x21_expected_prev[8] )
		&& ((top_grid_x21_expected_prev[8] !== last_top_grid_x21_exp[8]) ||
			on_first_change[22])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x21[8] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x21_expected_prev);
		$display ("     Real value = %b", top_grid_x21_prev);
		nummismatches = nummismatches + 1;
		on_first_change[22] = 1'b0;
		last_top_grid_x21_exp[8] = top_grid_x21_expected_prev[8];
	end
	if (
		( top_grid_x21_expected_prev[9] !== 1'bx ) && ( top_grid_x21_prev[9] !== top_grid_x21_expected_prev[9] )
		&& ((top_grid_x21_expected_prev[9] !== last_top_grid_x21_exp[9]) ||
			on_first_change[22])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x21[9] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x21_expected_prev);
		$display ("     Real value = %b", top_grid_x21_prev);
		nummismatches = nummismatches + 1;
		on_first_change[22] = 1'b0;
		last_top_grid_x21_exp[9] = top_grid_x21_expected_prev[9];
	end
	if (
		( top_grid_x22_expected_prev[0] !== 1'bx ) && ( top_grid_x22_prev[0] !== top_grid_x22_expected_prev[0] )
		&& ((top_grid_x22_expected_prev[0] !== last_top_grid_x22_exp[0]) ||
			on_first_change[23])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x22[0] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x22_expected_prev);
		$display ("     Real value = %b", top_grid_x22_prev);
		nummismatches = nummismatches + 1;
		on_first_change[23] = 1'b0;
		last_top_grid_x22_exp[0] = top_grid_x22_expected_prev[0];
	end
	if (
		( top_grid_x22_expected_prev[1] !== 1'bx ) && ( top_grid_x22_prev[1] !== top_grid_x22_expected_prev[1] )
		&& ((top_grid_x22_expected_prev[1] !== last_top_grid_x22_exp[1]) ||
			on_first_change[23])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x22[1] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x22_expected_prev);
		$display ("     Real value = %b", top_grid_x22_prev);
		nummismatches = nummismatches + 1;
		on_first_change[23] = 1'b0;
		last_top_grid_x22_exp[1] = top_grid_x22_expected_prev[1];
	end
	if (
		( top_grid_x22_expected_prev[2] !== 1'bx ) && ( top_grid_x22_prev[2] !== top_grid_x22_expected_prev[2] )
		&& ((top_grid_x22_expected_prev[2] !== last_top_grid_x22_exp[2]) ||
			on_first_change[23])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x22[2] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x22_expected_prev);
		$display ("     Real value = %b", top_grid_x22_prev);
		nummismatches = nummismatches + 1;
		on_first_change[23] = 1'b0;
		last_top_grid_x22_exp[2] = top_grid_x22_expected_prev[2];
	end
	if (
		( top_grid_x22_expected_prev[3] !== 1'bx ) && ( top_grid_x22_prev[3] !== top_grid_x22_expected_prev[3] )
		&& ((top_grid_x22_expected_prev[3] !== last_top_grid_x22_exp[3]) ||
			on_first_change[23])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x22[3] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x22_expected_prev);
		$display ("     Real value = %b", top_grid_x22_prev);
		nummismatches = nummismatches + 1;
		on_first_change[23] = 1'b0;
		last_top_grid_x22_exp[3] = top_grid_x22_expected_prev[3];
	end
	if (
		( top_grid_x22_expected_prev[4] !== 1'bx ) && ( top_grid_x22_prev[4] !== top_grid_x22_expected_prev[4] )
		&& ((top_grid_x22_expected_prev[4] !== last_top_grid_x22_exp[4]) ||
			on_first_change[23])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x22[4] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x22_expected_prev);
		$display ("     Real value = %b", top_grid_x22_prev);
		nummismatches = nummismatches + 1;
		on_first_change[23] = 1'b0;
		last_top_grid_x22_exp[4] = top_grid_x22_expected_prev[4];
	end
	if (
		( top_grid_x22_expected_prev[5] !== 1'bx ) && ( top_grid_x22_prev[5] !== top_grid_x22_expected_prev[5] )
		&& ((top_grid_x22_expected_prev[5] !== last_top_grid_x22_exp[5]) ||
			on_first_change[23])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x22[5] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x22_expected_prev);
		$display ("     Real value = %b", top_grid_x22_prev);
		nummismatches = nummismatches + 1;
		on_first_change[23] = 1'b0;
		last_top_grid_x22_exp[5] = top_grid_x22_expected_prev[5];
	end
	if (
		( top_grid_x22_expected_prev[6] !== 1'bx ) && ( top_grid_x22_prev[6] !== top_grid_x22_expected_prev[6] )
		&& ((top_grid_x22_expected_prev[6] !== last_top_grid_x22_exp[6]) ||
			on_first_change[23])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x22[6] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x22_expected_prev);
		$display ("     Real value = %b", top_grid_x22_prev);
		nummismatches = nummismatches + 1;
		on_first_change[23] = 1'b0;
		last_top_grid_x22_exp[6] = top_grid_x22_expected_prev[6];
	end
	if (
		( top_grid_x22_expected_prev[7] !== 1'bx ) && ( top_grid_x22_prev[7] !== top_grid_x22_expected_prev[7] )
		&& ((top_grid_x22_expected_prev[7] !== last_top_grid_x22_exp[7]) ||
			on_first_change[23])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x22[7] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x22_expected_prev);
		$display ("     Real value = %b", top_grid_x22_prev);
		nummismatches = nummismatches + 1;
		on_first_change[23] = 1'b0;
		last_top_grid_x22_exp[7] = top_grid_x22_expected_prev[7];
	end
	if (
		( top_grid_x22_expected_prev[8] !== 1'bx ) && ( top_grid_x22_prev[8] !== top_grid_x22_expected_prev[8] )
		&& ((top_grid_x22_expected_prev[8] !== last_top_grid_x22_exp[8]) ||
			on_first_change[23])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x22[8] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x22_expected_prev);
		$display ("     Real value = %b", top_grid_x22_prev);
		nummismatches = nummismatches + 1;
		on_first_change[23] = 1'b0;
		last_top_grid_x22_exp[8] = top_grid_x22_expected_prev[8];
	end
	if (
		( top_grid_x22_expected_prev[9] !== 1'bx ) && ( top_grid_x22_prev[9] !== top_grid_x22_expected_prev[9] )
		&& ((top_grid_x22_expected_prev[9] !== last_top_grid_x22_exp[9]) ||
			on_first_change[23])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x22[9] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x22_expected_prev);
		$display ("     Real value = %b", top_grid_x22_prev);
		nummismatches = nummismatches + 1;
		on_first_change[23] = 1'b0;
		last_top_grid_x22_exp[9] = top_grid_x22_expected_prev[9];
	end
	if (
		( top_grid_x23_expected_prev[0] !== 1'bx ) && ( top_grid_x23_prev[0] !== top_grid_x23_expected_prev[0] )
		&& ((top_grid_x23_expected_prev[0] !== last_top_grid_x23_exp[0]) ||
			on_first_change[24])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x23[0] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x23_expected_prev);
		$display ("     Real value = %b", top_grid_x23_prev);
		nummismatches = nummismatches + 1;
		on_first_change[24] = 1'b0;
		last_top_grid_x23_exp[0] = top_grid_x23_expected_prev[0];
	end
	if (
		( top_grid_x23_expected_prev[1] !== 1'bx ) && ( top_grid_x23_prev[1] !== top_grid_x23_expected_prev[1] )
		&& ((top_grid_x23_expected_prev[1] !== last_top_grid_x23_exp[1]) ||
			on_first_change[24])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x23[1] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x23_expected_prev);
		$display ("     Real value = %b", top_grid_x23_prev);
		nummismatches = nummismatches + 1;
		on_first_change[24] = 1'b0;
		last_top_grid_x23_exp[1] = top_grid_x23_expected_prev[1];
	end
	if (
		( top_grid_x23_expected_prev[2] !== 1'bx ) && ( top_grid_x23_prev[2] !== top_grid_x23_expected_prev[2] )
		&& ((top_grid_x23_expected_prev[2] !== last_top_grid_x23_exp[2]) ||
			on_first_change[24])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x23[2] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x23_expected_prev);
		$display ("     Real value = %b", top_grid_x23_prev);
		nummismatches = nummismatches + 1;
		on_first_change[24] = 1'b0;
		last_top_grid_x23_exp[2] = top_grid_x23_expected_prev[2];
	end
	if (
		( top_grid_x23_expected_prev[3] !== 1'bx ) && ( top_grid_x23_prev[3] !== top_grid_x23_expected_prev[3] )
		&& ((top_grid_x23_expected_prev[3] !== last_top_grid_x23_exp[3]) ||
			on_first_change[24])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x23[3] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x23_expected_prev);
		$display ("     Real value = %b", top_grid_x23_prev);
		nummismatches = nummismatches + 1;
		on_first_change[24] = 1'b0;
		last_top_grid_x23_exp[3] = top_grid_x23_expected_prev[3];
	end
	if (
		( top_grid_x23_expected_prev[4] !== 1'bx ) && ( top_grid_x23_prev[4] !== top_grid_x23_expected_prev[4] )
		&& ((top_grid_x23_expected_prev[4] !== last_top_grid_x23_exp[4]) ||
			on_first_change[24])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x23[4] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x23_expected_prev);
		$display ("     Real value = %b", top_grid_x23_prev);
		nummismatches = nummismatches + 1;
		on_first_change[24] = 1'b0;
		last_top_grid_x23_exp[4] = top_grid_x23_expected_prev[4];
	end
	if (
		( top_grid_x23_expected_prev[5] !== 1'bx ) && ( top_grid_x23_prev[5] !== top_grid_x23_expected_prev[5] )
		&& ((top_grid_x23_expected_prev[5] !== last_top_grid_x23_exp[5]) ||
			on_first_change[24])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x23[5] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x23_expected_prev);
		$display ("     Real value = %b", top_grid_x23_prev);
		nummismatches = nummismatches + 1;
		on_first_change[24] = 1'b0;
		last_top_grid_x23_exp[5] = top_grid_x23_expected_prev[5];
	end
	if (
		( top_grid_x23_expected_prev[6] !== 1'bx ) && ( top_grid_x23_prev[6] !== top_grid_x23_expected_prev[6] )
		&& ((top_grid_x23_expected_prev[6] !== last_top_grid_x23_exp[6]) ||
			on_first_change[24])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x23[6] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x23_expected_prev);
		$display ("     Real value = %b", top_grid_x23_prev);
		nummismatches = nummismatches + 1;
		on_first_change[24] = 1'b0;
		last_top_grid_x23_exp[6] = top_grid_x23_expected_prev[6];
	end
	if (
		( top_grid_x23_expected_prev[7] !== 1'bx ) && ( top_grid_x23_prev[7] !== top_grid_x23_expected_prev[7] )
		&& ((top_grid_x23_expected_prev[7] !== last_top_grid_x23_exp[7]) ||
			on_first_change[24])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x23[7] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x23_expected_prev);
		$display ("     Real value = %b", top_grid_x23_prev);
		nummismatches = nummismatches + 1;
		on_first_change[24] = 1'b0;
		last_top_grid_x23_exp[7] = top_grid_x23_expected_prev[7];
	end
	if (
		( top_grid_x23_expected_prev[8] !== 1'bx ) && ( top_grid_x23_prev[8] !== top_grid_x23_expected_prev[8] )
		&& ((top_grid_x23_expected_prev[8] !== last_top_grid_x23_exp[8]) ||
			on_first_change[24])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x23[8] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x23_expected_prev);
		$display ("     Real value = %b", top_grid_x23_prev);
		nummismatches = nummismatches + 1;
		on_first_change[24] = 1'b0;
		last_top_grid_x23_exp[8] = top_grid_x23_expected_prev[8];
	end
	if (
		( top_grid_x23_expected_prev[9] !== 1'bx ) && ( top_grid_x23_prev[9] !== top_grid_x23_expected_prev[9] )
		&& ((top_grid_x23_expected_prev[9] !== last_top_grid_x23_exp[9]) ||
			on_first_change[24])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x23[9] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x23_expected_prev);
		$display ("     Real value = %b", top_grid_x23_prev);
		nummismatches = nummismatches + 1;
		on_first_change[24] = 1'b0;
		last_top_grid_x23_exp[9] = top_grid_x23_expected_prev[9];
	end
	if (
		( top_grid_x24_expected_prev[0] !== 1'bx ) && ( top_grid_x24_prev[0] !== top_grid_x24_expected_prev[0] )
		&& ((top_grid_x24_expected_prev[0] !== last_top_grid_x24_exp[0]) ||
			on_first_change[25])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x24[0] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x24_expected_prev);
		$display ("     Real value = %b", top_grid_x24_prev);
		nummismatches = nummismatches + 1;
		on_first_change[25] = 1'b0;
		last_top_grid_x24_exp[0] = top_grid_x24_expected_prev[0];
	end
	if (
		( top_grid_x24_expected_prev[1] !== 1'bx ) && ( top_grid_x24_prev[1] !== top_grid_x24_expected_prev[1] )
		&& ((top_grid_x24_expected_prev[1] !== last_top_grid_x24_exp[1]) ||
			on_first_change[25])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x24[1] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x24_expected_prev);
		$display ("     Real value = %b", top_grid_x24_prev);
		nummismatches = nummismatches + 1;
		on_first_change[25] = 1'b0;
		last_top_grid_x24_exp[1] = top_grid_x24_expected_prev[1];
	end
	if (
		( top_grid_x24_expected_prev[2] !== 1'bx ) && ( top_grid_x24_prev[2] !== top_grid_x24_expected_prev[2] )
		&& ((top_grid_x24_expected_prev[2] !== last_top_grid_x24_exp[2]) ||
			on_first_change[25])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x24[2] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x24_expected_prev);
		$display ("     Real value = %b", top_grid_x24_prev);
		nummismatches = nummismatches + 1;
		on_first_change[25] = 1'b0;
		last_top_grid_x24_exp[2] = top_grid_x24_expected_prev[2];
	end
	if (
		( top_grid_x24_expected_prev[3] !== 1'bx ) && ( top_grid_x24_prev[3] !== top_grid_x24_expected_prev[3] )
		&& ((top_grid_x24_expected_prev[3] !== last_top_grid_x24_exp[3]) ||
			on_first_change[25])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x24[3] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x24_expected_prev);
		$display ("     Real value = %b", top_grid_x24_prev);
		nummismatches = nummismatches + 1;
		on_first_change[25] = 1'b0;
		last_top_grid_x24_exp[3] = top_grid_x24_expected_prev[3];
	end
	if (
		( top_grid_x24_expected_prev[4] !== 1'bx ) && ( top_grid_x24_prev[4] !== top_grid_x24_expected_prev[4] )
		&& ((top_grid_x24_expected_prev[4] !== last_top_grid_x24_exp[4]) ||
			on_first_change[25])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x24[4] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x24_expected_prev);
		$display ("     Real value = %b", top_grid_x24_prev);
		nummismatches = nummismatches + 1;
		on_first_change[25] = 1'b0;
		last_top_grid_x24_exp[4] = top_grid_x24_expected_prev[4];
	end
	if (
		( top_grid_x24_expected_prev[5] !== 1'bx ) && ( top_grid_x24_prev[5] !== top_grid_x24_expected_prev[5] )
		&& ((top_grid_x24_expected_prev[5] !== last_top_grid_x24_exp[5]) ||
			on_first_change[25])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x24[5] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x24_expected_prev);
		$display ("     Real value = %b", top_grid_x24_prev);
		nummismatches = nummismatches + 1;
		on_first_change[25] = 1'b0;
		last_top_grid_x24_exp[5] = top_grid_x24_expected_prev[5];
	end
	if (
		( top_grid_x24_expected_prev[6] !== 1'bx ) && ( top_grid_x24_prev[6] !== top_grid_x24_expected_prev[6] )
		&& ((top_grid_x24_expected_prev[6] !== last_top_grid_x24_exp[6]) ||
			on_first_change[25])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x24[6] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x24_expected_prev);
		$display ("     Real value = %b", top_grid_x24_prev);
		nummismatches = nummismatches + 1;
		on_first_change[25] = 1'b0;
		last_top_grid_x24_exp[6] = top_grid_x24_expected_prev[6];
	end
	if (
		( top_grid_x24_expected_prev[7] !== 1'bx ) && ( top_grid_x24_prev[7] !== top_grid_x24_expected_prev[7] )
		&& ((top_grid_x24_expected_prev[7] !== last_top_grid_x24_exp[7]) ||
			on_first_change[25])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x24[7] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x24_expected_prev);
		$display ("     Real value = %b", top_grid_x24_prev);
		nummismatches = nummismatches + 1;
		on_first_change[25] = 1'b0;
		last_top_grid_x24_exp[7] = top_grid_x24_expected_prev[7];
	end
	if (
		( top_grid_x24_expected_prev[8] !== 1'bx ) && ( top_grid_x24_prev[8] !== top_grid_x24_expected_prev[8] )
		&& ((top_grid_x24_expected_prev[8] !== last_top_grid_x24_exp[8]) ||
			on_first_change[25])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x24[8] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x24_expected_prev);
		$display ("     Real value = %b", top_grid_x24_prev);
		nummismatches = nummismatches + 1;
		on_first_change[25] = 1'b0;
		last_top_grid_x24_exp[8] = top_grid_x24_expected_prev[8];
	end
	if (
		( top_grid_x24_expected_prev[9] !== 1'bx ) && ( top_grid_x24_prev[9] !== top_grid_x24_expected_prev[9] )
		&& ((top_grid_x24_expected_prev[9] !== last_top_grid_x24_exp[9]) ||
			on_first_change[25])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x24[9] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x24_expected_prev);
		$display ("     Real value = %b", top_grid_x24_prev);
		nummismatches = nummismatches + 1;
		on_first_change[25] = 1'b0;
		last_top_grid_x24_exp[9] = top_grid_x24_expected_prev[9];
	end
	if (
		( top_grid_x25_expected_prev[0] !== 1'bx ) && ( top_grid_x25_prev[0] !== top_grid_x25_expected_prev[0] )
		&& ((top_grid_x25_expected_prev[0] !== last_top_grid_x25_exp[0]) ||
			on_first_change[26])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x25[0] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x25_expected_prev);
		$display ("     Real value = %b", top_grid_x25_prev);
		nummismatches = nummismatches + 1;
		on_first_change[26] = 1'b0;
		last_top_grid_x25_exp[0] = top_grid_x25_expected_prev[0];
	end
	if (
		( top_grid_x25_expected_prev[1] !== 1'bx ) && ( top_grid_x25_prev[1] !== top_grid_x25_expected_prev[1] )
		&& ((top_grid_x25_expected_prev[1] !== last_top_grid_x25_exp[1]) ||
			on_first_change[26])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x25[1] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x25_expected_prev);
		$display ("     Real value = %b", top_grid_x25_prev);
		nummismatches = nummismatches + 1;
		on_first_change[26] = 1'b0;
		last_top_grid_x25_exp[1] = top_grid_x25_expected_prev[1];
	end
	if (
		( top_grid_x25_expected_prev[2] !== 1'bx ) && ( top_grid_x25_prev[2] !== top_grid_x25_expected_prev[2] )
		&& ((top_grid_x25_expected_prev[2] !== last_top_grid_x25_exp[2]) ||
			on_first_change[26])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x25[2] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x25_expected_prev);
		$display ("     Real value = %b", top_grid_x25_prev);
		nummismatches = nummismatches + 1;
		on_first_change[26] = 1'b0;
		last_top_grid_x25_exp[2] = top_grid_x25_expected_prev[2];
	end
	if (
		( top_grid_x25_expected_prev[3] !== 1'bx ) && ( top_grid_x25_prev[3] !== top_grid_x25_expected_prev[3] )
		&& ((top_grid_x25_expected_prev[3] !== last_top_grid_x25_exp[3]) ||
			on_first_change[26])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x25[3] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x25_expected_prev);
		$display ("     Real value = %b", top_grid_x25_prev);
		nummismatches = nummismatches + 1;
		on_first_change[26] = 1'b0;
		last_top_grid_x25_exp[3] = top_grid_x25_expected_prev[3];
	end
	if (
		( top_grid_x25_expected_prev[4] !== 1'bx ) && ( top_grid_x25_prev[4] !== top_grid_x25_expected_prev[4] )
		&& ((top_grid_x25_expected_prev[4] !== last_top_grid_x25_exp[4]) ||
			on_first_change[26])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x25[4] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x25_expected_prev);
		$display ("     Real value = %b", top_grid_x25_prev);
		nummismatches = nummismatches + 1;
		on_first_change[26] = 1'b0;
		last_top_grid_x25_exp[4] = top_grid_x25_expected_prev[4];
	end
	if (
		( top_grid_x25_expected_prev[5] !== 1'bx ) && ( top_grid_x25_prev[5] !== top_grid_x25_expected_prev[5] )
		&& ((top_grid_x25_expected_prev[5] !== last_top_grid_x25_exp[5]) ||
			on_first_change[26])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x25[5] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x25_expected_prev);
		$display ("     Real value = %b", top_grid_x25_prev);
		nummismatches = nummismatches + 1;
		on_first_change[26] = 1'b0;
		last_top_grid_x25_exp[5] = top_grid_x25_expected_prev[5];
	end
	if (
		( top_grid_x25_expected_prev[6] !== 1'bx ) && ( top_grid_x25_prev[6] !== top_grid_x25_expected_prev[6] )
		&& ((top_grid_x25_expected_prev[6] !== last_top_grid_x25_exp[6]) ||
			on_first_change[26])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x25[6] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x25_expected_prev);
		$display ("     Real value = %b", top_grid_x25_prev);
		nummismatches = nummismatches + 1;
		on_first_change[26] = 1'b0;
		last_top_grid_x25_exp[6] = top_grid_x25_expected_prev[6];
	end
	if (
		( top_grid_x25_expected_prev[7] !== 1'bx ) && ( top_grid_x25_prev[7] !== top_grid_x25_expected_prev[7] )
		&& ((top_grid_x25_expected_prev[7] !== last_top_grid_x25_exp[7]) ||
			on_first_change[26])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x25[7] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x25_expected_prev);
		$display ("     Real value = %b", top_grid_x25_prev);
		nummismatches = nummismatches + 1;
		on_first_change[26] = 1'b0;
		last_top_grid_x25_exp[7] = top_grid_x25_expected_prev[7];
	end
	if (
		( top_grid_x25_expected_prev[8] !== 1'bx ) && ( top_grid_x25_prev[8] !== top_grid_x25_expected_prev[8] )
		&& ((top_grid_x25_expected_prev[8] !== last_top_grid_x25_exp[8]) ||
			on_first_change[26])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x25[8] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x25_expected_prev);
		$display ("     Real value = %b", top_grid_x25_prev);
		nummismatches = nummismatches + 1;
		on_first_change[26] = 1'b0;
		last_top_grid_x25_exp[8] = top_grid_x25_expected_prev[8];
	end
	if (
		( top_grid_x25_expected_prev[9] !== 1'bx ) && ( top_grid_x25_prev[9] !== top_grid_x25_expected_prev[9] )
		&& ((top_grid_x25_expected_prev[9] !== last_top_grid_x25_exp[9]) ||
			on_first_change[26])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x25[9] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x25_expected_prev);
		$display ("     Real value = %b", top_grid_x25_prev);
		nummismatches = nummismatches + 1;
		on_first_change[26] = 1'b0;
		last_top_grid_x25_exp[9] = top_grid_x25_expected_prev[9];
	end
	if (
		( top_grid_x26_expected_prev[0] !== 1'bx ) && ( top_grid_x26_prev[0] !== top_grid_x26_expected_prev[0] )
		&& ((top_grid_x26_expected_prev[0] !== last_top_grid_x26_exp[0]) ||
			on_first_change[27])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x26[0] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x26_expected_prev);
		$display ("     Real value = %b", top_grid_x26_prev);
		nummismatches = nummismatches + 1;
		on_first_change[27] = 1'b0;
		last_top_grid_x26_exp[0] = top_grid_x26_expected_prev[0];
	end
	if (
		( top_grid_x26_expected_prev[1] !== 1'bx ) && ( top_grid_x26_prev[1] !== top_grid_x26_expected_prev[1] )
		&& ((top_grid_x26_expected_prev[1] !== last_top_grid_x26_exp[1]) ||
			on_first_change[27])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x26[1] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x26_expected_prev);
		$display ("     Real value = %b", top_grid_x26_prev);
		nummismatches = nummismatches + 1;
		on_first_change[27] = 1'b0;
		last_top_grid_x26_exp[1] = top_grid_x26_expected_prev[1];
	end
	if (
		( top_grid_x26_expected_prev[2] !== 1'bx ) && ( top_grid_x26_prev[2] !== top_grid_x26_expected_prev[2] )
		&& ((top_grid_x26_expected_prev[2] !== last_top_grid_x26_exp[2]) ||
			on_first_change[27])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x26[2] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x26_expected_prev);
		$display ("     Real value = %b", top_grid_x26_prev);
		nummismatches = nummismatches + 1;
		on_first_change[27] = 1'b0;
		last_top_grid_x26_exp[2] = top_grid_x26_expected_prev[2];
	end
	if (
		( top_grid_x26_expected_prev[3] !== 1'bx ) && ( top_grid_x26_prev[3] !== top_grid_x26_expected_prev[3] )
		&& ((top_grid_x26_expected_prev[3] !== last_top_grid_x26_exp[3]) ||
			on_first_change[27])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x26[3] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x26_expected_prev);
		$display ("     Real value = %b", top_grid_x26_prev);
		nummismatches = nummismatches + 1;
		on_first_change[27] = 1'b0;
		last_top_grid_x26_exp[3] = top_grid_x26_expected_prev[3];
	end
	if (
		( top_grid_x26_expected_prev[4] !== 1'bx ) && ( top_grid_x26_prev[4] !== top_grid_x26_expected_prev[4] )
		&& ((top_grid_x26_expected_prev[4] !== last_top_grid_x26_exp[4]) ||
			on_first_change[27])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x26[4] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x26_expected_prev);
		$display ("     Real value = %b", top_grid_x26_prev);
		nummismatches = nummismatches + 1;
		on_first_change[27] = 1'b0;
		last_top_grid_x26_exp[4] = top_grid_x26_expected_prev[4];
	end
	if (
		( top_grid_x26_expected_prev[5] !== 1'bx ) && ( top_grid_x26_prev[5] !== top_grid_x26_expected_prev[5] )
		&& ((top_grid_x26_expected_prev[5] !== last_top_grid_x26_exp[5]) ||
			on_first_change[27])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x26[5] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x26_expected_prev);
		$display ("     Real value = %b", top_grid_x26_prev);
		nummismatches = nummismatches + 1;
		on_first_change[27] = 1'b0;
		last_top_grid_x26_exp[5] = top_grid_x26_expected_prev[5];
	end
	if (
		( top_grid_x26_expected_prev[6] !== 1'bx ) && ( top_grid_x26_prev[6] !== top_grid_x26_expected_prev[6] )
		&& ((top_grid_x26_expected_prev[6] !== last_top_grid_x26_exp[6]) ||
			on_first_change[27])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x26[6] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x26_expected_prev);
		$display ("     Real value = %b", top_grid_x26_prev);
		nummismatches = nummismatches + 1;
		on_first_change[27] = 1'b0;
		last_top_grid_x26_exp[6] = top_grid_x26_expected_prev[6];
	end
	if (
		( top_grid_x26_expected_prev[7] !== 1'bx ) && ( top_grid_x26_prev[7] !== top_grid_x26_expected_prev[7] )
		&& ((top_grid_x26_expected_prev[7] !== last_top_grid_x26_exp[7]) ||
			on_first_change[27])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x26[7] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x26_expected_prev);
		$display ("     Real value = %b", top_grid_x26_prev);
		nummismatches = nummismatches + 1;
		on_first_change[27] = 1'b0;
		last_top_grid_x26_exp[7] = top_grid_x26_expected_prev[7];
	end
	if (
		( top_grid_x26_expected_prev[8] !== 1'bx ) && ( top_grid_x26_prev[8] !== top_grid_x26_expected_prev[8] )
		&& ((top_grid_x26_expected_prev[8] !== last_top_grid_x26_exp[8]) ||
			on_first_change[27])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x26[8] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x26_expected_prev);
		$display ("     Real value = %b", top_grid_x26_prev);
		nummismatches = nummismatches + 1;
		on_first_change[27] = 1'b0;
		last_top_grid_x26_exp[8] = top_grid_x26_expected_prev[8];
	end
	if (
		( top_grid_x26_expected_prev[9] !== 1'bx ) && ( top_grid_x26_prev[9] !== top_grid_x26_expected_prev[9] )
		&& ((top_grid_x26_expected_prev[9] !== last_top_grid_x26_exp[9]) ||
			on_first_change[27])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x26[9] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x26_expected_prev);
		$display ("     Real value = %b", top_grid_x26_prev);
		nummismatches = nummismatches + 1;
		on_first_change[27] = 1'b0;
		last_top_grid_x26_exp[9] = top_grid_x26_expected_prev[9];
	end
	if (
		( top_grid_x27_expected_prev[0] !== 1'bx ) && ( top_grid_x27_prev[0] !== top_grid_x27_expected_prev[0] )
		&& ((top_grid_x27_expected_prev[0] !== last_top_grid_x27_exp[0]) ||
			on_first_change[28])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x27[0] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x27_expected_prev);
		$display ("     Real value = %b", top_grid_x27_prev);
		nummismatches = nummismatches + 1;
		on_first_change[28] = 1'b0;
		last_top_grid_x27_exp[0] = top_grid_x27_expected_prev[0];
	end
	if (
		( top_grid_x27_expected_prev[1] !== 1'bx ) && ( top_grid_x27_prev[1] !== top_grid_x27_expected_prev[1] )
		&& ((top_grid_x27_expected_prev[1] !== last_top_grid_x27_exp[1]) ||
			on_first_change[28])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x27[1] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x27_expected_prev);
		$display ("     Real value = %b", top_grid_x27_prev);
		nummismatches = nummismatches + 1;
		on_first_change[28] = 1'b0;
		last_top_grid_x27_exp[1] = top_grid_x27_expected_prev[1];
	end
	if (
		( top_grid_x27_expected_prev[2] !== 1'bx ) && ( top_grid_x27_prev[2] !== top_grid_x27_expected_prev[2] )
		&& ((top_grid_x27_expected_prev[2] !== last_top_grid_x27_exp[2]) ||
			on_first_change[28])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x27[2] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x27_expected_prev);
		$display ("     Real value = %b", top_grid_x27_prev);
		nummismatches = nummismatches + 1;
		on_first_change[28] = 1'b0;
		last_top_grid_x27_exp[2] = top_grid_x27_expected_prev[2];
	end
	if (
		( top_grid_x27_expected_prev[3] !== 1'bx ) && ( top_grid_x27_prev[3] !== top_grid_x27_expected_prev[3] )
		&& ((top_grid_x27_expected_prev[3] !== last_top_grid_x27_exp[3]) ||
			on_first_change[28])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x27[3] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x27_expected_prev);
		$display ("     Real value = %b", top_grid_x27_prev);
		nummismatches = nummismatches + 1;
		on_first_change[28] = 1'b0;
		last_top_grid_x27_exp[3] = top_grid_x27_expected_prev[3];
	end
	if (
		( top_grid_x27_expected_prev[4] !== 1'bx ) && ( top_grid_x27_prev[4] !== top_grid_x27_expected_prev[4] )
		&& ((top_grid_x27_expected_prev[4] !== last_top_grid_x27_exp[4]) ||
			on_first_change[28])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x27[4] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x27_expected_prev);
		$display ("     Real value = %b", top_grid_x27_prev);
		nummismatches = nummismatches + 1;
		on_first_change[28] = 1'b0;
		last_top_grid_x27_exp[4] = top_grid_x27_expected_prev[4];
	end
	if (
		( top_grid_x27_expected_prev[5] !== 1'bx ) && ( top_grid_x27_prev[5] !== top_grid_x27_expected_prev[5] )
		&& ((top_grid_x27_expected_prev[5] !== last_top_grid_x27_exp[5]) ||
			on_first_change[28])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x27[5] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x27_expected_prev);
		$display ("     Real value = %b", top_grid_x27_prev);
		nummismatches = nummismatches + 1;
		on_first_change[28] = 1'b0;
		last_top_grid_x27_exp[5] = top_grid_x27_expected_prev[5];
	end
	if (
		( top_grid_x27_expected_prev[6] !== 1'bx ) && ( top_grid_x27_prev[6] !== top_grid_x27_expected_prev[6] )
		&& ((top_grid_x27_expected_prev[6] !== last_top_grid_x27_exp[6]) ||
			on_first_change[28])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x27[6] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x27_expected_prev);
		$display ("     Real value = %b", top_grid_x27_prev);
		nummismatches = nummismatches + 1;
		on_first_change[28] = 1'b0;
		last_top_grid_x27_exp[6] = top_grid_x27_expected_prev[6];
	end
	if (
		( top_grid_x27_expected_prev[7] !== 1'bx ) && ( top_grid_x27_prev[7] !== top_grid_x27_expected_prev[7] )
		&& ((top_grid_x27_expected_prev[7] !== last_top_grid_x27_exp[7]) ||
			on_first_change[28])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x27[7] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x27_expected_prev);
		$display ("     Real value = %b", top_grid_x27_prev);
		nummismatches = nummismatches + 1;
		on_first_change[28] = 1'b0;
		last_top_grid_x27_exp[7] = top_grid_x27_expected_prev[7];
	end
	if (
		( top_grid_x27_expected_prev[8] !== 1'bx ) && ( top_grid_x27_prev[8] !== top_grid_x27_expected_prev[8] )
		&& ((top_grid_x27_expected_prev[8] !== last_top_grid_x27_exp[8]) ||
			on_first_change[28])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x27[8] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x27_expected_prev);
		$display ("     Real value = %b", top_grid_x27_prev);
		nummismatches = nummismatches + 1;
		on_first_change[28] = 1'b0;
		last_top_grid_x27_exp[8] = top_grid_x27_expected_prev[8];
	end
	if (
		( top_grid_x27_expected_prev[9] !== 1'bx ) && ( top_grid_x27_prev[9] !== top_grid_x27_expected_prev[9] )
		&& ((top_grid_x27_expected_prev[9] !== last_top_grid_x27_exp[9]) ||
			on_first_change[28])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x27[9] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x27_expected_prev);
		$display ("     Real value = %b", top_grid_x27_prev);
		nummismatches = nummismatches + 1;
		on_first_change[28] = 1'b0;
		last_top_grid_x27_exp[9] = top_grid_x27_expected_prev[9];
	end
	if (
		( top_grid_x28_expected_prev[0] !== 1'bx ) && ( top_grid_x28_prev[0] !== top_grid_x28_expected_prev[0] )
		&& ((top_grid_x28_expected_prev[0] !== last_top_grid_x28_exp[0]) ||
			on_first_change[29])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x28[0] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x28_expected_prev);
		$display ("     Real value = %b", top_grid_x28_prev);
		nummismatches = nummismatches + 1;
		on_first_change[29] = 1'b0;
		last_top_grid_x28_exp[0] = top_grid_x28_expected_prev[0];
	end
	if (
		( top_grid_x28_expected_prev[1] !== 1'bx ) && ( top_grid_x28_prev[1] !== top_grid_x28_expected_prev[1] )
		&& ((top_grid_x28_expected_prev[1] !== last_top_grid_x28_exp[1]) ||
			on_first_change[29])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x28[1] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x28_expected_prev);
		$display ("     Real value = %b", top_grid_x28_prev);
		nummismatches = nummismatches + 1;
		on_first_change[29] = 1'b0;
		last_top_grid_x28_exp[1] = top_grid_x28_expected_prev[1];
	end
	if (
		( top_grid_x28_expected_prev[2] !== 1'bx ) && ( top_grid_x28_prev[2] !== top_grid_x28_expected_prev[2] )
		&& ((top_grid_x28_expected_prev[2] !== last_top_grid_x28_exp[2]) ||
			on_first_change[29])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x28[2] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x28_expected_prev);
		$display ("     Real value = %b", top_grid_x28_prev);
		nummismatches = nummismatches + 1;
		on_first_change[29] = 1'b0;
		last_top_grid_x28_exp[2] = top_grid_x28_expected_prev[2];
	end
	if (
		( top_grid_x28_expected_prev[3] !== 1'bx ) && ( top_grid_x28_prev[3] !== top_grid_x28_expected_prev[3] )
		&& ((top_grid_x28_expected_prev[3] !== last_top_grid_x28_exp[3]) ||
			on_first_change[29])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x28[3] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x28_expected_prev);
		$display ("     Real value = %b", top_grid_x28_prev);
		nummismatches = nummismatches + 1;
		on_first_change[29] = 1'b0;
		last_top_grid_x28_exp[3] = top_grid_x28_expected_prev[3];
	end
	if (
		( top_grid_x28_expected_prev[4] !== 1'bx ) && ( top_grid_x28_prev[4] !== top_grid_x28_expected_prev[4] )
		&& ((top_grid_x28_expected_prev[4] !== last_top_grid_x28_exp[4]) ||
			on_first_change[29])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x28[4] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x28_expected_prev);
		$display ("     Real value = %b", top_grid_x28_prev);
		nummismatches = nummismatches + 1;
		on_first_change[29] = 1'b0;
		last_top_grid_x28_exp[4] = top_grid_x28_expected_prev[4];
	end
	if (
		( top_grid_x28_expected_prev[5] !== 1'bx ) && ( top_grid_x28_prev[5] !== top_grid_x28_expected_prev[5] )
		&& ((top_grid_x28_expected_prev[5] !== last_top_grid_x28_exp[5]) ||
			on_first_change[29])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x28[5] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x28_expected_prev);
		$display ("     Real value = %b", top_grid_x28_prev);
		nummismatches = nummismatches + 1;
		on_first_change[29] = 1'b0;
		last_top_grid_x28_exp[5] = top_grid_x28_expected_prev[5];
	end
	if (
		( top_grid_x28_expected_prev[6] !== 1'bx ) && ( top_grid_x28_prev[6] !== top_grid_x28_expected_prev[6] )
		&& ((top_grid_x28_expected_prev[6] !== last_top_grid_x28_exp[6]) ||
			on_first_change[29])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x28[6] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x28_expected_prev);
		$display ("     Real value = %b", top_grid_x28_prev);
		nummismatches = nummismatches + 1;
		on_first_change[29] = 1'b0;
		last_top_grid_x28_exp[6] = top_grid_x28_expected_prev[6];
	end
	if (
		( top_grid_x28_expected_prev[7] !== 1'bx ) && ( top_grid_x28_prev[7] !== top_grid_x28_expected_prev[7] )
		&& ((top_grid_x28_expected_prev[7] !== last_top_grid_x28_exp[7]) ||
			on_first_change[29])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x28[7] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x28_expected_prev);
		$display ("     Real value = %b", top_grid_x28_prev);
		nummismatches = nummismatches + 1;
		on_first_change[29] = 1'b0;
		last_top_grid_x28_exp[7] = top_grid_x28_expected_prev[7];
	end
	if (
		( top_grid_x28_expected_prev[8] !== 1'bx ) && ( top_grid_x28_prev[8] !== top_grid_x28_expected_prev[8] )
		&& ((top_grid_x28_expected_prev[8] !== last_top_grid_x28_exp[8]) ||
			on_first_change[29])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x28[8] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x28_expected_prev);
		$display ("     Real value = %b", top_grid_x28_prev);
		nummismatches = nummismatches + 1;
		on_first_change[29] = 1'b0;
		last_top_grid_x28_exp[8] = top_grid_x28_expected_prev[8];
	end
	if (
		( top_grid_x28_expected_prev[9] !== 1'bx ) && ( top_grid_x28_prev[9] !== top_grid_x28_expected_prev[9] )
		&& ((top_grid_x28_expected_prev[9] !== last_top_grid_x28_exp[9]) ||
			on_first_change[29])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x28[9] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x28_expected_prev);
		$display ("     Real value = %b", top_grid_x28_prev);
		nummismatches = nummismatches + 1;
		on_first_change[29] = 1'b0;
		last_top_grid_x28_exp[9] = top_grid_x28_expected_prev[9];
	end
	if (
		( top_grid_x29_expected_prev[0] !== 1'bx ) && ( top_grid_x29_prev[0] !== top_grid_x29_expected_prev[0] )
		&& ((top_grid_x29_expected_prev[0] !== last_top_grid_x29_exp[0]) ||
			on_first_change[30])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x29[0] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x29_expected_prev);
		$display ("     Real value = %b", top_grid_x29_prev);
		nummismatches = nummismatches + 1;
		on_first_change[30] = 1'b0;
		last_top_grid_x29_exp[0] = top_grid_x29_expected_prev[0];
	end
	if (
		( top_grid_x29_expected_prev[1] !== 1'bx ) && ( top_grid_x29_prev[1] !== top_grid_x29_expected_prev[1] )
		&& ((top_grid_x29_expected_prev[1] !== last_top_grid_x29_exp[1]) ||
			on_first_change[30])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x29[1] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x29_expected_prev);
		$display ("     Real value = %b", top_grid_x29_prev);
		nummismatches = nummismatches + 1;
		on_first_change[30] = 1'b0;
		last_top_grid_x29_exp[1] = top_grid_x29_expected_prev[1];
	end
	if (
		( top_grid_x29_expected_prev[2] !== 1'bx ) && ( top_grid_x29_prev[2] !== top_grid_x29_expected_prev[2] )
		&& ((top_grid_x29_expected_prev[2] !== last_top_grid_x29_exp[2]) ||
			on_first_change[30])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x29[2] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x29_expected_prev);
		$display ("     Real value = %b", top_grid_x29_prev);
		nummismatches = nummismatches + 1;
		on_first_change[30] = 1'b0;
		last_top_grid_x29_exp[2] = top_grid_x29_expected_prev[2];
	end
	if (
		( top_grid_x29_expected_prev[3] !== 1'bx ) && ( top_grid_x29_prev[3] !== top_grid_x29_expected_prev[3] )
		&& ((top_grid_x29_expected_prev[3] !== last_top_grid_x29_exp[3]) ||
			on_first_change[30])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x29[3] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x29_expected_prev);
		$display ("     Real value = %b", top_grid_x29_prev);
		nummismatches = nummismatches + 1;
		on_first_change[30] = 1'b0;
		last_top_grid_x29_exp[3] = top_grid_x29_expected_prev[3];
	end
	if (
		( top_grid_x29_expected_prev[4] !== 1'bx ) && ( top_grid_x29_prev[4] !== top_grid_x29_expected_prev[4] )
		&& ((top_grid_x29_expected_prev[4] !== last_top_grid_x29_exp[4]) ||
			on_first_change[30])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x29[4] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x29_expected_prev);
		$display ("     Real value = %b", top_grid_x29_prev);
		nummismatches = nummismatches + 1;
		on_first_change[30] = 1'b0;
		last_top_grid_x29_exp[4] = top_grid_x29_expected_prev[4];
	end
	if (
		( top_grid_x29_expected_prev[5] !== 1'bx ) && ( top_grid_x29_prev[5] !== top_grid_x29_expected_prev[5] )
		&& ((top_grid_x29_expected_prev[5] !== last_top_grid_x29_exp[5]) ||
			on_first_change[30])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x29[5] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x29_expected_prev);
		$display ("     Real value = %b", top_grid_x29_prev);
		nummismatches = nummismatches + 1;
		on_first_change[30] = 1'b0;
		last_top_grid_x29_exp[5] = top_grid_x29_expected_prev[5];
	end
	if (
		( top_grid_x29_expected_prev[6] !== 1'bx ) && ( top_grid_x29_prev[6] !== top_grid_x29_expected_prev[6] )
		&& ((top_grid_x29_expected_prev[6] !== last_top_grid_x29_exp[6]) ||
			on_first_change[30])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x29[6] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x29_expected_prev);
		$display ("     Real value = %b", top_grid_x29_prev);
		nummismatches = nummismatches + 1;
		on_first_change[30] = 1'b0;
		last_top_grid_x29_exp[6] = top_grid_x29_expected_prev[6];
	end
	if (
		( top_grid_x29_expected_prev[7] !== 1'bx ) && ( top_grid_x29_prev[7] !== top_grid_x29_expected_prev[7] )
		&& ((top_grid_x29_expected_prev[7] !== last_top_grid_x29_exp[7]) ||
			on_first_change[30])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x29[7] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x29_expected_prev);
		$display ("     Real value = %b", top_grid_x29_prev);
		nummismatches = nummismatches + 1;
		on_first_change[30] = 1'b0;
		last_top_grid_x29_exp[7] = top_grid_x29_expected_prev[7];
	end
	if (
		( top_grid_x29_expected_prev[8] !== 1'bx ) && ( top_grid_x29_prev[8] !== top_grid_x29_expected_prev[8] )
		&& ((top_grid_x29_expected_prev[8] !== last_top_grid_x29_exp[8]) ||
			on_first_change[30])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x29[8] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x29_expected_prev);
		$display ("     Real value = %b", top_grid_x29_prev);
		nummismatches = nummismatches + 1;
		on_first_change[30] = 1'b0;
		last_top_grid_x29_exp[8] = top_grid_x29_expected_prev[8];
	end
	if (
		( top_grid_x29_expected_prev[9] !== 1'bx ) && ( top_grid_x29_prev[9] !== top_grid_x29_expected_prev[9] )
		&& ((top_grid_x29_expected_prev[9] !== last_top_grid_x29_exp[9]) ||
			on_first_change[30])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x29[9] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x29_expected_prev);
		$display ("     Real value = %b", top_grid_x29_prev);
		nummismatches = nummismatches + 1;
		on_first_change[30] = 1'b0;
		last_top_grid_x29_exp[9] = top_grid_x29_expected_prev[9];
	end
	if (
		( top_grid_x30_expected_prev[0] !== 1'bx ) && ( top_grid_x30_prev[0] !== top_grid_x30_expected_prev[0] )
		&& ((top_grid_x30_expected_prev[0] !== last_top_grid_x30_exp[0]) ||
			on_first_change[31])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x30[0] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x30_expected_prev);
		$display ("     Real value = %b", top_grid_x30_prev);
		nummismatches = nummismatches + 1;
		on_first_change[31] = 1'b0;
		last_top_grid_x30_exp[0] = top_grid_x30_expected_prev[0];
	end
	if (
		( top_grid_x30_expected_prev[1] !== 1'bx ) && ( top_grid_x30_prev[1] !== top_grid_x30_expected_prev[1] )
		&& ((top_grid_x30_expected_prev[1] !== last_top_grid_x30_exp[1]) ||
			on_first_change[31])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x30[1] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x30_expected_prev);
		$display ("     Real value = %b", top_grid_x30_prev);
		nummismatches = nummismatches + 1;
		on_first_change[31] = 1'b0;
		last_top_grid_x30_exp[1] = top_grid_x30_expected_prev[1];
	end
	if (
		( top_grid_x30_expected_prev[2] !== 1'bx ) && ( top_grid_x30_prev[2] !== top_grid_x30_expected_prev[2] )
		&& ((top_grid_x30_expected_prev[2] !== last_top_grid_x30_exp[2]) ||
			on_first_change[31])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x30[2] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x30_expected_prev);
		$display ("     Real value = %b", top_grid_x30_prev);
		nummismatches = nummismatches + 1;
		on_first_change[31] = 1'b0;
		last_top_grid_x30_exp[2] = top_grid_x30_expected_prev[2];
	end
	if (
		( top_grid_x30_expected_prev[3] !== 1'bx ) && ( top_grid_x30_prev[3] !== top_grid_x30_expected_prev[3] )
		&& ((top_grid_x30_expected_prev[3] !== last_top_grid_x30_exp[3]) ||
			on_first_change[31])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x30[3] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x30_expected_prev);
		$display ("     Real value = %b", top_grid_x30_prev);
		nummismatches = nummismatches + 1;
		on_first_change[31] = 1'b0;
		last_top_grid_x30_exp[3] = top_grid_x30_expected_prev[3];
	end
	if (
		( top_grid_x30_expected_prev[4] !== 1'bx ) && ( top_grid_x30_prev[4] !== top_grid_x30_expected_prev[4] )
		&& ((top_grid_x30_expected_prev[4] !== last_top_grid_x30_exp[4]) ||
			on_first_change[31])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x30[4] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x30_expected_prev);
		$display ("     Real value = %b", top_grid_x30_prev);
		nummismatches = nummismatches + 1;
		on_first_change[31] = 1'b0;
		last_top_grid_x30_exp[4] = top_grid_x30_expected_prev[4];
	end
	if (
		( top_grid_x30_expected_prev[5] !== 1'bx ) && ( top_grid_x30_prev[5] !== top_grid_x30_expected_prev[5] )
		&& ((top_grid_x30_expected_prev[5] !== last_top_grid_x30_exp[5]) ||
			on_first_change[31])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x30[5] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x30_expected_prev);
		$display ("     Real value = %b", top_grid_x30_prev);
		nummismatches = nummismatches + 1;
		on_first_change[31] = 1'b0;
		last_top_grid_x30_exp[5] = top_grid_x30_expected_prev[5];
	end
	if (
		( top_grid_x30_expected_prev[6] !== 1'bx ) && ( top_grid_x30_prev[6] !== top_grid_x30_expected_prev[6] )
		&& ((top_grid_x30_expected_prev[6] !== last_top_grid_x30_exp[6]) ||
			on_first_change[31])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x30[6] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x30_expected_prev);
		$display ("     Real value = %b", top_grid_x30_prev);
		nummismatches = nummismatches + 1;
		on_first_change[31] = 1'b0;
		last_top_grid_x30_exp[6] = top_grid_x30_expected_prev[6];
	end
	if (
		( top_grid_x30_expected_prev[7] !== 1'bx ) && ( top_grid_x30_prev[7] !== top_grid_x30_expected_prev[7] )
		&& ((top_grid_x30_expected_prev[7] !== last_top_grid_x30_exp[7]) ||
			on_first_change[31])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x30[7] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x30_expected_prev);
		$display ("     Real value = %b", top_grid_x30_prev);
		nummismatches = nummismatches + 1;
		on_first_change[31] = 1'b0;
		last_top_grid_x30_exp[7] = top_grid_x30_expected_prev[7];
	end
	if (
		( top_grid_x30_expected_prev[8] !== 1'bx ) && ( top_grid_x30_prev[8] !== top_grid_x30_expected_prev[8] )
		&& ((top_grid_x30_expected_prev[8] !== last_top_grid_x30_exp[8]) ||
			on_first_change[31])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x30[8] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x30_expected_prev);
		$display ("     Real value = %b", top_grid_x30_prev);
		nummismatches = nummismatches + 1;
		on_first_change[31] = 1'b0;
		last_top_grid_x30_exp[8] = top_grid_x30_expected_prev[8];
	end
	if (
		( top_grid_x30_expected_prev[9] !== 1'bx ) && ( top_grid_x30_prev[9] !== top_grid_x30_expected_prev[9] )
		&& ((top_grid_x30_expected_prev[9] !== last_top_grid_x30_exp[9]) ||
			on_first_change[31])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x30[9] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x30_expected_prev);
		$display ("     Real value = %b", top_grid_x30_prev);
		nummismatches = nummismatches + 1;
		on_first_change[31] = 1'b0;
		last_top_grid_x30_exp[9] = top_grid_x30_expected_prev[9];
	end
	if (
		( top_grid_x31_expected_prev[0] !== 1'bx ) && ( top_grid_x31_prev[0] !== top_grid_x31_expected_prev[0] )
		&& ((top_grid_x31_expected_prev[0] !== last_top_grid_x31_exp[0]) ||
			on_first_change[32])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x31[0] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x31_expected_prev);
		$display ("     Real value = %b", top_grid_x31_prev);
		nummismatches = nummismatches + 1;
		on_first_change[32] = 1'b0;
		last_top_grid_x31_exp[0] = top_grid_x31_expected_prev[0];
	end
	if (
		( top_grid_x31_expected_prev[1] !== 1'bx ) && ( top_grid_x31_prev[1] !== top_grid_x31_expected_prev[1] )
		&& ((top_grid_x31_expected_prev[1] !== last_top_grid_x31_exp[1]) ||
			on_first_change[32])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x31[1] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x31_expected_prev);
		$display ("     Real value = %b", top_grid_x31_prev);
		nummismatches = nummismatches + 1;
		on_first_change[32] = 1'b0;
		last_top_grid_x31_exp[1] = top_grid_x31_expected_prev[1];
	end
	if (
		( top_grid_x31_expected_prev[2] !== 1'bx ) && ( top_grid_x31_prev[2] !== top_grid_x31_expected_prev[2] )
		&& ((top_grid_x31_expected_prev[2] !== last_top_grid_x31_exp[2]) ||
			on_first_change[32])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x31[2] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x31_expected_prev);
		$display ("     Real value = %b", top_grid_x31_prev);
		nummismatches = nummismatches + 1;
		on_first_change[32] = 1'b0;
		last_top_grid_x31_exp[2] = top_grid_x31_expected_prev[2];
	end
	if (
		( top_grid_x31_expected_prev[3] !== 1'bx ) && ( top_grid_x31_prev[3] !== top_grid_x31_expected_prev[3] )
		&& ((top_grid_x31_expected_prev[3] !== last_top_grid_x31_exp[3]) ||
			on_first_change[32])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x31[3] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x31_expected_prev);
		$display ("     Real value = %b", top_grid_x31_prev);
		nummismatches = nummismatches + 1;
		on_first_change[32] = 1'b0;
		last_top_grid_x31_exp[3] = top_grid_x31_expected_prev[3];
	end
	if (
		( top_grid_x31_expected_prev[4] !== 1'bx ) && ( top_grid_x31_prev[4] !== top_grid_x31_expected_prev[4] )
		&& ((top_grid_x31_expected_prev[4] !== last_top_grid_x31_exp[4]) ||
			on_first_change[32])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x31[4] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x31_expected_prev);
		$display ("     Real value = %b", top_grid_x31_prev);
		nummismatches = nummismatches + 1;
		on_first_change[32] = 1'b0;
		last_top_grid_x31_exp[4] = top_grid_x31_expected_prev[4];
	end
	if (
		( top_grid_x31_expected_prev[5] !== 1'bx ) && ( top_grid_x31_prev[5] !== top_grid_x31_expected_prev[5] )
		&& ((top_grid_x31_expected_prev[5] !== last_top_grid_x31_exp[5]) ||
			on_first_change[32])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x31[5] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x31_expected_prev);
		$display ("     Real value = %b", top_grid_x31_prev);
		nummismatches = nummismatches + 1;
		on_first_change[32] = 1'b0;
		last_top_grid_x31_exp[5] = top_grid_x31_expected_prev[5];
	end
	if (
		( top_grid_x31_expected_prev[6] !== 1'bx ) && ( top_grid_x31_prev[6] !== top_grid_x31_expected_prev[6] )
		&& ((top_grid_x31_expected_prev[6] !== last_top_grid_x31_exp[6]) ||
			on_first_change[32])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x31[6] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x31_expected_prev);
		$display ("     Real value = %b", top_grid_x31_prev);
		nummismatches = nummismatches + 1;
		on_first_change[32] = 1'b0;
		last_top_grid_x31_exp[6] = top_grid_x31_expected_prev[6];
	end
	if (
		( top_grid_x31_expected_prev[7] !== 1'bx ) && ( top_grid_x31_prev[7] !== top_grid_x31_expected_prev[7] )
		&& ((top_grid_x31_expected_prev[7] !== last_top_grid_x31_exp[7]) ||
			on_first_change[32])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x31[7] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x31_expected_prev);
		$display ("     Real value = %b", top_grid_x31_prev);
		nummismatches = nummismatches + 1;
		on_first_change[32] = 1'b0;
		last_top_grid_x31_exp[7] = top_grid_x31_expected_prev[7];
	end
	if (
		( top_grid_x31_expected_prev[8] !== 1'bx ) && ( top_grid_x31_prev[8] !== top_grid_x31_expected_prev[8] )
		&& ((top_grid_x31_expected_prev[8] !== last_top_grid_x31_exp[8]) ||
			on_first_change[32])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x31[8] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x31_expected_prev);
		$display ("     Real value = %b", top_grid_x31_prev);
		nummismatches = nummismatches + 1;
		on_first_change[32] = 1'b0;
		last_top_grid_x31_exp[8] = top_grid_x31_expected_prev[8];
	end
	if (
		( top_grid_x31_expected_prev[9] !== 1'bx ) && ( top_grid_x31_prev[9] !== top_grid_x31_expected_prev[9] )
		&& ((top_grid_x31_expected_prev[9] !== last_top_grid_x31_exp[9]) ||
			on_first_change[32])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port top_grid_x31[9] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", top_grid_x31_expected_prev);
		$display ("     Real value = %b", top_grid_x31_prev);
		nummismatches = nummismatches + 1;
		on_first_change[32] = 1'b0;
		last_top_grid_x31_exp[9] = top_grid_x31_expected_prev[9];
	end

	trigger <= ~trigger;
end
initial 

begin 
$timeformat(-12,3," ps",6);
#1000000;
if (nummismatches > 0)
	$display ("%d mismatched vectors : Simulation failed !",nummismatches);
else
	$display ("Simulation passed !");
$finish;
end 
endmodule

module TestVerilog_vlg_vec_tst();
// constants                                           
// general purpose registers
reg [9:0] first_red_pos_x;
reg [9:0] sec_red_pos_x;
// wires                                               
wire [9:0] top_grid_x0;
wire [9:0] top_grid_x1;
wire [9:0] top_grid_x2;
wire [9:0] top_grid_x3;
wire [9:0] top_grid_x4;
wire [9:0] top_grid_x5;
wire [9:0] top_grid_x6;
wire [9:0] top_grid_x7;
wire [9:0] top_grid_x8;
wire [9:0] top_grid_x9;
wire [9:0] top_grid_x10;
wire [9:0] top_grid_x11;
wire [9:0] top_grid_x12;
wire [9:0] top_grid_x13;
wire [9:0] top_grid_x14;
wire [9:0] top_grid_x15;
wire [9:0] top_grid_x16;
wire [9:0] top_grid_x17;
wire [9:0] top_grid_x18;
wire [9:0] top_grid_x19;
wire [9:0] top_grid_x20;
wire [9:0] top_grid_x21;
wire [9:0] top_grid_x22;
wire [9:0] top_grid_x23;
wire [9:0] top_grid_x24;
wire [9:0] top_grid_x25;
wire [9:0] top_grid_x26;
wire [9:0] top_grid_x27;
wire [9:0] top_grid_x28;
wire [9:0] top_grid_x29;
wire [9:0] top_grid_x30;
wire [9:0] top_grid_x31;

wire sampler;                             

// assign statements (if any)                          
TestVerilog i1 (
// port map - connection between master ports and signals/registers   
	.first_red_pos_x(first_red_pos_x),
	.sec_red_pos_x(sec_red_pos_x),
	.top_grid_x0(top_grid_x0),
	.top_grid_x1(top_grid_x1),
	.top_grid_x2(top_grid_x2),
	.top_grid_x3(top_grid_x3),
	.top_grid_x4(top_grid_x4),
	.top_grid_x5(top_grid_x5),
	.top_grid_x6(top_grid_x6),
	.top_grid_x7(top_grid_x7),
	.top_grid_x8(top_grid_x8),
	.top_grid_x9(top_grid_x9),
	.top_grid_x10(top_grid_x10),
	.top_grid_x11(top_grid_x11),
	.top_grid_x12(top_grid_x12),
	.top_grid_x13(top_grid_x13),
	.top_grid_x14(top_grid_x14),
	.top_grid_x15(top_grid_x15),
	.top_grid_x16(top_grid_x16),
	.top_grid_x17(top_grid_x17),
	.top_grid_x18(top_grid_x18),
	.top_grid_x19(top_grid_x19),
	.top_grid_x20(top_grid_x20),
	.top_grid_x21(top_grid_x21),
	.top_grid_x22(top_grid_x22),
	.top_grid_x23(top_grid_x23),
	.top_grid_x24(top_grid_x24),
	.top_grid_x25(top_grid_x25),
	.top_grid_x26(top_grid_x26),
	.top_grid_x27(top_grid_x27),
	.top_grid_x28(top_grid_x28),
	.top_grid_x29(top_grid_x29),
	.top_grid_x30(top_grid_x30),
	.top_grid_x31(top_grid_x31)
);
// first_red_pos_x[ 9 ]
initial
begin
	first_red_pos_x[9] = 1'b0;
end 
// first_red_pos_x[ 8 ]
initial
begin
	first_red_pos_x[8] = 1'b0;
end 
// first_red_pos_x[ 7 ]
initial
begin
	first_red_pos_x[7] = 1'b1;
end 
// first_red_pos_x[ 6 ]
initial
begin
	first_red_pos_x[6] = 1'b0;
end 
// first_red_pos_x[ 5 ]
initial
begin
	first_red_pos_x[5] = 1'b0;
end 
// first_red_pos_x[ 4 ]
initial
begin
	first_red_pos_x[4] = 1'b0;
end 
// first_red_pos_x[ 3 ]
initial
begin
	first_red_pos_x[3] = 1'b0;
end 
// first_red_pos_x[ 2 ]
initial
begin
	first_red_pos_x[2] = 1'b1;
end 
// first_red_pos_x[ 1 ]
initial
begin
	first_red_pos_x[1] = 1'b1;
end 
// first_red_pos_x[ 0 ]
initial
begin
	first_red_pos_x[0] = 1'b1;
end 
// sec_red_pos_x[ 9 ]
initial
begin
	sec_red_pos_x[9] = 1'b1;
end 
// sec_red_pos_x[ 8 ]
initial
begin
	sec_red_pos_x[8] = 1'b0;
end 
// sec_red_pos_x[ 7 ]
initial
begin
	sec_red_pos_x[7] = 1'b1;
end 
// sec_red_pos_x[ 6 ]
initial
begin
	sec_red_pos_x[6] = 1'b1;
end 
// sec_red_pos_x[ 5 ]
initial
begin
	sec_red_pos_x[5] = 1'b1;
end 
// sec_red_pos_x[ 4 ]
initial
begin
	sec_red_pos_x[4] = 1'b0;
end 
// sec_red_pos_x[ 3 ]
initial
begin
	sec_red_pos_x[3] = 1'b0;
end 
// sec_red_pos_x[ 2 ]
initial
begin
	sec_red_pos_x[2] = 1'b1;
end 
// sec_red_pos_x[ 1 ]
initial
begin
	sec_red_pos_x[1] = 1'b1;
end 
// sec_red_pos_x[ 0 ]
initial
begin
	sec_red_pos_x[0] = 1'b0;
end 

TestVerilog_vlg_sample_tst tb_sample (
	.first_red_pos_x(first_red_pos_x),
	.sec_red_pos_x(sec_red_pos_x),
	.sampler_tx(sampler)
);

TestVerilog_vlg_check_tst tb_out(
	.top_grid_x0(top_grid_x0),
	.top_grid_x1(top_grid_x1),
	.top_grid_x2(top_grid_x2),
	.top_grid_x3(top_grid_x3),
	.top_grid_x4(top_grid_x4),
	.top_grid_x5(top_grid_x5),
	.top_grid_x6(top_grid_x6),
	.top_grid_x7(top_grid_x7),
	.top_grid_x8(top_grid_x8),
	.top_grid_x9(top_grid_x9),
	.top_grid_x10(top_grid_x10),
	.top_grid_x11(top_grid_x11),
	.top_grid_x12(top_grid_x12),
	.top_grid_x13(top_grid_x13),
	.top_grid_x14(top_grid_x14),
	.top_grid_x15(top_grid_x15),
	.top_grid_x16(top_grid_x16),
	.top_grid_x17(top_grid_x17),
	.top_grid_x18(top_grid_x18),
	.top_grid_x19(top_grid_x19),
	.top_grid_x20(top_grid_x20),
	.top_grid_x21(top_grid_x21),
	.top_grid_x22(top_grid_x22),
	.top_grid_x23(top_grid_x23),
	.top_grid_x24(top_grid_x24),
	.top_grid_x25(top_grid_x25),
	.top_grid_x26(top_grid_x26),
	.top_grid_x27(top_grid_x27),
	.top_grid_x28(top_grid_x28),
	.top_grid_x29(top_grid_x29),
	.top_grid_x30(top_grid_x30),
	.top_grid_x31(top_grid_x31),
	.sampler_rx(sampler)
);
endmodule

